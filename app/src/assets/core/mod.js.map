{"version":3,"sources":["../../../../pkgs/core/src/input.ts","../../../../pkgs/core/src/kv.ts"],"sourcesContent":["// pkgs/core/input.ts\nexport type InputState = {\n  raw: string;\n};\n\nclass InputStore {\n  private state: InputState = { raw: \"\" };\n  private listeners = new Set<(s: InputState) => void>();\n\n  get() {\n    return this.state;\n  }\n\n  set(raw: string) {\n    this.state = { raw };\n    this.listeners.forEach((fn) => fn(this.state));\n  }\n\n  subscribe(fn: (s: InputState) => void) {\n    this.listeners.add(fn);\n    fn(this.state);\n    return () => this.listeners.delete(fn);\n  }\n}\n\nexport const input = new InputStore();\n","// pkgs/core/src/kv.ts\n// import { invoke } from \"@tauri-apps/api/core\";\n\n// @ts-ignore\nconst { invoke } = window.__TAURI__.core;\n\nexport interface KvItem<T> {\n  value: T;\n  metadata: {\n    key: string[];\n    created_at: number;\n    updated_at: number;\n  };\n}\n\nexport type KvMsg<T> =\n  | { _tag: \"None\"; result: null }\n  | { _tag: \"Error\"; result: string }\n  | { _tag: \"Ok\"; _type: \"List\"; result: KvItem<T>[] }\n  | { _tag: \"Ok\"; _type: \"Item\"; result: KvItem<T> }\n  | { _tag: \"Ok\"; _type: \"String\"; result: string };\n\nexport interface KvTable<T> {\n  list(): Promise<KvMsg<T>>;\n  get(key: string[]): Promise<KvMsg<T>>;\n  set(key: string[], value: T): Promise<KvMsg<T>>;\n  delete(key: string[]): Promise<KvMsg<void>>;\n}\n\nexport function kvTable<T>(baseKey: string): KvTable<T> {\n  return {\n    list: () => kvList<T>(baseKey),\n    get: (kvKey: string[]) => kvGet<T>(baseKey, kvKey),\n    set: (kvKey: string[], value: T) => kvSet<T>(baseKey, kvKey, value),\n    delete: (kvKey: string[]) => kvDelete<undefined>(baseKey, kvKey),\n  };\n}\n\nasync function kvList<T>(baseKey: string): Promise<KvMsg<T>> {\n  try {\n    const items = await invoke<KvItem<T>[]>(\"kv_list\", {\n      prefix: [baseKey],\n    });\n\n    if (!items.length) {\n      return { _tag: \"None\", result: null };\n    }\n\n    return { _tag: \"Ok\", _type: \"List\", result: items };\n  } catch (err) {\n    const errorMsg = err instanceof Error\n      ? err.message\n      : \"Error listing values\";\n    return { _tag: \"Error\", result: errorMsg };\n  }\n}\n\nasync function kvGet<T>(baseKey: string, key: string[]): Promise<KvMsg<T>> {\n  try {\n    const fullKey = [baseKey, ...key];\n    const result = await invoke<KvItem<T>>(\"kv_get\", {\n      key: fullKey,\n    });\n\n    if (result === null) {\n      return { _tag: \"None\", result: null };\n    }\n\n    return { _tag: \"Ok\", _type: \"Item\", result };\n  } catch (err) {\n    const errorMsg = err instanceof Error ? err.message : \"Error getting value\";\n    return { _tag: \"Error\", result: errorMsg };\n  }\n}\n\nasync function kvSet<T>(\n  baseKey: string,\n  key: string[],\n  value: T,\n): Promise<KvMsg<T>> {\n  try {\n    const fullKey = [baseKey, ...key];\n    await invoke<void>(\"kv_set\", { key: fullKey, value });\n\n    return { _tag: \"Ok\", _type: \"String\", result: `Set ${fullKey}` };\n  } catch (err) {\n    const errorMsg = err instanceof Error ? err.message : \"Error getting value\";\n    return { _tag: \"Error\", result: errorMsg };\n  }\n}\n\nasync function kvDelete<T>(baseKey: string, key: string[]): Promise<KvMsg<T>> {\n  try {\n    const fullKey = [baseKey, ...key];\n    await invoke<KvItem<T>>(\"kv_delete\", { key: fullKey });\n\n    return { _tag: \"Ok\", _type: \"String\", result: `Deleted ${fullKey}` };\n  } catch (err) {\n    const errorMsg = err instanceof Error\n      ? err.message\n      : \"Error deleting value\";\n    return { _tag: \"Error\", result: errorMsg };\n  }\n}\n"],"mappings":";AAKA,IAAM,aAAN,MAAiB;AAAA,EACP,QAAoB,EAAE,KAAK,GAAG;AAAA,EAC9B,YAAY,oBAAI,IAA6B;AAAA,EAErD,MAAM;AACJ,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,KAAa;AACf,SAAK,QAAQ,EAAE,IAAI;AACnB,SAAK,UAAU,QAAQ,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC;AAAA,EAC/C;AAAA,EAEA,UAAU,IAA6B;AACrC,SAAK,UAAU,IAAI,EAAE;AACrB,OAAG,KAAK,KAAK;AACb,WAAO,MAAM,KAAK,UAAU,OAAO,EAAE;AAAA,EACvC;AACF;AAEO,IAAM,QAAQ,IAAI,WAAW;;;ACrBpC,IAAM,EAAE,OAAO,IAAI,OAAO,UAAU;AAyB7B,SAAS,QAAW,SAA6B;AACtD,SAAO;AAAA,IACL,MAAM,MAAM,OAAU,OAAO;AAAA,IAC7B,KAAK,CAAC,UAAoB,MAAS,SAAS,KAAK;AAAA,IACjD,KAAK,CAAC,OAAiB,UAAa,MAAS,SAAS,OAAO,KAAK;AAAA,IAClE,QAAQ,CAAC,UAAoB,SAAoB,SAAS,KAAK;AAAA,EACjE;AACF;AAEA,eAAe,OAAU,SAAoC;AAC3D,MAAI;AACF,UAAM,QAAQ,MAAM,OAAoB,WAAW;AAAA,MACjD,QAAQ,CAAC,OAAO;AAAA,IAClB,CAAC;AAED,QAAI,CAAC,MAAM,QAAQ;AACjB,aAAO,EAAE,MAAM,QAAQ,QAAQ,KAAK;AAAA,IACtC;AAEA,WAAO,EAAE,MAAM,MAAM,OAAO,QAAQ,QAAQ,MAAM;AAAA,EACpD,SAAS,KAAK;AACZ,UAAM,WAAW,eAAe,QAC5B,IAAI,UACJ;AACJ,WAAO,EAAE,MAAM,SAAS,QAAQ,SAAS;AAAA,EAC3C;AACF;AAEA,eAAe,MAAS,SAAiB,KAAkC;AACzE,MAAI;AACF,UAAM,UAAU,CAAC,SAAS,GAAG,GAAG;AAChC,UAAM,SAAS,MAAM,OAAkB,UAAU;AAAA,MAC/C,KAAK;AAAA,IACP,CAAC;AAED,QAAI,WAAW,MAAM;AACnB,aAAO,EAAE,MAAM,QAAQ,QAAQ,KAAK;AAAA,IACtC;AAEA,WAAO,EAAE,MAAM,MAAM,OAAO,QAAQ,OAAO;AAAA,EAC7C,SAAS,KAAK;AACZ,UAAM,WAAW,eAAe,QAAQ,IAAI,UAAU;AACtD,WAAO,EAAE,MAAM,SAAS,QAAQ,SAAS;AAAA,EAC3C;AACF;AAEA,eAAe,MACb,SACA,KACA,OACmB;AACnB,MAAI;AACF,UAAM,UAAU,CAAC,SAAS,GAAG,GAAG;AAChC,UAAM,OAAa,UAAU,EAAE,KAAK,SAAS,MAAM,CAAC;AAEpD,WAAO,EAAE,MAAM,MAAM,OAAO,UAAU,QAAQ,OAAO,OAAO,GAAG;AAAA,EACjE,SAAS,KAAK;AACZ,UAAM,WAAW,eAAe,QAAQ,IAAI,UAAU;AACtD,WAAO,EAAE,MAAM,SAAS,QAAQ,SAAS;AAAA,EAC3C;AACF;AAEA,eAAe,SAAY,SAAiB,KAAkC;AAC5E,MAAI;AACF,UAAM,UAAU,CAAC,SAAS,GAAG,GAAG;AAChC,UAAM,OAAkB,aAAa,EAAE,KAAK,QAAQ,CAAC;AAErD,WAAO,EAAE,MAAM,MAAM,OAAO,UAAU,QAAQ,WAAW,OAAO,GAAG;AAAA,EACrE,SAAS,KAAK;AACZ,UAAM,WAAW,eAAe,QAC5B,IAAI,UACJ;AACJ,WAAO,EAAE,MAAM,SAAS,QAAQ,SAAS;AAAA,EAC3C;AACF;","names":[]}