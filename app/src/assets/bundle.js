// node_modules/.deno/preact@10.27.2/node_modules/preact/dist/preact.module.js
var n;
var l;
var u;
var t;
var i;
var r;
var o;
var e;
var f;
var c;
var s;
var a;
var h;
var p = {};
var v = [];
var y = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
var w = Array.isArray;
function d(n3, l4) {
  for (var u6 in l4) n3[u6] = l4[u6];
  return n3;
}
function g(n3) {
  n3 && n3.parentNode && n3.parentNode.removeChild(n3);
}
function _(l4, u6, t4) {
  var i6, r4, o4, e4 = {};
  for (o4 in u6) "key" == o4 ? i6 = u6[o4] : "ref" == o4 ? r4 = u6[o4] : e4[o4] = u6[o4];
  if (arguments.length > 2 && (e4.children = arguments.length > 3 ? n.call(arguments, 2) : t4), "function" == typeof l4 && null != l4.defaultProps) for (o4 in l4.defaultProps) void 0 === e4[o4] && (e4[o4] = l4.defaultProps[o4]);
  return m(l4, e4, i6, r4, null);
}
function m(n3, t4, i6, r4, o4) {
  var e4 = {
    type: n3,
    props: t4,
    key: i6,
    ref: r4,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __c: null,
    constructor: void 0,
    __v: null == o4 ? ++u : o4,
    __i: -1,
    __u: 0
  };
  return null == o4 && null != l.vnode && l.vnode(e4), e4;
}
function k(n3) {
  return n3.children;
}
function x(n3, l4) {
  this.props = n3, this.context = l4;
}
function S(n3, l4) {
  if (null == l4) return n3.__ ? S(n3.__, n3.__i + 1) : null;
  for (var u6; l4 < n3.__k.length; l4++) if (null != (u6 = n3.__k[l4]) && null != u6.__e) return u6.__e;
  return "function" == typeof n3.type ? S(n3) : null;
}
function C(n3) {
  var l4, u6;
  if (null != (n3 = n3.__) && null != n3.__c) {
    for (n3.__e = n3.__c.base = null, l4 = 0; l4 < n3.__k.length; l4++) if (null != (u6 = n3.__k[l4]) && null != u6.__e) {
      n3.__e = n3.__c.base = u6.__e;
      break;
    }
    return C(n3);
  }
}
function M(n3) {
  (!n3.__d && (n3.__d = true) && i.push(n3) && !$.__r++ || r != l.debounceRendering) && ((r = l.debounceRendering) || o)($);
}
function $() {
  for (var n3, u6, t4, r4, o4, f6, c5, s4 = 1; i.length; ) i.length > s4 && i.sort(e), n3 = i.shift(), s4 = i.length, n3.__d && (t4 = void 0, r4 = void 0, o4 = (r4 = (u6 = n3).__v).__e, f6 = [], c5 = [], u6.__P && ((t4 = d({}, r4)).__v = r4.__v + 1, l.vnode && l.vnode(t4), O(u6.__P, t4, r4, u6.__n, u6.__P.namespaceURI, 32 & r4.__u ? [
    o4
  ] : null, f6, null == o4 ? S(r4) : o4, !!(32 & r4.__u), c5), t4.__v = r4.__v, t4.__.__k[t4.__i] = t4, N(f6, t4, c5), r4.__e = r4.__ = null, t4.__e != o4 && C(t4)));
  $.__r = 0;
}
function I(n3, l4, u6, t4, i6, r4, o4, e4, f6, c5, s4) {
  var a5, h6, y6, w5, d5, g7, _5, m4 = t4 && t4.__k || v, b4 = l4.length;
  for (f6 = P(u6, l4, m4, f6, b4), a5 = 0; a5 < b4; a5++) null != (y6 = u6.__k[a5]) && (h6 = -1 == y6.__i ? p : m4[y6.__i] || p, y6.__i = a5, g7 = O(n3, y6, h6, i6, r4, o4, e4, f6, c5, s4), w5 = y6.__e, y6.ref && h6.ref != y6.ref && (h6.ref && B(h6.ref, null, y6), s4.push(y6.ref, y6.__c || w5, y6)), null == d5 && null != w5 && (d5 = w5), (_5 = !!(4 & y6.__u)) || h6.__k === y6.__k ? f6 = A(y6, f6, n3, _5) : "function" == typeof y6.type && void 0 !== g7 ? f6 = g7 : w5 && (f6 = w5.nextSibling), y6.__u &= -7);
  return u6.__e = d5, f6;
}
function P(n3, l4, u6, t4, i6) {
  var r4, o4, e4, f6, c5, s4 = u6.length, a5 = s4, h6 = 0;
  for (n3.__k = new Array(i6), r4 = 0; r4 < i6; r4++) null != (o4 = l4[r4]) && "boolean" != typeof o4 && "function" != typeof o4 ? (f6 = r4 + h6, (o4 = n3.__k[r4] = "string" == typeof o4 || "number" == typeof o4 || "bigint" == typeof o4 || o4.constructor == String ? m(null, o4, null, null, null) : w(o4) ? m(k, {
    children: o4
  }, null, null, null) : null == o4.constructor && o4.__b > 0 ? m(o4.type, o4.props, o4.key, o4.ref ? o4.ref : null, o4.__v) : o4).__ = n3, o4.__b = n3.__b + 1, e4 = null, -1 != (c5 = o4.__i = L(o4, u6, f6, a5)) && (a5--, (e4 = u6[c5]) && (e4.__u |= 2)), null == e4 || null == e4.__v ? (-1 == c5 && (i6 > s4 ? h6-- : i6 < s4 && h6++), "function" != typeof o4.type && (o4.__u |= 4)) : c5 != f6 && (c5 == f6 - 1 ? h6-- : c5 == f6 + 1 ? h6++ : (c5 > f6 ? h6-- : h6++, o4.__u |= 4))) : n3.__k[r4] = null;
  if (a5) for (r4 = 0; r4 < s4; r4++) null != (e4 = u6[r4]) && 0 == (2 & e4.__u) && (e4.__e == t4 && (t4 = S(e4)), D(e4, e4));
  return t4;
}
function A(n3, l4, u6, t4) {
  var i6, r4;
  if ("function" == typeof n3.type) {
    for (i6 = n3.__k, r4 = 0; i6 && r4 < i6.length; r4++) i6[r4] && (i6[r4].__ = n3, l4 = A(i6[r4], l4, u6, t4));
    return l4;
  }
  n3.__e != l4 && (t4 && (l4 && n3.type && !l4.parentNode && (l4 = S(n3)), u6.insertBefore(n3.__e, l4 || null)), l4 = n3.__e);
  do {
    l4 = l4 && l4.nextSibling;
  } while (null != l4 && 8 == l4.nodeType);
  return l4;
}
function H(n3, l4) {
  return l4 = l4 || [], null == n3 || "boolean" == typeof n3 || (w(n3) ? n3.some(function(n4) {
    H(n4, l4);
  }) : l4.push(n3)), l4;
}
function L(n3, l4, u6, t4) {
  var i6, r4, o4, e4 = n3.key, f6 = n3.type, c5 = l4[u6], s4 = null != c5 && 0 == (2 & c5.__u);
  if (null === c5 && null == n3.key || s4 && e4 == c5.key && f6 == c5.type) return u6;
  if (t4 > (s4 ? 1 : 0)) {
    for (i6 = u6 - 1, r4 = u6 + 1; i6 >= 0 || r4 < l4.length; ) if (null != (c5 = l4[o4 = i6 >= 0 ? i6-- : r4++]) && 0 == (2 & c5.__u) && e4 == c5.key && f6 == c5.type) return o4;
  }
  return -1;
}
function T(n3, l4, u6) {
  "-" == l4[0] ? n3.setProperty(l4, null == u6 ? "" : u6) : n3[l4] = null == u6 ? "" : "number" != typeof u6 || y.test(l4) ? u6 : u6 + "px";
}
function j(n3, l4, u6, t4, i6) {
  var r4, o4;
  n: if ("style" == l4) if ("string" == typeof u6) n3.style.cssText = u6;
  else {
    if ("string" == typeof t4 && (n3.style.cssText = t4 = ""), t4) for (l4 in t4) u6 && l4 in u6 || T(n3.style, l4, "");
    if (u6) for (l4 in u6) t4 && u6[l4] == t4[l4] || T(n3.style, l4, u6[l4]);
  }
  else if ("o" == l4[0] && "n" == l4[1]) r4 = l4 != (l4 = l4.replace(f, "$1")), o4 = l4.toLowerCase(), l4 = o4 in n3 || "onFocusOut" == l4 || "onFocusIn" == l4 ? o4.slice(2) : l4.slice(2), n3.l || (n3.l = {}), n3.l[l4 + r4] = u6, u6 ? t4 ? u6.u = t4.u : (u6.u = c, n3.addEventListener(l4, r4 ? a : s, r4)) : n3.removeEventListener(l4, r4 ? a : s, r4);
  else {
    if ("http://www.w3.org/2000/svg" == i6) l4 = l4.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
    else if ("width" != l4 && "height" != l4 && "href" != l4 && "list" != l4 && "form" != l4 && "tabIndex" != l4 && "download" != l4 && "rowSpan" != l4 && "colSpan" != l4 && "role" != l4 && "popover" != l4 && l4 in n3) try {
      n3[l4] = null == u6 ? "" : u6;
      break n;
    } catch (n4) {
    }
    "function" == typeof u6 || (null == u6 || false === u6 && "-" != l4[4] ? n3.removeAttribute(l4) : n3.setAttribute(l4, "popover" == l4 && 1 == u6 ? "" : u6));
  }
}
function F(n3) {
  return function(u6) {
    if (this.l) {
      var t4 = this.l[u6.type + n3];
      if (null == u6.t) u6.t = c++;
      else if (u6.t < t4.u) return;
      return t4(l.event ? l.event(u6) : u6);
    }
  };
}
function O(n3, u6, t4, i6, r4, o4, e4, f6, c5, s4) {
  var a5, h6, p7, v4, y6, _5, m4, b4, S3, C4, M2, $2, P4, A4, H3, L2, T5, j4 = u6.type;
  if (null != u6.constructor) return null;
  128 & t4.__u && (c5 = !!(32 & t4.__u), o4 = [
    f6 = u6.__e = t4.__e
  ]), (a5 = l.__b) && a5(u6);
  n: if ("function" == typeof j4) try {
    if (b4 = u6.props, S3 = "prototype" in j4 && j4.prototype.render, C4 = (a5 = j4.contextType) && i6[a5.__c], M2 = a5 ? C4 ? C4.props.value : a5.__ : i6, t4.__c ? m4 = (h6 = u6.__c = t4.__c).__ = h6.__E : (S3 ? u6.__c = h6 = new j4(b4, M2) : (u6.__c = h6 = new x(b4, M2), h6.constructor = j4, h6.render = E), C4 && C4.sub(h6), h6.props = b4, h6.state || (h6.state = {}), h6.context = M2, h6.__n = i6, p7 = h6.__d = true, h6.__h = [], h6._sb = []), S3 && null == h6.__s && (h6.__s = h6.state), S3 && null != j4.getDerivedStateFromProps && (h6.__s == h6.state && (h6.__s = d({}, h6.__s)), d(h6.__s, j4.getDerivedStateFromProps(b4, h6.__s))), v4 = h6.props, y6 = h6.state, h6.__v = u6, p7) S3 && null == j4.getDerivedStateFromProps && null != h6.componentWillMount && h6.componentWillMount(), S3 && null != h6.componentDidMount && h6.__h.push(h6.componentDidMount);
    else {
      if (S3 && null == j4.getDerivedStateFromProps && b4 !== v4 && null != h6.componentWillReceiveProps && h6.componentWillReceiveProps(b4, M2), !h6.__e && null != h6.shouldComponentUpdate && false === h6.shouldComponentUpdate(b4, h6.__s, M2) || u6.__v == t4.__v) {
        for (u6.__v != t4.__v && (h6.props = b4, h6.state = h6.__s, h6.__d = false), u6.__e = t4.__e, u6.__k = t4.__k, u6.__k.some(function(n4) {
          n4 && (n4.__ = u6);
        }), $2 = 0; $2 < h6._sb.length; $2++) h6.__h.push(h6._sb[$2]);
        h6._sb = [], h6.__h.length && e4.push(h6);
        break n;
      }
      null != h6.componentWillUpdate && h6.componentWillUpdate(b4, h6.__s, M2), S3 && null != h6.componentDidUpdate && h6.__h.push(function() {
        h6.componentDidUpdate(v4, y6, _5);
      });
    }
    if (h6.context = M2, h6.props = b4, h6.__P = n3, h6.__e = false, P4 = l.__r, A4 = 0, S3) {
      for (h6.state = h6.__s, h6.__d = false, P4 && P4(u6), a5 = h6.render(h6.props, h6.state, h6.context), H3 = 0; H3 < h6._sb.length; H3++) h6.__h.push(h6._sb[H3]);
      h6._sb = [];
    } else do {
      h6.__d = false, P4 && P4(u6), a5 = h6.render(h6.props, h6.state, h6.context), h6.state = h6.__s;
    } while (h6.__d && ++A4 < 25);
    h6.state = h6.__s, null != h6.getChildContext && (i6 = d(d({}, i6), h6.getChildContext())), S3 && !p7 && null != h6.getSnapshotBeforeUpdate && (_5 = h6.getSnapshotBeforeUpdate(v4, y6)), L2 = a5, null != a5 && a5.type === k && null == a5.key && (L2 = V(a5.props.children)), f6 = I(n3, w(L2) ? L2 : [
      L2
    ], u6, t4, i6, r4, o4, e4, f6, c5, s4), h6.base = u6.__e, u6.__u &= -161, h6.__h.length && e4.push(h6), m4 && (h6.__E = h6.__ = null);
  } catch (n4) {
    if (u6.__v = null, c5 || null != o4) if (n4.then) {
      for (u6.__u |= c5 ? 160 : 128; f6 && 8 == f6.nodeType && f6.nextSibling; ) f6 = f6.nextSibling;
      o4[o4.indexOf(f6)] = null, u6.__e = f6;
    } else {
      for (T5 = o4.length; T5--; ) g(o4[T5]);
      z(u6);
    }
    else u6.__e = t4.__e, u6.__k = t4.__k, n4.then || z(u6);
    l.__e(n4, u6, t4);
  }
  else null == o4 && u6.__v == t4.__v ? (u6.__k = t4.__k, u6.__e = t4.__e) : f6 = u6.__e = q(t4.__e, u6, t4, i6, r4, o4, e4, c5, s4);
  return (a5 = l.diffed) && a5(u6), 128 & u6.__u ? void 0 : f6;
}
function z(n3) {
  n3 && n3.__c && (n3.__c.__e = true), n3 && n3.__k && n3.__k.forEach(z);
}
function N(n3, u6, t4) {
  for (var i6 = 0; i6 < t4.length; i6++) B(t4[i6], t4[++i6], t4[++i6]);
  l.__c && l.__c(u6, n3), n3.some(function(u7) {
    try {
      n3 = u7.__h, u7.__h = [], n3.some(function(n4) {
        n4.call(u7);
      });
    } catch (n4) {
      l.__e(n4, u7.__v);
    }
  });
}
function V(n3) {
  return "object" != typeof n3 || null == n3 || n3.__b && n3.__b > 0 ? n3 : w(n3) ? n3.map(V) : d({}, n3);
}
function q(u6, t4, i6, r4, o4, e4, f6, c5, s4) {
  var a5, h6, v4, y6, d5, _5, m4, b4 = i6.props, k4 = t4.props, x5 = t4.type;
  if ("svg" == x5 ? o4 = "http://www.w3.org/2000/svg" : "math" == x5 ? o4 = "http://www.w3.org/1998/Math/MathML" : o4 || (o4 = "http://www.w3.org/1999/xhtml"), null != e4) {
    for (a5 = 0; a5 < e4.length; a5++) if ((d5 = e4[a5]) && "setAttribute" in d5 == !!x5 && (x5 ? d5.localName == x5 : 3 == d5.nodeType)) {
      u6 = d5, e4[a5] = null;
      break;
    }
  }
  if (null == u6) {
    if (null == x5) return document.createTextNode(k4);
    u6 = document.createElementNS(o4, x5, k4.is && k4), c5 && (l.__m && l.__m(t4, e4), c5 = false), e4 = null;
  }
  if (null == x5) b4 === k4 || c5 && u6.data == k4 || (u6.data = k4);
  else {
    if (e4 = e4 && n.call(u6.childNodes), b4 = i6.props || p, !c5 && null != e4) for (b4 = {}, a5 = 0; a5 < u6.attributes.length; a5++) b4[(d5 = u6.attributes[a5]).name] = d5.value;
    for (a5 in b4) if (d5 = b4[a5], "children" == a5) ;
    else if ("dangerouslySetInnerHTML" == a5) v4 = d5;
    else if (!(a5 in k4)) {
      if ("value" == a5 && "defaultValue" in k4 || "checked" == a5 && "defaultChecked" in k4) continue;
      j(u6, a5, null, d5, o4);
    }
    for (a5 in k4) d5 = k4[a5], "children" == a5 ? y6 = d5 : "dangerouslySetInnerHTML" == a5 ? h6 = d5 : "value" == a5 ? _5 = d5 : "checked" == a5 ? m4 = d5 : c5 && "function" != typeof d5 || b4[a5] === d5 || j(u6, a5, d5, b4[a5], o4);
    if (h6) c5 || v4 && (h6.__html == v4.__html || h6.__html == u6.innerHTML) || (u6.innerHTML = h6.__html), t4.__k = [];
    else if (v4 && (u6.innerHTML = ""), I("template" == t4.type ? u6.content : u6, w(y6) ? y6 : [
      y6
    ], t4, i6, r4, "foreignObject" == x5 ? "http://www.w3.org/1999/xhtml" : o4, e4, f6, e4 ? e4[0] : i6.__k && S(i6, 0), c5, s4), null != e4) for (a5 = e4.length; a5--; ) g(e4[a5]);
    c5 || (a5 = "value", "progress" == x5 && null == _5 ? u6.removeAttribute("value") : null != _5 && (_5 !== u6[a5] || "progress" == x5 && !_5 || "option" == x5 && _5 != b4[a5]) && j(u6, a5, _5, b4[a5], o4), a5 = "checked", null != m4 && m4 != u6[a5] && j(u6, a5, m4, b4[a5], o4));
  }
  return u6;
}
function B(n3, u6, t4) {
  try {
    if ("function" == typeof n3) {
      var i6 = "function" == typeof n3.__u;
      i6 && n3.__u(), i6 && null == u6 || (n3.__u = n3(u6));
    } else n3.current = u6;
  } catch (n4) {
    l.__e(n4, t4);
  }
}
function D(n3, u6, t4) {
  var i6, r4;
  if (l.unmount && l.unmount(n3), (i6 = n3.ref) && (i6.current && i6.current != n3.__e || B(i6, null, u6)), null != (i6 = n3.__c)) {
    if (i6.componentWillUnmount) try {
      i6.componentWillUnmount();
    } catch (n4) {
      l.__e(n4, u6);
    }
    i6.base = i6.__P = null;
  }
  if (i6 = n3.__k) for (r4 = 0; r4 < i6.length; r4++) i6[r4] && D(i6[r4], u6, t4 || "function" != typeof n3.type);
  t4 || g(n3.__e), n3.__c = n3.__ = n3.__e = void 0;
}
function E(n3, l4, u6) {
  return this.constructor(n3, u6);
}
function G(u6, t4, i6) {
  var r4, o4, e4, f6;
  t4 == document && (t4 = document.documentElement), l.__ && l.__(u6, t4), o4 = (r4 = "function" == typeof i6) ? null : i6 && i6.__k || t4.__k, e4 = [], f6 = [], O(t4, u6 = (!r4 && i6 || t4).__k = _(k, null, [
    u6
  ]), o4 || p, p, t4.namespaceURI, !r4 && i6 ? [
    i6
  ] : o4 ? null : t4.firstChild ? n.call(t4.childNodes) : null, e4, !r4 && i6 ? i6 : o4 ? o4.__e : t4.firstChild, r4, f6), N(e4, u6, f6);
}
function Q(n3) {
  function l4(n4) {
    var u6, t4;
    return this.getChildContext || (u6 = /* @__PURE__ */ new Set(), (t4 = {})[l4.__c] = this, this.getChildContext = function() {
      return t4;
    }, this.componentWillUnmount = function() {
      u6 = null;
    }, this.shouldComponentUpdate = function(n5) {
      this.props.value != n5.value && u6.forEach(function(n6) {
        n6.__e = true, M(n6);
      });
    }, this.sub = function(n5) {
      u6.add(n5);
      var l5 = n5.componentWillUnmount;
      n5.componentWillUnmount = function() {
        u6 && u6.delete(n5), l5 && l5.call(n5);
      };
    }), n4.children;
  }
  return l4.__c = "__cC" + h++, l4.__ = n3, l4.Provider = l4.__l = (l4.Consumer = function(n4, l5) {
    return n4.children(l5);
  }).contextType = l4, l4;
}
n = v.slice, l = {
  __e: function(n3, l4, u6, t4) {
    for (var i6, r4, o4; l4 = l4.__; ) if ((i6 = l4.__c) && !i6.__) try {
      if ((r4 = i6.constructor) && null != r4.getDerivedStateFromError && (i6.setState(r4.getDerivedStateFromError(n3)), o4 = i6.__d), null != i6.componentDidCatch && (i6.componentDidCatch(n3, t4 || {}), o4 = i6.__d), o4) return i6.__E = i6;
    } catch (l5) {
      n3 = l5;
    }
    throw n3;
  }
}, u = 0, t = function(n3) {
  return null != n3 && null == n3.constructor;
}, x.prototype.setState = function(n3, l4) {
  var u6;
  u6 = null != this.__s && this.__s != this.state ? this.__s : this.__s = d({}, this.state), "function" == typeof n3 && (n3 = n3(d({}, u6), this.props)), n3 && d(u6, n3), null != n3 && this.__v && (l4 && this._sb.push(l4), M(this));
}, x.prototype.forceUpdate = function(n3) {
  this.__v && (this.__e = true, n3 && this.__h.push(n3), M(this));
}, x.prototype.render = k, i = [], o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, e = function(n3, l4) {
  return n3.__v.__b - l4.__v.__b;
}, $.__r = 0, f = /(PointerCapture)$|Capture$/i, c = 0, s = F(false), a = F(true), h = 0;

// node_modules/.deno/preact@10.27.2/node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js
var f2 = 0;
var i2 = Array.isArray;
function u2(e4, t4, n3, o4, i6, u6) {
  t4 || (t4 = {});
  var a5, c5, p7 = t4;
  if ("ref" in p7) for (c5 in p7 = {}, t4) "ref" == c5 ? a5 = t4[c5] : p7[c5] = t4[c5];
  var l4 = {
    type: e4,
    props: p7,
    key: n3,
    ref: a5,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __c: null,
    constructor: void 0,
    __v: --f2,
    __i: -1,
    __u: 0,
    __source: i6,
    __self: u6
  };
  if ("function" == typeof e4 && (a5 = e4.defaultProps)) for (c5 in a5) void 0 === p7[c5] && (p7[c5] = a5[c5]);
  return l.vnode && l.vnode(l4), l4;
}

// node_modules/.deno/preact@10.27.2/node_modules/preact/hooks/dist/hooks.module.js
var t2;
var r2;
var u3;
var i3;
var o2 = 0;
var f3 = [];
var c2 = l;
var e2 = c2.__b;
var a2 = c2.__r;
var v2 = c2.diffed;
var l2 = c2.__c;
var m2 = c2.unmount;
var s2 = c2.__;
function p2(n3, t4) {
  c2.__h && c2.__h(r2, n3, o2 || t4), o2 = 0;
  var u6 = r2.__H || (r2.__H = {
    __: [],
    __h: []
  });
  return n3 >= u6.__.length && u6.__.push({}), u6.__[n3];
}
function d2(n3) {
  return o2 = 1, h2(D2, n3);
}
function h2(n3, u6, i6) {
  var o4 = p2(t2++, 2);
  if (o4.t = n3, !o4.__c && (o4.__ = [
    i6 ? i6(u6) : D2(void 0, u6),
    function(n4) {
      var t4 = o4.__N ? o4.__N[0] : o4.__[0], r4 = o4.t(t4, n4);
      t4 !== r4 && (o4.__N = [
        r4,
        o4.__[1]
      ], o4.__c.setState({}));
    }
  ], o4.__c = r2, !r2.__f)) {
    var f6 = function(n4, t4, r4) {
      if (!o4.__c.__H) return true;
      var u7 = o4.__c.__H.__.filter(function(n5) {
        return !!n5.__c;
      });
      if (u7.every(function(n5) {
        return !n5.__N;
      })) return !c5 || c5.call(this, n4, t4, r4);
      var i7 = o4.__c.props !== n4;
      return u7.forEach(function(n5) {
        if (n5.__N) {
          var t5 = n5.__[0];
          n5.__ = n5.__N, n5.__N = void 0, t5 !== n5.__[0] && (i7 = true);
        }
      }), c5 && c5.call(this, n4, t4, r4) || i7;
    };
    r2.__f = true;
    var c5 = r2.shouldComponentUpdate, e4 = r2.componentWillUpdate;
    r2.componentWillUpdate = function(n4, t4, r4) {
      if (this.__e) {
        var u7 = c5;
        c5 = void 0, f6(n4, t4, r4), c5 = u7;
      }
      e4 && e4.call(this, n4, t4, r4);
    }, r2.shouldComponentUpdate = f6;
  }
  return o4.__N || o4.__;
}
function y2(n3, u6) {
  var i6 = p2(t2++, 3);
  !c2.__s && C2(i6.__H, u6) && (i6.__ = n3, i6.u = u6, r2.__H.__h.push(i6));
}
function A2(n3) {
  return o2 = 5, T2(function() {
    return {
      current: n3
    };
  }, []);
}
function T2(n3, r4) {
  var u6 = p2(t2++, 7);
  return C2(u6.__H, r4) && (u6.__ = n3(), u6.__H = r4, u6.__h = n3), u6.__;
}
function x2(n3) {
  var u6 = r2.context[n3.__c], i6 = p2(t2++, 9);
  return i6.c = n3, u6 ? (null == i6.__ && (i6.__ = true, u6.sub(r2)), u6.props.value) : n3.__;
}
function j2() {
  for (var n3; n3 = f3.shift(); ) if (n3.__P && n3.__H) try {
    n3.__H.__h.forEach(z2), n3.__H.__h.forEach(B2), n3.__H.__h = [];
  } catch (t4) {
    n3.__H.__h = [], c2.__e(t4, n3.__v);
  }
}
c2.__b = function(n3) {
  r2 = null, e2 && e2(n3);
}, c2.__ = function(n3, t4) {
  n3 && t4.__k && t4.__k.__m && (n3.__m = t4.__k.__m), s2 && s2(n3, t4);
}, c2.__r = function(n3) {
  a2 && a2(n3), t2 = 0;
  var i6 = (r2 = n3.__c).__H;
  i6 && (u3 === r2 ? (i6.__h = [], r2.__h = [], i6.__.forEach(function(n4) {
    n4.__N && (n4.__ = n4.__N), n4.u = n4.__N = void 0;
  })) : (i6.__h.forEach(z2), i6.__h.forEach(B2), i6.__h = [], t2 = 0)), u3 = r2;
}, c2.diffed = function(n3) {
  v2 && v2(n3);
  var t4 = n3.__c;
  t4 && t4.__H && (t4.__H.__h.length && (1 !== f3.push(t4) && i3 === c2.requestAnimationFrame || ((i3 = c2.requestAnimationFrame) || w2)(j2)), t4.__H.__.forEach(function(n4) {
    n4.u && (n4.__H = n4.u), n4.u = void 0;
  })), u3 = r2 = null;
}, c2.__c = function(n3, t4) {
  t4.some(function(n4) {
    try {
      n4.__h.forEach(z2), n4.__h = n4.__h.filter(function(n5) {
        return !n5.__ || B2(n5);
      });
    } catch (r4) {
      t4.some(function(n5) {
        n5.__h && (n5.__h = []);
      }), t4 = [], c2.__e(r4, n4.__v);
    }
  }), l2 && l2(n3, t4);
}, c2.unmount = function(n3) {
  m2 && m2(n3);
  var t4, r4 = n3.__c;
  r4 && r4.__H && (r4.__H.__.forEach(function(n4) {
    try {
      z2(n4);
    } catch (n5) {
      t4 = n5;
    }
  }), r4.__H = void 0, t4 && c2.__e(t4, r4.__v));
};
var k2 = "function" == typeof requestAnimationFrame;
function w2(n3) {
  var t4, r4 = function() {
    clearTimeout(u6), k2 && cancelAnimationFrame(t4), setTimeout(n3);
  }, u6 = setTimeout(r4, 35);
  k2 && (t4 = requestAnimationFrame(r4));
}
function z2(n3) {
  var t4 = r2, u6 = n3.__c;
  "function" == typeof u6 && (n3.__c = void 0, u6()), r2 = t4;
}
function B2(n3) {
  var t4 = r2;
  n3.__c = n3.__(), r2 = t4;
}
function C2(n3, t4) {
  return !n3 || n3.length !== t4.length || t4.some(function(t5, r4) {
    return t5 !== n3[r4];
  });
}
function D2(n3, t4) {
  return "function" == typeof t4 ? t4(n3) : t4;
}

// node_modules/.deno/preact@10.27.2/node_modules/preact/compat/dist/compat.module.js
function g3(n3, t4) {
  for (var e4 in t4) n3[e4] = t4[e4];
  return n3;
}
function E2(n3, t4) {
  for (var e4 in n3) if ("__source" !== e4 && !(e4 in t4)) return true;
  for (var r4 in t4) if ("__source" !== r4 && n3[r4] !== t4[r4]) return true;
  return false;
}
function N2(n3, t4) {
  this.props = n3, this.context = t4;
}
(N2.prototype = new x()).isPureReactComponent = true, N2.prototype.shouldComponentUpdate = function(n3, t4) {
  return E2(this.props, n3) || E2(this.state, t4);
};
var T3 = l.__b;
l.__b = function(n3) {
  n3.type && n3.type.__f && n3.ref && (n3.props.ref = n3.ref, n3.ref = null), T3 && T3(n3);
};
var A3 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
function D3(n3) {
  function t4(t5) {
    var e4 = g3({}, t5);
    return delete e4.ref, n3(e4, t5.ref || null);
  }
  return t4.$$typeof = A3, t4.render = n3, t4.prototype.isReactComponent = t4.__f = true, t4.displayName = "ForwardRef(" + (n3.displayName || n3.name) + ")", t4;
}
var F3 = l.__e;
l.__e = function(n3, t4, e4, r4) {
  if (n3.then) {
    for (var u6, o4 = t4; o4 = o4.__; ) if ((u6 = o4.__c) && u6.__c) return null == t4.__e && (t4.__e = e4.__e, t4.__k = e4.__k), u6.__c(n3, t4);
  }
  F3(n3, t4, e4, r4);
};
var U = l.unmount;
function V2(n3, t4, e4) {
  return n3 && (n3.__c && n3.__c.__H && (n3.__c.__H.__.forEach(function(n4) {
    "function" == typeof n4.__c && n4.__c();
  }), n3.__c.__H = null), null != (n3 = g3({}, n3)).__c && (n3.__c.__P === e4 && (n3.__c.__P = t4), n3.__c.__e = true, n3.__c = null), n3.__k = n3.__k && n3.__k.map(function(n4) {
    return V2(n4, t4, e4);
  })), n3;
}
function W(n3, t4, e4) {
  return n3 && e4 && (n3.__v = null, n3.__k = n3.__k && n3.__k.map(function(n4) {
    return W(n4, t4, e4);
  }), n3.__c && n3.__c.__P === t4 && (n3.__e && e4.appendChild(n3.__e), n3.__c.__e = true, n3.__c.__P = e4)), n3;
}
function P3() {
  this.__u = 0, this.o = null, this.__b = null;
}
function j3(n3) {
  var t4 = n3.__.__c;
  return t4 && t4.__a && t4.__a(n3);
}
function B3() {
  this.i = null, this.l = null;
}
l.unmount = function(n3) {
  var t4 = n3.__c;
  t4 && t4.__R && t4.__R(), t4 && 32 & n3.__u && (n3.type = null), U && U(n3);
}, (P3.prototype = new x()).__c = function(n3, t4) {
  var e4 = t4.__c, r4 = this;
  null == r4.o && (r4.o = []), r4.o.push(e4);
  var u6 = j3(r4.__v), o4 = false, i6 = function() {
    o4 || (o4 = true, e4.__R = null, u6 ? u6(l4) : l4());
  };
  e4.__R = i6;
  var l4 = function() {
    if (!--r4.__u) {
      if (r4.state.__a) {
        var n4 = r4.state.__a;
        r4.__v.__k[0] = W(n4, n4.__c.__P, n4.__c.__O);
      }
      var t5;
      for (r4.setState({
        __a: r4.__b = null
      }); t5 = r4.o.pop(); ) t5.forceUpdate();
    }
  };
  r4.__u++ || 32 & t4.__u || r4.setState({
    __a: r4.__b = r4.__v.__k[0]
  }), n3.then(i6, i6);
}, P3.prototype.componentWillUnmount = function() {
  this.o = [];
}, P3.prototype.render = function(n3, e4) {
  if (this.__b) {
    if (this.__v.__k) {
      var r4 = document.createElement("div"), o4 = this.__v.__k[0].__c;
      this.__v.__k[0] = V2(this.__b, r4, o4.__O = o4.__P);
    }
    this.__b = null;
  }
  var i6 = e4.__a && _(k, null, n3.fallback);
  return i6 && (i6.__u &= -33), [
    _(k, null, e4.__a ? null : n3.children),
    i6
  ];
};
var H2 = function(n3, t4, e4) {
  if (++e4[1] === e4[0] && n3.l.delete(t4), n3.props.revealOrder && ("t" !== n3.props.revealOrder[0] || !n3.l.size)) for (e4 = n3.i; e4; ) {
    for (; e4.length > 3; ) e4.pop()();
    if (e4[1] < e4[0]) break;
    n3.i = e4 = e4[2];
  }
};
(B3.prototype = new x()).__a = function(n3) {
  var t4 = this, e4 = j3(t4.__v), r4 = t4.l.get(n3);
  return r4[0]++, function(u6) {
    var o4 = function() {
      t4.props.revealOrder ? (r4.push(u6), H2(t4, n3, r4)) : u6();
    };
    e4 ? e4(o4) : o4();
  };
}, B3.prototype.render = function(n3) {
  this.i = null, this.l = /* @__PURE__ */ new Map();
  var t4 = H(n3.children);
  n3.revealOrder && "b" === n3.revealOrder[0] && t4.reverse();
  for (var e4 = t4.length; e4--; ) this.l.set(t4[e4], this.i = [
    1,
    0,
    this.i
  ]);
  return n3.children;
}, B3.prototype.componentDidUpdate = B3.prototype.componentDidMount = function() {
  var n3 = this;
  this.l.forEach(function(t4, e4) {
    H2(n3, e4, t4);
  });
};
var q3 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
var G2 = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
var J2 = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;
var K2 = /[A-Z0-9]/g;
var Q2 = "undefined" != typeof document;
var X = function(n3) {
  return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/ : /fil|che|ra/).test(n3);
};
x.prototype.isReactComponent = {}, [
  "componentWillMount",
  "componentWillReceiveProps",
  "componentWillUpdate"
].forEach(function(t4) {
  Object.defineProperty(x.prototype, t4, {
    configurable: true,
    get: function() {
      return this["UNSAFE_" + t4];
    },
    set: function(n3) {
      Object.defineProperty(this, t4, {
        configurable: true,
        writable: true,
        value: n3
      });
    }
  });
});
var en = l.event;
function rn() {
}
function un() {
  return this.cancelBubble;
}
function on() {
  return this.defaultPrevented;
}
l.event = function(n3) {
  return en && (n3 = en(n3)), n3.persist = rn, n3.isPropagationStopped = un, n3.isDefaultPrevented = on, n3.nativeEvent = n3;
};
var ln;
var cn = {
  enumerable: false,
  configurable: true,
  get: function() {
    return this.class;
  }
};
var fn = l.vnode;
l.vnode = function(n3) {
  "string" == typeof n3.type && function(n4) {
    var t4 = n4.props, e4 = n4.type, u6 = {}, o4 = -1 === e4.indexOf("-");
    for (var i6 in t4) {
      var l4 = t4[i6];
      if (!("value" === i6 && "defaultValue" in t4 && null == l4 || Q2 && "children" === i6 && "noscript" === e4 || "class" === i6 || "className" === i6)) {
        var c5 = i6.toLowerCase();
        "defaultValue" === i6 && "value" in t4 && null == t4.value ? i6 = "value" : "download" === i6 && true === l4 ? l4 = "" : "translate" === c5 && "no" === l4 ? l4 = false : "o" === c5[0] && "n" === c5[1] ? "ondoubleclick" === c5 ? i6 = "ondblclick" : "onchange" !== c5 || "input" !== e4 && "textarea" !== e4 || X(t4.type) ? "onfocus" === c5 ? i6 = "onfocusin" : "onblur" === c5 ? i6 = "onfocusout" : J2.test(i6) && (i6 = c5) : c5 = i6 = "oninput" : o4 && G2.test(i6) ? i6 = i6.replace(K2, "-$&").toLowerCase() : null === l4 && (l4 = void 0), "oninput" === c5 && u6[i6 = c5] && (i6 = "oninputCapture"), u6[i6] = l4;
      }
    }
    "select" == e4 && u6.multiple && Array.isArray(u6.value) && (u6.value = H(t4.children).forEach(function(n5) {
      n5.props.selected = -1 != u6.value.indexOf(n5.props.value);
    })), "select" == e4 && null != u6.defaultValue && (u6.value = H(t4.children).forEach(function(n5) {
      n5.props.selected = u6.multiple ? -1 != u6.defaultValue.indexOf(n5.props.value) : u6.defaultValue == n5.props.value;
    })), t4.class && !t4.className ? (u6.class = t4.class, Object.defineProperty(u6, "className", cn)) : (t4.className && !t4.class || t4.class && t4.className) && (u6.class = u6.className = t4.className), n4.props = u6;
  }(n3), n3.$$typeof = q3, fn && fn(n3);
};
var an = l.__r;
l.__r = function(n3) {
  an && an(n3), ln = n3.__c;
};
var sn = l.diffed;
l.diffed = function(n3) {
  sn && sn(n3);
  var t4 = n3.props, e4 = n3.__e;
  null != e4 && "textarea" === n3.type && "value" in t4 && t4.value !== e4.value && (e4.value = null == t4.value ? "" : t4.value), ln = null;
};

// node_modules/.deno/@tugboats+core@0.0.10/node_modules/@tugboats/core/dist/mod.js
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key2, value) => key2 in obj ? __defProp(obj, key2, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key2] = value;
var __publicField = (obj, key2, value) => __defNormalProp(obj, typeof key2 !== "symbol" ? key2 + "" : key2, value);
var InputStore = class {
  constructor() {
    __publicField(this, "state", {
      raw: ""
    });
    __publicField(this, "listeners", /* @__PURE__ */ new Set());
  }
  get() {
    return this.state;
  }
  set(raw2) {
    this.state = {
      raw: raw2
    };
    this.listeners.forEach((fn2) => fn2(this.state));
  }
  subscribe(fn2) {
    this.listeners.add(fn2);
    fn2(this.state);
    return () => this.listeners.delete(fn2);
  }
};
var input = new InputStore();
var { invoke } = window.__TAURI__.core;
function kvTable(baseKey) {
  return {
    list: () => kvList(baseKey),
    get: (kvKey) => kvGet(baseKey, kvKey),
    set: (kvKey, value) => kvSet(baseKey, kvKey, value),
    delete: (kvKey) => kvDelete(baseKey, kvKey)
  };
}
async function kvList(baseKey) {
  try {
    const items = await invoke("kv_list", {
      prefix: [
        baseKey
      ]
    });
    if (!items.length) {
      return {
        _tag: "None",
        result: null
      };
    }
    return {
      _tag: "Ok",
      _type: "List",
      result: items
    };
  } catch (err) {
    const errorMsg = err instanceof Error ? err.message : "Error listing values";
    return {
      _tag: "Error",
      result: errorMsg
    };
  }
}
async function kvGet(baseKey, key2) {
  try {
    const fullKey = [
      baseKey,
      ...key2
    ];
    const result = await invoke("kv_get", {
      key: fullKey
    });
    if (result === null) {
      return {
        _tag: "None",
        result: null
      };
    }
    return {
      _tag: "Ok",
      _type: "Item",
      result
    };
  } catch (err) {
    const errorMsg = err instanceof Error ? err.message : "Error getting value";
    return {
      _tag: "Error",
      result: errorMsg
    };
  }
}
async function kvSet(baseKey, key2, value) {
  try {
    const fullKey = [
      baseKey,
      ...key2
    ];
    await invoke("kv_set", {
      key: fullKey,
      value
    });
    return {
      _tag: "Ok",
      _type: "String",
      result: `Set ${fullKey}`
    };
  } catch (err) {
    const errorMsg = err instanceof Error ? err.message : "Error getting value";
    return {
      _tag: "Error",
      result: errorMsg
    };
  }
}
async function kvDelete(baseKey, key2) {
  try {
    const fullKey = [
      baseKey,
      ...key2
    ];
    await invoke("kv_delete", {
      key: fullKey
    });
    return {
      _tag: "Ok",
      _type: "String",
      result: `Deleted ${fullKey}`
    };
  } catch (err) {
    const errorMsg = err instanceof Error ? err.message : "Error deleting value";
    return {
      _tag: "Error",
      result: errorMsg
    };
  }
}

// node_modules/.deno/@preact+signals-core@1.12.1/node_modules/@preact/signals-core/dist/signals-core.module.js
var i4 = Symbol.for("preact-signals");
function t3() {
  if (!(s3 > 1)) {
    var i6, t4 = false;
    while (void 0 !== h3) {
      var r4 = h3;
      h3 = void 0;
      f4++;
      while (void 0 !== r4) {
        var o4 = r4.o;
        r4.o = void 0;
        r4.f &= -3;
        if (!(8 & r4.f) && c3(r4)) try {
          r4.c();
        } catch (r5) {
          if (!t4) {
            i6 = r5;
            t4 = true;
          }
        }
        r4 = o4;
      }
    }
    f4 = 0;
    s3--;
    if (t4) throw i6;
  } else s3--;
}
function r3(i6) {
  if (s3 > 0) return i6();
  s3++;
  try {
    return i6();
  } finally {
    t3();
  }
}
var o3 = void 0;
function n2(i6) {
  var t4 = o3;
  o3 = void 0;
  try {
    return i6();
  } finally {
    o3 = t4;
  }
}
var h3 = void 0;
var s3 = 0;
var f4 = 0;
var v3 = 0;
function e3(i6) {
  if (void 0 !== o3) {
    var t4 = i6.n;
    if (void 0 === t4 || t4.t !== o3) {
      t4 = {
        i: 0,
        S: i6,
        p: o3.s,
        n: void 0,
        t: o3,
        e: void 0,
        x: void 0,
        r: t4
      };
      if (void 0 !== o3.s) o3.s.n = t4;
      o3.s = t4;
      i6.n = t4;
      if (32 & o3.f) i6.S(t4);
      return t4;
    } else if (-1 === t4.i) {
      t4.i = 0;
      if (void 0 !== t4.n) {
        t4.n.p = t4.p;
        if (void 0 !== t4.p) t4.p.n = t4.n;
        t4.p = o3.s;
        t4.n = void 0;
        o3.s.n = t4;
        o3.s = t4;
      }
      return t4;
    }
  }
}
function u4(i6, t4) {
  this.v = i6;
  this.i = 0;
  this.n = void 0;
  this.t = void 0;
  this.W = null == t4 ? void 0 : t4.watched;
  this.Z = null == t4 ? void 0 : t4.unwatched;
  this.name = null == t4 ? void 0 : t4.name;
}
u4.prototype.brand = i4;
u4.prototype.h = function() {
  return true;
};
u4.prototype.S = function(i6) {
  var t4 = this, r4 = this.t;
  if (r4 !== i6 && void 0 === i6.e) {
    i6.x = r4;
    this.t = i6;
    if (void 0 !== r4) r4.e = i6;
    else n2(function() {
      var i7;
      null == (i7 = t4.W) || i7.call(t4);
    });
  }
};
u4.prototype.U = function(i6) {
  var t4 = this;
  if (void 0 !== this.t) {
    var r4 = i6.e, o4 = i6.x;
    if (void 0 !== r4) {
      r4.x = o4;
      i6.e = void 0;
    }
    if (void 0 !== o4) {
      o4.e = r4;
      i6.x = void 0;
    }
    if (i6 === this.t) {
      this.t = o4;
      if (void 0 === o4) n2(function() {
        var i7;
        null == (i7 = t4.Z) || i7.call(t4);
      });
    }
  }
};
u4.prototype.subscribe = function(i6) {
  var t4 = this;
  return E3(function() {
    var r4 = t4.value, n3 = o3;
    o3 = void 0;
    try {
      i6(r4);
    } finally {
      o3 = n3;
    }
  }, {
    name: "sub"
  });
};
u4.prototype.valueOf = function() {
  return this.value;
};
u4.prototype.toString = function() {
  return this.value + "";
};
u4.prototype.toJSON = function() {
  return this.value;
};
u4.prototype.peek = function() {
  var i6 = o3;
  o3 = void 0;
  try {
    return this.value;
  } finally {
    o3 = i6;
  }
};
Object.defineProperty(u4.prototype, "value", {
  get: function() {
    var i6 = e3(this);
    if (void 0 !== i6) i6.i = this.i;
    return this.v;
  },
  set: function(i6) {
    if (i6 !== this.v) {
      if (f4 > 100) throw new Error("Cycle detected");
      this.v = i6;
      this.i++;
      v3++;
      s3++;
      try {
        for (var r4 = this.t; void 0 !== r4; r4 = r4.x) r4.t.N();
      } finally {
        t3();
      }
    }
  }
});
function d3(i6, t4) {
  return new u4(i6, t4);
}
function c3(i6) {
  for (var t4 = i6.s; void 0 !== t4; t4 = t4.n) if (t4.S.i !== t4.i || !t4.S.h() || t4.S.i !== t4.i) return true;
  return false;
}
function a3(i6) {
  for (var t4 = i6.s; void 0 !== t4; t4 = t4.n) {
    var r4 = t4.S.n;
    if (void 0 !== r4) t4.r = r4;
    t4.S.n = t4;
    t4.i = -1;
    if (void 0 === t4.n) {
      i6.s = t4;
      break;
    }
  }
}
function l3(i6) {
  var t4 = i6.s, r4 = void 0;
  while (void 0 !== t4) {
    var o4 = t4.p;
    if (-1 === t4.i) {
      t4.S.U(t4);
      if (void 0 !== o4) o4.n = t4.n;
      if (void 0 !== t4.n) t4.n.p = o4;
    } else r4 = t4;
    t4.S.n = t4.r;
    if (void 0 !== t4.r) t4.r = void 0;
    t4 = o4;
  }
  i6.s = r4;
}
function y3(i6, t4) {
  u4.call(this, void 0);
  this.x = i6;
  this.s = void 0;
  this.g = v3 - 1;
  this.f = 4;
  this.W = null == t4 ? void 0 : t4.watched;
  this.Z = null == t4 ? void 0 : t4.unwatched;
  this.name = null == t4 ? void 0 : t4.name;
}
y3.prototype = new u4();
y3.prototype.h = function() {
  this.f &= -3;
  if (1 & this.f) return false;
  if (32 == (36 & this.f)) return true;
  this.f &= -5;
  if (this.g === v3) return true;
  this.g = v3;
  this.f |= 1;
  if (this.i > 0 && !c3(this)) {
    this.f &= -2;
    return true;
  }
  var i6 = o3;
  try {
    a3(this);
    o3 = this;
    var t4 = this.x();
    if (16 & this.f || this.v !== t4 || 0 === this.i) {
      this.v = t4;
      this.f &= -17;
      this.i++;
    }
  } catch (i7) {
    this.v = i7;
    this.f |= 16;
    this.i++;
  }
  o3 = i6;
  l3(this);
  this.f &= -2;
  return true;
};
y3.prototype.S = function(i6) {
  if (void 0 === this.t) {
    this.f |= 36;
    for (var t4 = this.s; void 0 !== t4; t4 = t4.n) t4.S.S(t4);
  }
  u4.prototype.S.call(this, i6);
};
y3.prototype.U = function(i6) {
  if (void 0 !== this.t) {
    u4.prototype.U.call(this, i6);
    if (void 0 === this.t) {
      this.f &= -33;
      for (var t4 = this.s; void 0 !== t4; t4 = t4.n) t4.S.U(t4);
    }
  }
};
y3.prototype.N = function() {
  if (!(2 & this.f)) {
    this.f |= 6;
    for (var i6 = this.t; void 0 !== i6; i6 = i6.x) i6.t.N();
  }
};
Object.defineProperty(y3.prototype, "value", {
  get: function() {
    if (1 & this.f) throw new Error("Cycle detected");
    var i6 = e3(this);
    this.h();
    if (void 0 !== i6) i6.i = this.i;
    if (16 & this.f) throw this.v;
    return this.v;
  }
});
function w3(i6, t4) {
  return new y3(i6, t4);
}
function _3(i6) {
  var r4 = i6.u;
  i6.u = void 0;
  if ("function" == typeof r4) {
    s3++;
    var n3 = o3;
    o3 = void 0;
    try {
      r4();
    } catch (t4) {
      i6.f &= -2;
      i6.f |= 8;
      b2(i6);
      throw t4;
    } finally {
      o3 = n3;
      t3();
    }
  }
}
function b2(i6) {
  for (var t4 = i6.s; void 0 !== t4; t4 = t4.n) t4.S.U(t4);
  i6.x = void 0;
  i6.s = void 0;
  _3(i6);
}
function g4(i6) {
  if (o3 !== this) throw new Error("Out-of-order effect");
  l3(this);
  o3 = i6;
  this.f &= -2;
  if (8 & this.f) b2(this);
  t3();
}
function p3(i6, t4) {
  this.x = i6;
  this.u = void 0;
  this.s = void 0;
  this.o = void 0;
  this.f = 32;
  this.name = null == t4 ? void 0 : t4.name;
}
p3.prototype.c = function() {
  var i6 = this.S();
  try {
    if (8 & this.f) return;
    if (void 0 === this.x) return;
    var t4 = this.x();
    if ("function" == typeof t4) this.u = t4;
  } finally {
    i6();
  }
};
p3.prototype.S = function() {
  if (1 & this.f) throw new Error("Cycle detected");
  this.f |= 1;
  this.f &= -9;
  _3(this);
  a3(this);
  s3++;
  var i6 = o3;
  o3 = this;
  return g4.bind(this, i6);
};
p3.prototype.N = function() {
  if (!(2 & this.f)) {
    this.f |= 2;
    this.o = h3;
    h3 = this;
  }
};
p3.prototype.d = function() {
  this.f |= 8;
  if (!(1 & this.f)) b2(this);
};
p3.prototype.dispose = function() {
  this.d();
};
function E3(i6, t4) {
  var r4 = new p3(i6, t4);
  try {
    r4.c();
  } catch (i7) {
    r4.d();
    throw i7;
  }
  var o4 = r4.d.bind(r4);
  o4[Symbol.dispose] = o4;
  return o4;
}

// node_modules/.deno/@preact+signals@2.3.2/node_modules/@preact/signals/dist/signals.module.js
var h4;
var p4;
var w4;
var m3 = [];
E3(function() {
  h4 = this.N;
})();
function y4(i6, t4) {
  l[i6] = t4.bind(null, l[i6] || function() {
  });
}
function _4(i6) {
  if (w4) w4();
  w4 = i6 && i6.S();
}
function g5(i6) {
  var n3 = this, r4 = i6.data, f6 = useSignal(r4);
  f6.value = r4;
  var e4 = T2(function() {
    var i7 = n3, r5 = n3.__v;
    while (r5 = r5.__) if (r5.__c) {
      r5.__c.__$f |= 4;
      break;
    }
    var o4 = w3(function() {
      var i8 = f6.value.value;
      return 0 === i8 ? 0 : true === i8 ? "" : i8 || "";
    }), e5 = w3(function() {
      return !Array.isArray(o4.value) && !t(o4.value);
    }), u7 = E3(function() {
      this.N = F4;
      if (e5.value) {
        var n4 = o4.value;
        if (i7.__v && i7.__v.__e && 3 === i7.__v.__e.nodeType) i7.__v.__e.data = n4;
      }
    }), c6 = n3.__$u.d;
    n3.__$u.d = function() {
      u7();
      c6.call(this);
    };
    return [
      e5,
      o4
    ];
  }, []), u6 = e4[0], c5 = e4[1];
  return u6.value ? c5.peek() : c5.value;
}
g5.displayName = "ReactiveTextNode";
Object.defineProperties(u4.prototype, {
  constructor: {
    configurable: true,
    value: void 0
  },
  type: {
    configurable: true,
    value: g5
  },
  props: {
    configurable: true,
    get: function() {
      return {
        data: this
      };
    }
  },
  __b: {
    configurable: true,
    value: 1
  }
});
y4("__b", function(i6, n3) {
  if ("function" == typeof n3.type && "undefined" != typeof window && window.__PREACT_SIGNALS_DEVTOOLS__) window.__PREACT_SIGNALS_DEVTOOLS__.exitComponent();
  if ("string" == typeof n3.type) {
    var t4, r4 = n3.props;
    for (var o4 in r4) if ("children" !== o4) {
      var f6 = r4[o4];
      if (f6 instanceof u4) {
        if (!t4) n3.__np = t4 = {};
        t4[o4] = f6;
        r4[o4] = f6.peek();
      }
    }
  }
  i6(n3);
});
y4("__r", function(i6, n3) {
  if ("function" == typeof n3.type && "undefined" != typeof window && window.__PREACT_SIGNALS_DEVTOOLS__) window.__PREACT_SIGNALS_DEVTOOLS__.enterComponent(n3);
  if (n3.type !== k) {
    _4();
    var t4, o4 = n3.__c;
    if (o4) {
      o4.__$f &= -2;
      if (void 0 === (t4 = o4.__$u)) o4.__$u = t4 = function(i7) {
        var n4;
        E3(function() {
          n4 = this;
        });
        n4.c = function() {
          o4.__$f |= 1;
          o4.setState({});
        };
        return n4;
      }();
    }
    p4 = o4;
    _4(t4);
  }
  i6(n3);
});
y4("__e", function(i6, n3, t4, r4) {
  if ("undefined" != typeof window && window.__PREACT_SIGNALS_DEVTOOLS__) window.__PREACT_SIGNALS_DEVTOOLS__.exitComponent();
  _4();
  p4 = void 0;
  i6(n3, t4, r4);
});
y4("diffed", function(i6, n3) {
  if ("function" == typeof n3.type && "undefined" != typeof window && window.__PREACT_SIGNALS_DEVTOOLS__) window.__PREACT_SIGNALS_DEVTOOLS__.exitComponent();
  _4();
  p4 = void 0;
  var t4;
  if ("string" == typeof n3.type && (t4 = n3.__e)) {
    var r4 = n3.__np, o4 = n3.props;
    if (r4) {
      var f6 = t4.U;
      if (f6) for (var e4 in f6) {
        var u6 = f6[e4];
        if (void 0 !== u6 && !(e4 in r4)) {
          u6.d();
          f6[e4] = void 0;
        }
      }
      else {
        f6 = {};
        t4.U = f6;
      }
      for (var a5 in r4) {
        var c5 = f6[a5], v4 = r4[a5];
        if (void 0 === c5) {
          c5 = b3(t4, a5, v4, o4);
          f6[a5] = c5;
        } else c5.o(v4, o4);
      }
    }
  }
  i6(n3);
});
function b3(i6, n3, t4, r4) {
  var o4 = n3 in i6 && void 0 === i6.ownerSVGElement, f6 = d3(t4);
  return {
    o: function(i7, n4) {
      f6.value = i7;
      r4 = n4;
    },
    d: E3(function() {
      this.N = F4;
      var t5 = f6.value.value;
      if (r4[n3] !== t5) {
        r4[n3] = t5;
        if (o4) i6[n3] = t5;
        else if (t5) i6.setAttribute(n3, t5);
        else i6.removeAttribute(n3);
      }
    })
  };
}
y4("unmount", function(i6, n3) {
  if ("string" == typeof n3.type) {
    var t4 = n3.__e;
    if (t4) {
      var r4 = t4.U;
      if (r4) {
        t4.U = void 0;
        for (var o4 in r4) {
          var f6 = r4[o4];
          if (f6) f6.d();
        }
      }
    }
  } else {
    var e4 = n3.__c;
    if (e4) {
      var u6 = e4.__$u;
      if (u6) {
        e4.__$u = void 0;
        u6.d();
      }
    }
  }
  i6(n3);
});
y4("__h", function(i6, n3, t4, r4) {
  if (r4 < 3 || 9 === r4) n3.__$f |= 2;
  i6(n3, t4, r4);
});
x.prototype.shouldComponentUpdate = function(i6, n3) {
  var t4 = this.__$u, r4 = t4 && void 0 !== t4.s;
  for (var o4 in n3) return true;
  if (this.__f || "boolean" == typeof this.u && true === this.u) {
    var f6 = 2 & this.__$f;
    if (!(r4 || f6 || 4 & this.__$f)) return true;
    if (1 & this.__$f) return true;
  } else {
    if (!(r4 || 4 & this.__$f)) return true;
    if (3 & this.__$f) return true;
  }
  for (var e4 in i6) if ("__source" !== e4 && i6[e4] !== this.props[e4]) return true;
  for (var u6 in this.props) if (!(u6 in i6)) return true;
  return false;
};
function useSignal(i6, n3) {
  return d2(function() {
    return d3(i6, n3);
  })[0];
}
var q4 = function(i6) {
  queueMicrotask(function() {
    queueMicrotask(i6);
  });
};
function x3() {
  r3(function() {
    var i6;
    while (i6 = m3.shift()) h4.call(i6);
  });
}
function F4() {
  if (1 === m3.push(this)) (l.requestAnimationFrame || q4)(x3);
}

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/util.mjs
function defineProperty(obj, prop, value) {
  Object.defineProperty(obj, prop, {
    value
  });
}
function normalizeURL(uri) {
  return uri instanceof URL ? uri : new URL(uri, "file:///");
}
function isPlainObject(v4) {
  return typeof v4 === "object" && v4 !== null && v4.constructor === Object;
}
function promisifyIDBRequest(req) {
  return new Promise((resolve, reject) => {
    req.onsuccess = () => resolve(req.result);
    req.onerror = () => reject(req.error);
  });
}
async function openIDB(name, version4 = 1, ...stores) {
  const openRequest = indexedDB.open(name, version4);
  const promises = [];
  openRequest.onupgradeneeded = () => {
    const db2 = openRequest.result;
    for (const { name: name2, keyPath, onCreate } of stores) {
      if (!db2.objectStoreNames.contains(name2)) {
        const store = db2.createObjectStore(name2, {
          keyPath
        });
        if (onCreate) {
          promises.push(onCreate(store));
        }
      }
    }
  };
  const db = await promisifyIDBRequest(openRequest);
  await Promise.all(promises);
  return db;
}

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/cache.mjs
var IndexedDB = class {
  #db;
  constructor(name) {
    this.#db = this.#openDB(name);
  }
  #openDB(name) {
    return openIDB(name, 1, {
      name: "store",
      keyPath: "url"
    }).then((db) => {
      db.onclose = () => {
        this.#db = this.#openDB(name);
      };
      return this.#db = db;
    });
  }
  async get(url) {
    const db = await this.#db;
    const tx = db.transaction("store", "readonly").objectStore("store");
    return promisifyIDBRequest(tx.get(url));
  }
  async put(file) {
    const db = await this.#db;
    const tx = db.transaction("store", "readwrite").objectStore("store");
    await promisifyIDBRequest(tx.put(file));
  }
};
var MemoryCache = class {
  #cache = /* @__PURE__ */ new Map();
  async get(url) {
    return this.#cache.get(url) ?? null;
  }
  async put(file) {
    this.#cache.set(file.url, file);
  }
};
var Cache = class {
  _db;
  constructor(name) {
    if (globalThis.indexedDB) {
      this._db = new IndexedDB(name);
    } else {
      this._db = new MemoryCache();
    }
  }
  async fetch(url) {
    url = normalizeURL(url);
    const storedRes = await this.query(url);
    if (storedRes) {
      return storedRes;
    }
    const res = await fetch(url);
    if (res.ok) {
      const file = {
        url: url.href,
        content: null,
        ctime: Date.now()
      };
      if (res.redirected) {
        file.headers = [
          [
            "location",
            res.url
          ]
        ];
        this._db.put(file);
      }
      const content2 = await res.arrayBuffer();
      const headers = [
        ...res.headers.entries()
      ].filter(([k4]) => [
        "cache-control",
        "content-type",
        "content-length",
        "x-typescript-types"
      ].includes(k4));
      file.url = res.url;
      file.headers = headers;
      file.content = content2;
      this._db.put(file);
      const resp = new Response(content2, {
        headers
      });
      defineProperty(resp, "url", res.url);
      defineProperty(resp, "redirected", res.redirected);
      return resp;
    }
    return res;
  }
  async query(key2) {
    const url = normalizeURL(key2).href;
    const file = await this._db.get(url);
    if (file && file.headers) {
      const headers = new Headers(file.headers);
      if (headers.has("location")) {
        const redirectedUrl = headers.get("location");
        const res2 = await this.query(redirectedUrl);
        if (res2) {
          defineProperty(res2, "redirected", true);
        }
        return res2;
      }
      const res = new Response(file.content, {
        headers
      });
      defineProperty(res, "url", url);
      return res;
    }
    return null;
  }
};
var cache = new Cache("modern-monaco-cache");

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/shiki.mjs
var __defProp2 = Object.defineProperty;
var __export = (target, all2) => {
  for (var name in all2) __defProp2(target, name, {
    get: all2[name],
    enumerable: true
  });
};
var define_SHIKI_GRAMMARS_default = [
  {
    name: "abap",
    scopeName: "source.abap"
  },
  {
    name: "actionscript-3",
    scopeName: "source.actionscript.3"
  },
  {
    name: "ada",
    scopeName: "source.ada"
  },
  {
    name: "angular-html",
    scopeName: "text.html.derivative.ng",
    embedded: [
      "html",
      "angular-expression",
      "angular-let-declaration",
      "angular-template",
      "angular-template-blocks"
    ]
  },
  {
    name: "angular-ts",
    scopeName: "source.ts.ng",
    embedded: [
      "angular-expression",
      "angular-inline-style",
      "angular-inline-template",
      "angular-let-declaration",
      "angular-template",
      "angular-template-blocks"
    ]
  },
  {
    name: "apache",
    scopeName: "source.apacheconf"
  },
  {
    name: "apex",
    scopeName: "source.apex"
  },
  {
    name: "apl",
    scopeName: "source.apl",
    embedded: [
      "html",
      "xml",
      "css",
      "javascript",
      "json"
    ]
  },
  {
    name: "applescript",
    scopeName: "source.applescript"
  },
  {
    name: "ara",
    scopeName: "source.ara"
  },
  {
    name: "asciidoc",
    scopeName: "text.asciidoc",
    aliases: [
      "adoc"
    ],
    embedded: [
      "html",
      "yaml",
      "csv",
      "css",
      "ini",
      "java",
      "lua",
      "make",
      "perl",
      "r",
      "ruby",
      "php",
      "sql",
      "vb",
      "xml",
      "xsl",
      "bat",
      "clojure",
      "coffee",
      "c",
      "cpp",
      "diff",
      "docker",
      "git-commit",
      "git-rebase",
      "go",
      "groovy",
      "pug",
      "javascript",
      "json",
      "jsonc",
      "less",
      "objective-c",
      "swift",
      "scss",
      "raku",
      "powershell",
      "python",
      "julia",
      "regexp",
      "rust",
      "scala",
      "shellscript",
      "typescript",
      "tsx",
      "csharp",
      "fsharp",
      "dart",
      "handlebars",
      "markdown",
      "log",
      "erlang",
      "elixir",
      "latex",
      "bibtex",
      "abap",
      "rst",
      "haskell",
      "kotlin"
    ]
  },
  {
    name: "asm",
    scopeName: "source.asm.x86_64"
  },
  {
    name: "astro",
    scopeName: "source.astro",
    embedded: [
      "json",
      "javascript",
      "typescript",
      "stylus",
      "sass",
      "css",
      "scss",
      "less",
      "postcss",
      "tsx"
    ]
  },
  {
    name: "awk",
    scopeName: "source.awk"
  },
  {
    name: "ballerina",
    scopeName: "source.ballerina"
  },
  {
    name: "bat",
    scopeName: "source.batchfile",
    aliases: [
      "batch"
    ]
  },
  {
    name: "beancount",
    scopeName: "text.beancount"
  },
  {
    name: "berry",
    scopeName: "source.berry",
    aliases: [
      "be"
    ]
  },
  {
    name: "bibtex",
    scopeName: "text.bibtex"
  },
  {
    name: "bicep",
    scopeName: "source.bicep"
  },
  {
    name: "blade",
    scopeName: "text.html.php.blade",
    embedded: [
      "html-derivative",
      "html",
      "xml",
      "sql",
      "javascript",
      "json",
      "css"
    ]
  },
  {
    name: "bsl",
    scopeName: "source.bsl",
    aliases: [
      "1c"
    ],
    embedded: [
      "sdbl"
    ]
  },
  {
    name: "c",
    scopeName: "source.c"
  },
  {
    name: "cadence",
    scopeName: "source.cadence",
    aliases: [
      "cdc"
    ]
  },
  {
    name: "cairo",
    scopeName: "source.cairo0",
    embedded: [
      "python"
    ]
  },
  {
    name: "clarity",
    scopeName: "source.clar"
  },
  {
    name: "clojure",
    scopeName: "source.clojure",
    aliases: [
      "clj"
    ]
  },
  {
    name: "cmake",
    scopeName: "source.cmake"
  },
  {
    name: "cobol",
    scopeName: "source.cobol",
    embedded: [
      "html",
      "java"
    ]
  },
  {
    name: "codeowners",
    scopeName: "text.codeowners"
  },
  {
    name: "codeql",
    scopeName: "source.ql",
    aliases: [
      "ql"
    ]
  },
  {
    name: "coffee",
    scopeName: "source.coffee",
    aliases: [
      "coffeescript"
    ],
    embedded: [
      "javascript"
    ]
  },
  {
    name: "common-lisp",
    scopeName: "source.commonlisp",
    aliases: [
      "lisp"
    ]
  },
  {
    name: "coq",
    scopeName: "source.coq"
  },
  {
    name: "cpp",
    scopeName: "source.cpp",
    aliases: [
      "c++"
    ],
    embedded: [
      "cpp-macro",
      "regexp",
      "glsl",
      "sql"
    ]
  },
  {
    name: "crystal",
    scopeName: "source.crystal",
    embedded: [
      "html",
      "sql",
      "css",
      "c",
      "javascript",
      "shellscript"
    ]
  },
  {
    name: "csharp",
    scopeName: "source.cs",
    aliases: [
      "c#",
      "cs"
    ]
  },
  {
    name: "css",
    scopeName: "source.css"
  },
  {
    name: "csv",
    scopeName: "text.csv"
  },
  {
    name: "cue",
    scopeName: "source.cue"
  },
  {
    name: "cypher",
    scopeName: "source.cypher",
    aliases: [
      "cql"
    ]
  },
  {
    name: "d",
    scopeName: "source.d"
  },
  {
    name: "dart",
    scopeName: "source.dart"
  },
  {
    name: "dax",
    scopeName: "source.dax"
  },
  {
    name: "desktop",
    scopeName: "source.desktop"
  },
  {
    name: "diff",
    scopeName: "source.diff"
  },
  {
    name: "docker",
    scopeName: "source.dockerfile",
    aliases: [
      "dockerfile"
    ]
  },
  {
    name: "dotenv",
    scopeName: "source.dotenv"
  },
  {
    name: "dream-maker",
    scopeName: "source.dm"
  },
  {
    name: "edge",
    scopeName: "text.html.edge",
    embedded: [
      "typescript",
      "html",
      "html-derivative"
    ]
  },
  {
    name: "elixir",
    scopeName: "source.elixir",
    embedded: [
      "html"
    ]
  },
  {
    name: "elm",
    scopeName: "source.elm",
    embedded: [
      "glsl"
    ]
  },
  {
    name: "emacs-lisp",
    scopeName: "source.emacs.lisp",
    aliases: [
      "elisp"
    ]
  },
  {
    name: "erb",
    scopeName: "text.html.erb",
    embedded: [
      "html",
      "ruby"
    ]
  },
  {
    name: "erlang",
    scopeName: "source.erlang",
    aliases: [
      "erl"
    ],
    embedded: [
      "markdown"
    ]
  },
  {
    name: "fennel",
    scopeName: "source.fnl"
  },
  {
    name: "fish",
    scopeName: "source.fish"
  },
  {
    name: "fluent",
    scopeName: "source.ftl",
    aliases: [
      "ftl"
    ]
  },
  {
    name: "fortran-fixed-form",
    scopeName: "source.fortran.fixed",
    aliases: [
      "f",
      "for",
      "f77"
    ],
    embedded: [
      "fortran-free-form"
    ]
  },
  {
    name: "fortran-free-form",
    scopeName: "source.fortran.free",
    aliases: [
      "f90",
      "f95",
      "f03",
      "f08",
      "f18"
    ]
  },
  {
    name: "fsharp",
    scopeName: "source.fsharp",
    aliases: [
      "f#",
      "fs"
    ],
    embedded: [
      "markdown"
    ]
  },
  {
    name: "gdresource",
    scopeName: "source.gdresource",
    embedded: [
      "gdshader",
      "gdscript"
    ]
  },
  {
    name: "gdscript",
    scopeName: "source.gdscript"
  },
  {
    name: "gdshader",
    scopeName: "source.gdshader"
  },
  {
    name: "genie",
    scopeName: "source.genie"
  },
  {
    name: "gherkin",
    scopeName: "text.gherkin.feature"
  },
  {
    name: "git-commit",
    scopeName: "text.git-commit",
    embedded: [
      "diff"
    ]
  },
  {
    name: "git-rebase",
    scopeName: "text.git-rebase",
    embedded: [
      "shellscript"
    ]
  },
  {
    name: "gleam",
    scopeName: "source.gleam"
  },
  {
    name: "glimmer-js",
    scopeName: "source.gjs",
    aliases: [
      "gjs"
    ],
    embedded: [
      "javascript",
      "typescript",
      "css",
      "html"
    ]
  },
  {
    name: "glimmer-ts",
    scopeName: "source.gts",
    aliases: [
      "gts"
    ],
    embedded: [
      "typescript",
      "css",
      "javascript",
      "html"
    ]
  },
  {
    name: "glsl",
    scopeName: "source.glsl",
    embedded: [
      "c"
    ]
  },
  {
    name: "gnuplot",
    scopeName: "source.gnuplot"
  },
  {
    name: "go",
    scopeName: "source.go"
  },
  {
    name: "graphql",
    scopeName: "source.graphql",
    aliases: [
      "gql"
    ],
    embedded: [
      "javascript",
      "typescript",
      "jsx",
      "tsx"
    ]
  },
  {
    name: "groovy",
    scopeName: "source.groovy"
  },
  {
    name: "hack",
    scopeName: "source.hack",
    embedded: [
      "html",
      "sql"
    ]
  },
  {
    name: "haml",
    scopeName: "text.haml",
    embedded: [
      "ruby",
      "javascript",
      "sass",
      "coffee",
      "markdown",
      "css"
    ]
  },
  {
    name: "handlebars",
    scopeName: "text.html.handlebars",
    aliases: [
      "hbs"
    ],
    embedded: [
      "html",
      "css",
      "javascript",
      "yaml"
    ]
  },
  {
    name: "haskell",
    scopeName: "source.haskell",
    aliases: [
      "hs"
    ]
  },
  {
    name: "haxe",
    scopeName: "source.hx"
  },
  {
    name: "hcl",
    scopeName: "source.hcl"
  },
  {
    name: "hjson",
    scopeName: "source.hjson"
  },
  {
    name: "hlsl",
    scopeName: "source.hlsl"
  },
  {
    name: "html",
    scopeName: "text.html.basic",
    embedded: [
      "json",
      "css",
      "javascript"
    ]
  },
  {
    name: "html-derivative",
    scopeName: "text.html.derivative",
    embedded: [
      "html"
    ]
  },
  {
    name: "http",
    scopeName: "source.http",
    embedded: [
      "shellscript",
      "json",
      "xml",
      "graphql"
    ]
  },
  {
    name: "hxml",
    scopeName: "source.hxml",
    embedded: [
      "haxe"
    ]
  },
  {
    name: "hy",
    scopeName: "source.hy"
  },
  {
    name: "imba",
    scopeName: "source.imba"
  },
  {
    name: "ini",
    scopeName: "source.ini",
    aliases: [
      "properties"
    ]
  },
  {
    name: "java",
    scopeName: "source.java"
  },
  {
    name: "javascript",
    scopeName: "source.js",
    aliases: [
      "js",
      "mjs",
      "cjs"
    ],
    embedded: [
      "html",
      "css"
    ]
  },
  {
    name: "jinja",
    scopeName: "source.jinja",
    embedded: [
      "jinja-html"
    ]
  },
  {
    name: "jison",
    scopeName: "source.jison",
    embedded: [
      "javascript"
    ]
  },
  {
    name: "json",
    scopeName: "source.json"
  },
  {
    name: "json5",
    scopeName: "source.json5"
  },
  {
    name: "jsonc",
    scopeName: "source.json.comments"
  },
  {
    name: "jsonl",
    scopeName: "source.json.lines"
  },
  {
    name: "jsonnet",
    scopeName: "source.jsonnet"
  },
  {
    name: "jssm",
    scopeName: "source.jssm",
    aliases: [
      "fsl"
    ]
  },
  {
    name: "jsx",
    scopeName: "source.js.jsx",
    embedded: [
      "html",
      "css"
    ]
  },
  {
    name: "julia",
    scopeName: "source.julia",
    aliases: [
      "jl"
    ],
    embedded: [
      "cpp",
      "python",
      "javascript",
      "r",
      "sql"
    ]
  },
  {
    name: "kotlin",
    scopeName: "source.kotlin",
    aliases: [
      "kt",
      "kts"
    ]
  },
  {
    name: "kusto",
    scopeName: "source.kusto",
    aliases: [
      "kql"
    ]
  },
  {
    name: "latex",
    scopeName: "text.tex.latex",
    embedded: [
      "tex",
      "shellscript",
      "css",
      "gnuplot",
      "haskell",
      "html",
      "java",
      "julia",
      "javascript",
      "lua",
      "python",
      "ruby",
      "rust",
      "typescript",
      "xml",
      "yaml",
      "scala"
    ]
  },
  {
    name: "lean",
    scopeName: "source.lean4",
    aliases: [
      "lean4"
    ]
  },
  {
    name: "less",
    scopeName: "source.css.less"
  },
  {
    name: "liquid",
    scopeName: "text.html.liquid",
    embedded: [
      "html",
      "css",
      "json",
      "javascript"
    ]
  },
  {
    name: "llvm",
    scopeName: "source.llvm"
  },
  {
    name: "log",
    scopeName: "text.log"
  },
  {
    name: "logo",
    scopeName: "source.logo"
  },
  {
    name: "lua",
    scopeName: "source.lua",
    embedded: [
      "c"
    ]
  },
  {
    name: "luau",
    scopeName: "source.luau"
  },
  {
    name: "make",
    scopeName: "source.makefile",
    aliases: [
      "makefile"
    ]
  },
  {
    name: "markdown",
    scopeName: "text.html.markdown",
    aliases: [
      "md"
    ],
    embedded: [
      "css",
      "html",
      "ini",
      "java",
      "lua",
      "make",
      "perl",
      "r",
      "ruby",
      "php",
      "sql",
      "vb",
      "xml",
      "xsl",
      "yaml",
      "bat",
      "clojure",
      "coffee",
      "c",
      "cpp",
      "diff",
      "docker",
      "git-commit",
      "git-rebase",
      "go",
      "groovy",
      "pug",
      "javascript",
      "json",
      "jsonc",
      "jsonl",
      "less",
      "objective-c",
      "swift",
      "scss",
      "raku",
      "powershell",
      "python",
      "julia",
      "regexp",
      "rust",
      "scala",
      "shellscript",
      "typescript",
      "tsx",
      "csharp",
      "fsharp",
      "dart",
      "handlebars",
      "log",
      "erlang",
      "elixir",
      "latex",
      "bibtex",
      "abap",
      "rst",
      "html-derivative"
    ]
  },
  {
    name: "marko",
    scopeName: "text.marko",
    embedded: [
      "css",
      "less",
      "scss",
      "typescript"
    ]
  },
  {
    name: "matlab",
    scopeName: "source.matlab"
  },
  {
    name: "mdc",
    scopeName: "text.markdown.mdc.standalone",
    embedded: [
      "markdown",
      "yaml",
      "html-derivative"
    ]
  },
  {
    name: "mdx",
    scopeName: "source.mdx",
    embedded: [
      "tsx",
      "toml",
      "yaml",
      "c",
      "clojure",
      "coffee",
      "cpp",
      "csharp",
      "css",
      "diff",
      "docker",
      "elixir",
      "elm",
      "erlang",
      "go",
      "graphql",
      "haskell",
      "html",
      "ini",
      "java",
      "javascript",
      "json",
      "julia",
      "kotlin",
      "less",
      "lua",
      "make",
      "markdown",
      "objective-c",
      "perl",
      "python",
      "r",
      "ruby",
      "rust",
      "scala",
      "scss",
      "shellscript",
      "shellsession",
      "sql",
      "xml",
      "swift",
      "typescript"
    ]
  },
  {
    name: "mermaid",
    scopeName: "markdown.mermaid.codeblock",
    aliases: [
      "mmd"
    ]
  },
  {
    name: "mipsasm",
    scopeName: "source.mips",
    aliases: [
      "mips"
    ]
  },
  {
    name: "mojo",
    scopeName: "source.mojo"
  },
  {
    name: "move",
    scopeName: "source.move"
  },
  {
    name: "narrat",
    scopeName: "source.narrat",
    aliases: [
      "nar"
    ]
  },
  {
    name: "nextflow",
    scopeName: "source.nextflow",
    aliases: [
      "nf"
    ]
  },
  {
    name: "nginx",
    scopeName: "source.nginx",
    embedded: [
      "lua"
    ]
  },
  {
    name: "nim",
    scopeName: "source.nim",
    embedded: [
      "c",
      "html",
      "xml",
      "javascript",
      "css",
      "glsl",
      "markdown"
    ]
  },
  {
    name: "nix",
    scopeName: "source.nix"
  },
  {
    name: "nushell",
    scopeName: "source.nushell",
    aliases: [
      "nu"
    ]
  },
  {
    name: "objective-c",
    scopeName: "source.objc",
    aliases: [
      "objc"
    ]
  },
  {
    name: "objective-cpp",
    scopeName: "source.objcpp"
  },
  {
    name: "ocaml",
    scopeName: "source.ocaml"
  },
  {
    name: "pascal",
    scopeName: "source.pascal"
  },
  {
    name: "perl",
    scopeName: "source.perl",
    embedded: [
      "html",
      "xml",
      "css",
      "javascript",
      "sql"
    ]
  },
  {
    name: "php",
    scopeName: "source.php",
    embedded: [
      "html",
      "xml",
      "sql",
      "javascript",
      "json",
      "css"
    ]
  },
  {
    name: "plsql",
    scopeName: "source.plsql.oracle"
  },
  {
    name: "po",
    scopeName: "source.po",
    aliases: [
      "pot",
      "potx"
    ]
  },
  {
    name: "polar",
    scopeName: "source.polar"
  },
  {
    name: "postcss",
    scopeName: "source.css.postcss"
  },
  {
    name: "powerquery",
    scopeName: "source.powerquery"
  },
  {
    name: "powershell",
    scopeName: "source.powershell",
    aliases: [
      "ps",
      "ps1"
    ]
  },
  {
    name: "prisma",
    scopeName: "source.prisma"
  },
  {
    name: "prolog",
    scopeName: "source.prolog"
  },
  {
    name: "proto",
    scopeName: "source.proto",
    aliases: [
      "protobuf"
    ]
  },
  {
    name: "pug",
    scopeName: "text.pug",
    aliases: [
      "jade"
    ],
    embedded: [
      "javascript",
      "css",
      "sass",
      "scss",
      "stylus",
      "coffee",
      "html"
    ]
  },
  {
    name: "puppet",
    scopeName: "source.puppet"
  },
  {
    name: "purescript",
    scopeName: "source.purescript"
  },
  {
    name: "python",
    scopeName: "source.python",
    aliases: [
      "py"
    ]
  },
  {
    name: "qml",
    scopeName: "source.qml",
    embedded: [
      "javascript"
    ]
  },
  {
    name: "qmldir",
    scopeName: "source.qmldir"
  },
  {
    name: "qss",
    scopeName: "source.qss"
  },
  {
    name: "r",
    scopeName: "source.r"
  },
  {
    name: "racket",
    scopeName: "source.racket"
  },
  {
    name: "raku",
    scopeName: "source.perl.6",
    aliases: [
      "perl6"
    ]
  },
  {
    name: "razor",
    scopeName: "text.aspnetcorerazor",
    embedded: [
      "html",
      "csharp"
    ]
  },
  {
    name: "reg",
    scopeName: "source.reg"
  },
  {
    name: "regexp",
    scopeName: "source.regexp.python",
    aliases: [
      "regex"
    ]
  },
  {
    name: "rel",
    scopeName: "source.rel"
  },
  {
    name: "riscv",
    scopeName: "source.riscv"
  },
  {
    name: "rst",
    scopeName: "source.rst",
    embedded: [
      "html-derivative",
      "cpp",
      "python",
      "javascript",
      "shellscript",
      "yaml",
      "cmake",
      "ruby"
    ]
  },
  {
    name: "ruby",
    scopeName: "source.ruby",
    aliases: [
      "rb"
    ],
    embedded: [
      "html",
      "haml",
      "xml",
      "sql",
      "graphql",
      "css",
      "cpp",
      "c",
      "javascript",
      "shellscript",
      "lua",
      "yaml"
    ]
  },
  {
    name: "rust",
    scopeName: "source.rust",
    aliases: [
      "rs"
    ]
  },
  {
    name: "sas",
    scopeName: "source.sas",
    embedded: [
      "sql"
    ]
  },
  {
    name: "sass",
    scopeName: "source.sass"
  },
  {
    name: "scala",
    scopeName: "source.scala"
  },
  {
    name: "scheme",
    scopeName: "source.scheme"
  },
  {
    name: "scss",
    scopeName: "source.css.scss",
    embedded: [
      "css"
    ]
  },
  {
    name: "sdbl",
    scopeName: "source.sdbl",
    aliases: [
      "1c-query"
    ]
  },
  {
    name: "shaderlab",
    scopeName: "source.shaderlab",
    aliases: [
      "shader"
    ],
    embedded: [
      "hlsl"
    ]
  },
  {
    name: "shellscript",
    scopeName: "source.shell",
    aliases: [
      "bash",
      "sh",
      "shell",
      "zsh"
    ]
  },
  {
    name: "shellsession",
    scopeName: "text.shell-session",
    aliases: [
      "console"
    ],
    embedded: [
      "shellscript"
    ]
  },
  {
    name: "smalltalk",
    scopeName: "source.smalltalk"
  },
  {
    name: "solidity",
    scopeName: "source.solidity"
  },
  {
    name: "soy",
    scopeName: "text.html.soy",
    aliases: [
      "closure-templates"
    ],
    embedded: [
      "html"
    ]
  },
  {
    name: "sparql",
    scopeName: "source.sparql",
    embedded: [
      "turtle"
    ]
  },
  {
    name: "splunk",
    scopeName: "source.splunk_search",
    aliases: [
      "spl"
    ]
  },
  {
    name: "sql",
    scopeName: "source.sql"
  },
  {
    name: "ssh-config",
    scopeName: "source.ssh-config"
  },
  {
    name: "stata",
    scopeName: "source.stata",
    embedded: [
      "sql"
    ]
  },
  {
    name: "stylus",
    scopeName: "source.stylus",
    aliases: [
      "styl"
    ]
  },
  {
    name: "svelte",
    scopeName: "source.svelte",
    embedded: [
      "javascript",
      "typescript",
      "coffee",
      "stylus",
      "sass",
      "css",
      "scss",
      "less",
      "postcss",
      "pug",
      "markdown"
    ]
  },
  {
    name: "swift",
    scopeName: "source.swift"
  },
  {
    name: "system-verilog",
    scopeName: "source.systemverilog"
  },
  {
    name: "systemd",
    scopeName: "source.systemd"
  },
  {
    name: "talonscript",
    scopeName: "source.talon",
    aliases: [
      "talon"
    ]
  },
  {
    name: "tasl",
    scopeName: "source.tasl"
  },
  {
    name: "tcl",
    scopeName: "source.tcl"
  },
  {
    name: "templ",
    scopeName: "source.templ",
    embedded: [
      "go",
      "javascript",
      "css"
    ]
  },
  {
    name: "terraform",
    scopeName: "source.hcl.terraform",
    aliases: [
      "tf",
      "tfvars"
    ]
  },
  {
    name: "tex",
    scopeName: "text.tex",
    embedded: [
      "r"
    ]
  },
  {
    name: "toml",
    scopeName: "source.toml"
  },
  {
    name: "ts-tags",
    scopeName: "source.ts.tags",
    aliases: [
      "lit"
    ],
    embedded: [
      "typescript",
      "es-tag-css",
      "es-tag-glsl",
      "es-tag-html",
      "es-tag-sql",
      "es-tag-xml"
    ]
  },
  {
    name: "tsv",
    scopeName: "text.tsv"
  },
  {
    name: "tsx",
    scopeName: "source.tsx",
    embedded: [
      "html",
      "css"
    ]
  },
  {
    name: "turtle",
    scopeName: "source.turtle"
  },
  {
    name: "twig",
    scopeName: "text.html.twig",
    embedded: [
      "css",
      "javascript",
      "scss",
      "php",
      "python",
      "ruby"
    ]
  },
  {
    name: "typescript",
    scopeName: "source.ts",
    aliases: [
      "ts",
      "mts",
      "cts"
    ],
    embedded: [
      "html",
      "css"
    ]
  },
  {
    name: "typespec",
    scopeName: "source.tsp",
    aliases: [
      "tsp"
    ]
  },
  {
    name: "typst",
    scopeName: "source.typst",
    aliases: [
      "typ"
    ]
  },
  {
    name: "v",
    scopeName: "source.v"
  },
  {
    name: "vala",
    scopeName: "source.vala"
  },
  {
    name: "vb",
    scopeName: "source.asp.vb.net",
    aliases: [
      "cmd"
    ]
  },
  {
    name: "verilog",
    scopeName: "source.verilog"
  },
  {
    name: "vhdl",
    scopeName: "source.vhdl"
  },
  {
    name: "viml",
    scopeName: "source.viml",
    aliases: [
      "vim",
      "vimscript"
    ]
  },
  {
    name: "vue",
    scopeName: "source.vue",
    embedded: [
      "markdown",
      "pug",
      "stylus",
      "sass",
      "css",
      "scss",
      "less",
      "javascript",
      "typescript",
      "jsx",
      "tsx",
      "coffee",
      "json",
      "jsonc",
      "json5",
      "yaml",
      "toml",
      "graphql",
      "html-derivative",
      "html",
      "markdown-vue",
      "vue-directives",
      "vue-interpolations",
      "vue-sfc-style-variable-injection"
    ]
  },
  {
    name: "vue-html",
    scopeName: "text.html.vue-html",
    embedded: [
      "vue",
      "javascript"
    ]
  },
  {
    name: "vue-vine",
    scopeName: "source.vue-vine",
    embedded: [
      "css",
      "scss",
      "less",
      "stylus",
      "postcss",
      "vue",
      "javascript"
    ]
  },
  {
    name: "vyper",
    scopeName: "source.vyper",
    aliases: [
      "vy"
    ]
  },
  {
    name: "wasm",
    scopeName: "source.wat"
  },
  {
    name: "wenyan",
    scopeName: "source.wenyan",
    aliases: [
      "\u6587\u8A00"
    ]
  },
  {
    name: "wgsl",
    scopeName: "source.wgsl"
  },
  {
    name: "wikitext",
    scopeName: "source.wikitext",
    aliases: [
      "mediawiki",
      "wiki"
    ],
    embedded: [
      "html",
      "css",
      "ini",
      "java",
      "lua",
      "make",
      "perl",
      "r",
      "ruby",
      "php",
      "sql",
      "vb",
      "xml",
      "xsl",
      "yaml",
      "bat",
      "clojure",
      "coffee",
      "c",
      "cpp",
      "diff",
      "docker",
      "go",
      "groovy",
      "pug",
      "javascript",
      "jsonc",
      "less",
      "objective-c",
      "swift",
      "scss",
      "raku",
      "powershell",
      "python",
      "julia",
      "rust",
      "scala",
      "shellscript",
      "typescript",
      "csharp",
      "fsharp",
      "dart",
      "handlebars",
      "markdown",
      "erlang",
      "elixir",
      "latex",
      "bibtex",
      "json"
    ]
  },
  {
    name: "wit",
    scopeName: "source.wit"
  },
  {
    name: "wolfram",
    scopeName: "source.wolfram",
    aliases: [
      "wl"
    ]
  },
  {
    name: "xml",
    scopeName: "text.xml",
    embedded: [
      "java"
    ]
  },
  {
    name: "xsl",
    scopeName: "text.xml.xsl",
    embedded: [
      "xml"
    ]
  },
  {
    name: "yaml",
    scopeName: "source.yaml",
    aliases: [
      "yml"
    ]
  },
  {
    name: "zenscript",
    scopeName: "source.zenscript"
  },
  {
    name: "zig",
    scopeName: "source.zig"
  },
  {
    name: "angular-expression",
    scopeName: "expression.ng",
    embeddedIn: [
      "angular-ts",
      "angular-html"
    ]
  },
  {
    name: "angular-inline-style",
    scopeName: "inline-styles.ng",
    embedded: [
      "scss"
    ],
    embeddedIn: [
      "angular-ts"
    ],
    injectTo: [
      "source.ts.ng"
    ]
  },
  {
    name: "angular-inline-template",
    scopeName: "inline-template.ng",
    embedded: [
      "angular-html",
      "angular-template"
    ],
    embeddedIn: [
      "angular-ts"
    ],
    injectTo: [
      "source.ts.ng"
    ]
  },
  {
    name: "angular-let-declaration",
    scopeName: "template.let.ng",
    embedded: [
      "angular-expression"
    ],
    embeddedIn: [
      "angular-ts",
      "angular-html"
    ],
    injectTo: [
      "text.html.derivative",
      "text.html.derivative.ng",
      "source.ts.ng"
    ]
  },
  {
    name: "angular-template",
    scopeName: "template.ng",
    embedded: [
      "angular-expression"
    ],
    embeddedIn: [
      "angular-ts",
      "angular-html"
    ],
    injectTo: [
      "text.html.derivative",
      "text.html.derivative.ng",
      "source.ts.ng"
    ]
  },
  {
    name: "angular-template-blocks",
    scopeName: "template.blocks.ng",
    embedded: [
      "angular-expression",
      "angular-template"
    ],
    embeddedIn: [
      "angular-ts",
      "angular-html"
    ],
    injectTo: [
      "text.html.derivative",
      "text.html.derivative.ng",
      "source.ts.ng"
    ]
  },
  {
    name: "cpp-macro",
    scopeName: "source.cpp.embedded.macro",
    embedded: [
      "regexp",
      "glsl",
      "sql"
    ],
    embeddedIn: [
      "cpp"
    ]
  },
  {
    name: "es-tag-css",
    scopeName: "inline.es6-css",
    embedded: [
      "typescript",
      "css",
      "javascript"
    ],
    embeddedIn: [
      "ts-tags"
    ],
    injectTo: [
      "source.ts",
      "source.js"
    ]
  },
  {
    name: "es-tag-glsl",
    scopeName: "inline.es6-glsl",
    embedded: [
      "typescript",
      "glsl",
      "javascript"
    ],
    embeddedIn: [
      "ts-tags"
    ],
    injectTo: [
      "source.ts",
      "source.js"
    ]
  },
  {
    name: "es-tag-html",
    scopeName: "inline.es6-html",
    embedded: [
      "typescript",
      "html",
      "javascript"
    ],
    embeddedIn: [
      "ts-tags"
    ],
    injectTo: [
      "source.ts",
      "source.js"
    ]
  },
  {
    name: "es-tag-sql",
    scopeName: "inline.es6-sql",
    embedded: [
      "typescript",
      "sql"
    ],
    embeddedIn: [
      "ts-tags"
    ],
    injectTo: [
      "source.ts",
      "source.js"
    ]
  },
  {
    name: "es-tag-xml",
    scopeName: "inline.es6-xml",
    embedded: [
      "xml"
    ],
    embeddedIn: [
      "ts-tags"
    ],
    injectTo: [
      "source.ts",
      "source.js"
    ]
  },
  {
    name: "jinja-html",
    scopeName: "text.html.jinja",
    embedded: [
      "html"
    ],
    embeddedIn: [
      "jinja"
    ]
  },
  {
    name: "markdown-vue",
    scopeName: "markdown.vue.codeblock",
    embeddedIn: [
      "vue"
    ],
    injectTo: [
      "text.html.markdown"
    ]
  },
  {
    name: "vue-directives",
    scopeName: "vue.directives",
    embeddedIn: [
      "vue"
    ],
    injectTo: [
      "source.vue",
      "text.html.markdown",
      "text.html.derivative",
      "text.pug"
    ]
  },
  {
    name: "vue-interpolations",
    scopeName: "vue.interpolations",
    embeddedIn: [
      "vue"
    ],
    injectTo: [
      "source.vue",
      "text.html.markdown",
      "text.html.derivative",
      "text.pug"
    ]
  },
  {
    name: "vue-sfc-style-variable-injection",
    scopeName: "vue.sfc.style.variable.injection",
    embedded: [
      "javascript"
    ],
    embeddedIn: [
      "vue"
    ],
    injectTo: [
      "source.vue"
    ]
  }
];
var define_SHIKI_THEMES_default = [
  "andromeeda",
  "aurora-x",
  "ayu-dark",
  "catppuccin-frappe",
  "catppuccin-latte",
  "catppuccin-macchiato",
  "catppuccin-mocha",
  "dark-plus",
  "dracula",
  "dracula-soft",
  "everforest-dark",
  "everforest-light",
  "github-dark",
  "github-dark-default",
  "github-dark-dimmed",
  "github-dark-high-contrast",
  "github-light",
  "github-light-default",
  "github-light-high-contrast",
  "gruvbox-dark-hard",
  "gruvbox-dark-medium",
  "gruvbox-dark-soft",
  "gruvbox-light-hard",
  "gruvbox-light-medium",
  "gruvbox-light-soft",
  "houston",
  "kanagawa-dragon",
  "kanagawa-lotus",
  "kanagawa-wave",
  "laserwave",
  "light-plus",
  "material-theme",
  "material-theme-darker",
  "material-theme-lighter",
  "material-theme-ocean",
  "material-theme-palenight",
  "min-dark",
  "min-light",
  "monokai",
  "night-owl",
  "nord",
  "one-dark-pro",
  "one-light",
  "plastic",
  "poimandres",
  "red",
  "rose-pine",
  "rose-pine-dawn",
  "rose-pine-moon",
  "slack-dark",
  "slack-ochin",
  "snazzy-light",
  "solarized-dark",
  "solarized-light",
  "synthwave-84",
  "tokyo-night",
  "vesper",
  "vitesse-black",
  "vitesse-dark",
  "vitesse-light"
];
var ShikiError = class extends Error {
  constructor(message) {
    super(message);
    this.name = "ShikiError";
  }
};
function clone(something) {
  return doClone(something);
}
function doClone(something) {
  if (Array.isArray(something)) {
    return cloneArray(something);
  }
  if (something instanceof RegExp) {
    return something;
  }
  if (typeof something === "object") {
    return cloneObj(something);
  }
  return something;
}
function cloneArray(arr) {
  let r4 = [];
  for (let i6 = 0, len = arr.length; i6 < len; i6++) {
    r4[i6] = doClone(arr[i6]);
  }
  return r4;
}
function cloneObj(obj) {
  let r4 = {};
  for (let key2 in obj) {
    r4[key2] = doClone(obj[key2]);
  }
  return r4;
}
function mergeObjects(target, ...sources) {
  sources.forEach((source) => {
    for (let key2 in source) {
      target[key2] = source[key2];
    }
  });
  return target;
}
function basename(path) {
  const idx = ~path.lastIndexOf("/") || ~path.lastIndexOf("\\");
  if (idx === 0) {
    return path;
  } else if (~idx === path.length - 1) {
    return basename(path.substring(0, path.length - 1));
  } else {
    return path.substr(~idx + 1);
  }
}
var CAPTURING_REGEX_SOURCE = /\$(\d+)|\${(\d+):\/(downcase|upcase)}/g;
var RegexSource = class {
  static hasCaptures(regexSource) {
    if (regexSource === null) {
      return false;
    }
    CAPTURING_REGEX_SOURCE.lastIndex = 0;
    return CAPTURING_REGEX_SOURCE.test(regexSource);
  }
  static replaceCaptures(regexSource, captureSource, captureIndices) {
    return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {
      let capture = captureIndices[parseInt(index || commandIndex, 10)];
      if (capture) {
        let result = captureSource.substring(capture.start, capture.end);
        while (result[0] === ".") {
          result = result.substring(1);
        }
        switch (command) {
          case "downcase":
            return result.toLowerCase();
          case "upcase":
            return result.toUpperCase();
          default:
            return result;
        }
      } else {
        return match;
      }
    });
  }
};
function strcmp(a5, b4) {
  if (a5 < b4) {
    return -1;
  }
  if (a5 > b4) {
    return 1;
  }
  return 0;
}
function strArrCmp(a5, b4) {
  if (a5 === null && b4 === null) {
    return 0;
  }
  if (!a5) {
    return -1;
  }
  if (!b4) {
    return 1;
  }
  let len1 = a5.length;
  let len2 = b4.length;
  if (len1 === len2) {
    for (let i6 = 0; i6 < len1; i6++) {
      let res = strcmp(a5[i6], b4[i6]);
      if (res !== 0) {
        return res;
      }
    }
    return 0;
  }
  return len1 - len2;
}
function isValidHexColor(hex) {
  if (/^#[0-9a-f]{6}$/i.test(hex)) {
    return true;
  }
  if (/^#[0-9a-f]{8}$/i.test(hex)) {
    return true;
  }
  if (/^#[0-9a-f]{3}$/i.test(hex)) {
    return true;
  }
  if (/^#[0-9a-f]{4}$/i.test(hex)) {
    return true;
  }
  return false;
}
function escapeRegExpCharacters(value) {
  return value.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&");
}
var CachedFn = class {
  constructor(fn2) {
    this.fn = fn2;
  }
  cache = /* @__PURE__ */ new Map();
  get(key2) {
    if (this.cache.has(key2)) {
      return this.cache.get(key2);
    }
    const value = this.fn(key2);
    this.cache.set(key2, value);
    return value;
  }
};
var Theme = class {
  constructor(_colorMap, _defaults, _root) {
    this._colorMap = _colorMap;
    this._defaults = _defaults;
    this._root = _root;
  }
  static createFromRawTheme(source, colorMap2) {
    return this.createFromParsedTheme(parseTheme(source), colorMap2);
  }
  static createFromParsedTheme(source, colorMap2) {
    return resolveParsedThemeRules(source, colorMap2);
  }
  _cachedMatchRoot = new CachedFn((scopeName) => this._root.match(scopeName));
  getColorMap() {
    return this._colorMap.getColorMap();
  }
  getDefaults() {
    return this._defaults;
  }
  match(scopePath) {
    if (scopePath === null) {
      return this._defaults;
    }
    const scopeName = scopePath.scopeName;
    const matchingTrieElements = this._cachedMatchRoot.get(scopeName);
    const effectiveRule = matchingTrieElements.find((v4) => _scopePathMatchesParentScopes(scopePath.parent, v4.parentScopes));
    if (!effectiveRule) {
      return null;
    }
    return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);
  }
};
var ScopeStack = class _ScopeStack {
  constructor(parent, scopeName) {
    this.parent = parent;
    this.scopeName = scopeName;
  }
  static push(path, scopeNames) {
    for (const name of scopeNames) {
      path = new _ScopeStack(path, name);
    }
    return path;
  }
  static from(...segments) {
    let result = null;
    for (let i6 = 0; i6 < segments.length; i6++) {
      result = new _ScopeStack(result, segments[i6]);
    }
    return result;
  }
  push(scopeName) {
    return new _ScopeStack(this, scopeName);
  }
  getSegments() {
    let item = this;
    const result = [];
    while (item) {
      result.push(item.scopeName);
      item = item.parent;
    }
    result.reverse();
    return result;
  }
  toString() {
    return this.getSegments().join(" ");
  }
  extends(other) {
    if (this === other) {
      return true;
    }
    if (this.parent === null) {
      return false;
    }
    return this.parent.extends(other);
  }
  getExtensionIfDefined(base) {
    const result = [];
    let item = this;
    while (item && item !== base) {
      result.push(item.scopeName);
      item = item.parent;
    }
    return item === base ? result.reverse() : void 0;
  }
};
function _scopePathMatchesParentScopes(scopePath, parentScopes) {
  if (parentScopes.length === 0) {
    return true;
  }
  for (let index = 0; index < parentScopes.length; index++) {
    let scopePattern = parentScopes[index];
    let scopeMustMatch = false;
    if (scopePattern === ">") {
      if (index === parentScopes.length - 1) {
        return false;
      }
      scopePattern = parentScopes[++index];
      scopeMustMatch = true;
    }
    while (scopePath) {
      if (_matchesScope(scopePath.scopeName, scopePattern)) {
        break;
      }
      if (scopeMustMatch) {
        return false;
      }
      scopePath = scopePath.parent;
    }
    if (!scopePath) {
      return false;
    }
    scopePath = scopePath.parent;
  }
  return true;
}
function _matchesScope(scopeName, scopePattern) {
  return scopePattern === scopeName || scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === ".";
}
var StyleAttributes = class {
  constructor(fontStyle, foregroundId, backgroundId) {
    this.fontStyle = fontStyle;
    this.foregroundId = foregroundId;
    this.backgroundId = backgroundId;
  }
};
function parseTheme(source) {
  if (!source) {
    return [];
  }
  if (!source.settings || !Array.isArray(source.settings)) {
    return [];
  }
  let settings = source.settings;
  let result = [], resultLen = 0;
  for (let i6 = 0, len = settings.length; i6 < len; i6++) {
    let entry = settings[i6];
    if (!entry.settings) {
      continue;
    }
    let scopes;
    if (typeof entry.scope === "string") {
      let _scope = entry.scope;
      _scope = _scope.replace(/^[,]+/, "");
      _scope = _scope.replace(/[,]+$/, "");
      scopes = _scope.split(",");
    } else if (Array.isArray(entry.scope)) {
      scopes = entry.scope;
    } else {
      scopes = [
        ""
      ];
    }
    let fontStyle = -1;
    if (typeof entry.settings.fontStyle === "string") {
      fontStyle = 0;
      let segments = entry.settings.fontStyle.split(" ");
      for (let j4 = 0, lenJ = segments.length; j4 < lenJ; j4++) {
        let segment = segments[j4];
        switch (segment) {
          case "italic":
            fontStyle = fontStyle | 1;
            break;
          case "bold":
            fontStyle = fontStyle | 2;
            break;
          case "underline":
            fontStyle = fontStyle | 4;
            break;
          case "strikethrough":
            fontStyle = fontStyle | 8;
            break;
        }
      }
    }
    let foreground = null;
    if (typeof entry.settings.foreground === "string" && isValidHexColor(entry.settings.foreground)) {
      foreground = entry.settings.foreground;
    }
    let background = null;
    if (typeof entry.settings.background === "string" && isValidHexColor(entry.settings.background)) {
      background = entry.settings.background;
    }
    for (let j4 = 0, lenJ = scopes.length; j4 < lenJ; j4++) {
      let _scope = scopes[j4].trim();
      let segments = _scope.split(" ");
      let scope = segments[segments.length - 1];
      let parentScopes = null;
      if (segments.length > 1) {
        parentScopes = segments.slice(0, segments.length - 1);
        parentScopes.reverse();
      }
      result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i6, fontStyle, foreground, background);
    }
  }
  return result;
}
var ParsedThemeRule = class {
  constructor(scope, parentScopes, index, fontStyle, foreground, background) {
    this.scope = scope;
    this.parentScopes = parentScopes;
    this.index = index;
    this.fontStyle = fontStyle;
    this.foreground = foreground;
    this.background = background;
  }
};
var FontStyle = /* @__PURE__ */ ((FontStyle2) => {
  FontStyle2[FontStyle2["NotSet"] = -1] = "NotSet";
  FontStyle2[FontStyle2["None"] = 0] = "None";
  FontStyle2[FontStyle2["Italic"] = 1] = "Italic";
  FontStyle2[FontStyle2["Bold"] = 2] = "Bold";
  FontStyle2[FontStyle2["Underline"] = 4] = "Underline";
  FontStyle2[FontStyle2["Strikethrough"] = 8] = "Strikethrough";
  return FontStyle2;
})(FontStyle || {});
function resolveParsedThemeRules(parsedThemeRules, _colorMap) {
  parsedThemeRules.sort((a5, b4) => {
    let r4 = strcmp(a5.scope, b4.scope);
    if (r4 !== 0) {
      return r4;
    }
    r4 = strArrCmp(a5.parentScopes, b4.parentScopes);
    if (r4 !== 0) {
      return r4;
    }
    return a5.index - b4.index;
  });
  let defaultFontStyle = 0;
  let defaultForeground = "#000000";
  let defaultBackground = "#ffffff";
  while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === "") {
    let incomingDefaults = parsedThemeRules.shift();
    if (incomingDefaults.fontStyle !== -1) {
      defaultFontStyle = incomingDefaults.fontStyle;
    }
    if (incomingDefaults.foreground !== null) {
      defaultForeground = incomingDefaults.foreground;
    }
    if (incomingDefaults.background !== null) {
      defaultBackground = incomingDefaults.background;
    }
  }
  let colorMap2 = new ColorMap(_colorMap);
  let defaults = new StyleAttributes(defaultFontStyle, colorMap2.getId(defaultForeground), colorMap2.getId(defaultBackground));
  let root2 = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1, 0, 0), []);
  for (let i6 = 0, len = parsedThemeRules.length; i6 < len; i6++) {
    let rule = parsedThemeRules[i6];
    root2.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap2.getId(rule.foreground), colorMap2.getId(rule.background));
  }
  return new Theme(colorMap2, defaults, root2);
}
var ColorMap = class {
  _isFrozen;
  _lastColorId;
  _id2color;
  _color2id;
  constructor(_colorMap) {
    this._lastColorId = 0;
    this._id2color = [];
    this._color2id = /* @__PURE__ */ Object.create(null);
    if (Array.isArray(_colorMap)) {
      this._isFrozen = true;
      for (let i6 = 0, len = _colorMap.length; i6 < len; i6++) {
        this._color2id[_colorMap[i6]] = i6;
        this._id2color[i6] = _colorMap[i6];
      }
    } else {
      this._isFrozen = false;
    }
  }
  getId(color) {
    if (color === null) {
      return 0;
    }
    color = color.toUpperCase();
    let value = this._color2id[color];
    if (value) {
      return value;
    }
    if (this._isFrozen) {
      throw new Error(`Missing color in color map - ${color}`);
    }
    value = ++this._lastColorId;
    this._color2id[color] = value;
    this._id2color[value] = color;
    return value;
  }
  getColorMap() {
    return this._id2color.slice(0);
  }
};
var emptyParentScopes = Object.freeze([]);
var ThemeTrieElementRule = class _ThemeTrieElementRule {
  scopeDepth;
  parentScopes;
  fontStyle;
  foreground;
  background;
  constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {
    this.scopeDepth = scopeDepth;
    this.parentScopes = parentScopes || emptyParentScopes;
    this.fontStyle = fontStyle;
    this.foreground = foreground;
    this.background = background;
  }
  clone() {
    return new _ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);
  }
  static cloneArr(arr) {
    let r4 = [];
    for (let i6 = 0, len = arr.length; i6 < len; i6++) {
      r4[i6] = arr[i6].clone();
    }
    return r4;
  }
  acceptOverwrite(scopeDepth, fontStyle, foreground, background) {
    if (this.scopeDepth > scopeDepth) {
      console.log("how did this happen?");
    } else {
      this.scopeDepth = scopeDepth;
    }
    if (fontStyle !== -1) {
      this.fontStyle = fontStyle;
    }
    if (foreground !== 0) {
      this.foreground = foreground;
    }
    if (background !== 0) {
      this.background = background;
    }
  }
};
var ThemeTrieElement = class _ThemeTrieElement {
  constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {
    this._mainRule = _mainRule;
    this._children = _children;
    this._rulesWithParentScopes = rulesWithParentScopes;
  }
  _rulesWithParentScopes;
  static _cmpBySpecificity(a5, b4) {
    if (a5.scopeDepth !== b4.scopeDepth) {
      return b4.scopeDepth - a5.scopeDepth;
    }
    let aParentIndex = 0;
    let bParentIndex = 0;
    while (true) {
      if (a5.parentScopes[aParentIndex] === ">") {
        aParentIndex++;
      }
      if (b4.parentScopes[bParentIndex] === ">") {
        bParentIndex++;
      }
      if (aParentIndex >= a5.parentScopes.length || bParentIndex >= b4.parentScopes.length) {
        break;
      }
      const parentScopeLengthDiff = b4.parentScopes[bParentIndex].length - a5.parentScopes[aParentIndex].length;
      if (parentScopeLengthDiff !== 0) {
        return parentScopeLengthDiff;
      }
      aParentIndex++;
      bParentIndex++;
    }
    return b4.parentScopes.length - a5.parentScopes.length;
  }
  match(scope) {
    if (scope !== "") {
      let dotIndex = scope.indexOf(".");
      let head2;
      let tail;
      if (dotIndex === -1) {
        head2 = scope;
        tail = "";
      } else {
        head2 = scope.substring(0, dotIndex);
        tail = scope.substring(dotIndex + 1);
      }
      if (this._children.hasOwnProperty(head2)) {
        return this._children[head2].match(tail);
      }
    }
    const rules = this._rulesWithParentScopes.concat(this._mainRule);
    rules.sort(_ThemeTrieElement._cmpBySpecificity);
    return rules;
  }
  insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {
    if (scope === "") {
      this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);
      return;
    }
    let dotIndex = scope.indexOf(".");
    let head2;
    let tail;
    if (dotIndex === -1) {
      head2 = scope;
      tail = "";
    } else {
      head2 = scope.substring(0, dotIndex);
      tail = scope.substring(dotIndex + 1);
    }
    let child;
    if (this._children.hasOwnProperty(head2)) {
      child = this._children[head2];
    } else {
      child = new _ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));
      this._children[head2] = child;
    }
    child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);
  }
  _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {
    if (parentScopes === null) {
      this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);
      return;
    }
    for (let i6 = 0, len = this._rulesWithParentScopes.length; i6 < len; i6++) {
      let rule = this._rulesWithParentScopes[i6];
      if (strArrCmp(rule.parentScopes, parentScopes) === 0) {
        rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);
        return;
      }
    }
    if (fontStyle === -1) {
      fontStyle = this._mainRule.fontStyle;
    }
    if (foreground === 0) {
      foreground = this._mainRule.foreground;
    }
    if (background === 0) {
      background = this._mainRule.background;
    }
    this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));
  }
};
var EncodedTokenMetadata = class _EncodedTokenMetadata {
  static toBinaryStr(encodedTokenAttributes) {
    return encodedTokenAttributes.toString(2).padStart(32, "0");
  }
  static print(encodedTokenAttributes) {
    const languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);
    const tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);
    const fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);
    const foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);
    const background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);
    console.log({
      languageId,
      tokenType,
      fontStyle,
      foreground,
      background
    });
  }
  static getLanguageId(encodedTokenAttributes) {
    return (encodedTokenAttributes & 255) >>> 0;
  }
  static getTokenType(encodedTokenAttributes) {
    return (encodedTokenAttributes & 768) >>> 8;
  }
  static containsBalancedBrackets(encodedTokenAttributes) {
    return (encodedTokenAttributes & 1024) !== 0;
  }
  static getFontStyle(encodedTokenAttributes) {
    return (encodedTokenAttributes & 30720) >>> 11;
  }
  static getForeground(encodedTokenAttributes) {
    return (encodedTokenAttributes & 16744448) >>> 15;
  }
  static getBackground(encodedTokenAttributes) {
    return (encodedTokenAttributes & 4278190080) >>> 24;
  }
  /**
   * Updates the fields in `metadata`.
   * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.
   */
  static set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {
    let _languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);
    let _tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);
    let _containsBalancedBracketsBit = _EncodedTokenMetadata.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;
    let _fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);
    let _foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);
    let _background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);
    if (languageId !== 0) {
      _languageId = languageId;
    }
    if (tokenType !== 8) {
      _tokenType = fromOptionalTokenType(tokenType);
    }
    if (containsBalancedBrackets !== null) {
      _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;
    }
    if (fontStyle !== -1) {
      _fontStyle = fontStyle;
    }
    if (foreground !== 0) {
      _foreground = foreground;
    }
    if (background !== 0) {
      _background = background;
    }
    return (_languageId << 0 | _tokenType << 8 | _containsBalancedBracketsBit << 10 | _fontStyle << 11 | _foreground << 15 | _background << 24) >>> 0;
  }
};
function toOptionalTokenType(standardType) {
  return standardType;
}
function fromOptionalTokenType(standardType) {
  return standardType;
}
function createMatchers(selector, matchesName) {
  const results = [];
  const tokenizer = newTokenizer(selector);
  let token = tokenizer.next();
  while (token !== null) {
    let priority = 0;
    if (token.length === 2 && token.charAt(1) === ":") {
      switch (token.charAt(0)) {
        case "R":
          priority = 1;
          break;
        case "L":
          priority = -1;
          break;
        default:
          console.log(`Unknown priority ${token} in scope selector`);
      }
      token = tokenizer.next();
    }
    let matcher = parseConjunction();
    results.push({
      matcher,
      priority
    });
    if (token !== ",") {
      break;
    }
    token = tokenizer.next();
  }
  return results;
  function parseOperand() {
    if (token === "-") {
      token = tokenizer.next();
      const expressionToNegate = parseOperand();
      return (matcherInput) => !!expressionToNegate && !expressionToNegate(matcherInput);
    }
    if (token === "(") {
      token = tokenizer.next();
      const expressionInParents = parseInnerExpression();
      if (token === ")") {
        token = tokenizer.next();
      }
      return expressionInParents;
    }
    if (isIdentifier(token)) {
      const identifiers = [];
      do {
        identifiers.push(token);
        token = tokenizer.next();
      } while (isIdentifier(token));
      return (matcherInput) => matchesName(identifiers, matcherInput);
    }
    return null;
  }
  function parseConjunction() {
    const matchers = [];
    let matcher = parseOperand();
    while (matcher) {
      matchers.push(matcher);
      matcher = parseOperand();
    }
    return (matcherInput) => matchers.every((matcher2) => matcher2(matcherInput));
  }
  function parseInnerExpression() {
    const matchers = [];
    let matcher = parseConjunction();
    while (matcher) {
      matchers.push(matcher);
      if (token === "|" || token === ",") {
        do {
          token = tokenizer.next();
        } while (token === "|" || token === ",");
      } else {
        break;
      }
      matcher = parseConjunction();
    }
    return (matcherInput) => matchers.some((matcher2) => matcher2(matcherInput));
  }
}
function isIdentifier(token) {
  return !!token && !!token.match(/[\w\.:]+/);
}
function newTokenizer(input2) {
  let regex = /([LR]:|[\w\.:][\w\.:\-]*|[\,\|\-\(\)])/g;
  let match = regex.exec(input2);
  return {
    next: () => {
      if (!match) {
        return null;
      }
      const res = match[0];
      match = regex.exec(input2);
      return res;
    }
  };
}
function disposeOnigString(str) {
  if (typeof str.dispose === "function") {
    str.dispose();
  }
}
var TopLevelRuleReference = class {
  constructor(scopeName) {
    this.scopeName = scopeName;
  }
  toKey() {
    return this.scopeName;
  }
};
var TopLevelRepositoryRuleReference = class {
  constructor(scopeName, ruleName) {
    this.scopeName = scopeName;
    this.ruleName = ruleName;
  }
  toKey() {
    return `${this.scopeName}#${this.ruleName}`;
  }
};
var ExternalReferenceCollector = class {
  _references = [];
  _seenReferenceKeys = /* @__PURE__ */ new Set();
  get references() {
    return this._references;
  }
  visitedRule = /* @__PURE__ */ new Set();
  add(reference) {
    const key2 = reference.toKey();
    if (this._seenReferenceKeys.has(key2)) {
      return;
    }
    this._seenReferenceKeys.add(key2);
    this._references.push(reference);
  }
};
var ScopeDependencyProcessor = class {
  constructor(repo, initialScopeName) {
    this.repo = repo;
    this.initialScopeName = initialScopeName;
    this.seenFullScopeRequests.add(this.initialScopeName);
    this.Q = [
      new TopLevelRuleReference(this.initialScopeName)
    ];
  }
  seenFullScopeRequests = /* @__PURE__ */ new Set();
  seenPartialScopeRequests = /* @__PURE__ */ new Set();
  Q;
  processQueue() {
    const q5 = this.Q;
    this.Q = [];
    const deps = new ExternalReferenceCollector();
    for (const dep of q5) {
      collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);
    }
    for (const dep of deps.references) {
      if (dep instanceof TopLevelRuleReference) {
        if (this.seenFullScopeRequests.has(dep.scopeName)) {
          continue;
        }
        this.seenFullScopeRequests.add(dep.scopeName);
        this.Q.push(dep);
      } else {
        if (this.seenFullScopeRequests.has(dep.scopeName)) {
          continue;
        }
        if (this.seenPartialScopeRequests.has(dep.toKey())) {
          continue;
        }
        this.seenPartialScopeRequests.add(dep.toKey());
        this.Q.push(dep);
      }
    }
  }
};
function collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {
  const selfGrammar = repo.lookup(reference.scopeName);
  if (!selfGrammar) {
    if (reference.scopeName === baseGrammarScopeName) {
      throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);
    }
    return;
  }
  const baseGrammar = repo.lookup(baseGrammarScopeName);
  if (reference instanceof TopLevelRuleReference) {
    collectExternalReferencesInTopLevelRule({
      baseGrammar,
      selfGrammar
    }, result);
  } else {
    collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, {
      baseGrammar,
      selfGrammar,
      repository: selfGrammar.repository
    }, result);
  }
  const injections = repo.injections(reference.scopeName);
  if (injections) {
    for (const injection of injections) {
      result.add(new TopLevelRuleReference(injection));
    }
  }
}
function collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {
  if (context.repository && context.repository[ruleName]) {
    const rule = context.repository[ruleName];
    collectExternalReferencesInRules([
      rule
    ], context, result);
  }
}
function collectExternalReferencesInTopLevelRule(context, result) {
  if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {
    collectExternalReferencesInRules(context.selfGrammar.patterns, {
      ...context,
      repository: context.selfGrammar.repository
    }, result);
  }
  if (context.selfGrammar.injections) {
    collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), {
      ...context,
      repository: context.selfGrammar.repository
    }, result);
  }
}
function collectExternalReferencesInRules(rules, context, result) {
  for (const rule of rules) {
    if (result.visitedRule.has(rule)) {
      continue;
    }
    result.visitedRule.add(rule);
    const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;
    if (Array.isArray(rule.patterns)) {
      collectExternalReferencesInRules(rule.patterns, {
        ...context,
        repository: patternRepository
      }, result);
    }
    const include = rule.include;
    if (!include) {
      continue;
    }
    const reference = parseInclude(include);
    switch (reference.kind) {
      case 0:
        collectExternalReferencesInTopLevelRule({
          ...context,
          selfGrammar: context.baseGrammar
        }, result);
        break;
      case 1:
        collectExternalReferencesInTopLevelRule(context, result);
        break;
      case 2:
        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, {
          ...context,
          repository: patternRepository
        }, result);
        break;
      case 3:
      case 4:
        const selfGrammar = reference.scopeName === context.selfGrammar.scopeName ? context.selfGrammar : reference.scopeName === context.baseGrammar.scopeName ? context.baseGrammar : void 0;
        if (selfGrammar) {
          const newContext = {
            baseGrammar: context.baseGrammar,
            selfGrammar,
            repository: patternRepository
          };
          if (reference.kind === 4) {
            collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);
          } else {
            collectExternalReferencesInTopLevelRule(newContext, result);
          }
        } else {
          if (reference.kind === 4) {
            result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));
          } else {
            result.add(new TopLevelRuleReference(reference.scopeName));
          }
        }
        break;
    }
  }
}
var BaseReference = class {
  kind = 0;
};
var SelfReference = class {
  kind = 1;
};
var RelativeReference = class {
  constructor(ruleName) {
    this.ruleName = ruleName;
  }
  kind = 2;
};
var TopLevelReference = class {
  constructor(scopeName) {
    this.scopeName = scopeName;
  }
  kind = 3;
};
var TopLevelRepositoryReference = class {
  constructor(scopeName, ruleName) {
    this.scopeName = scopeName;
    this.ruleName = ruleName;
  }
  kind = 4;
};
function parseInclude(include) {
  if (include === "$base") {
    return new BaseReference();
  } else if (include === "$self") {
    return new SelfReference();
  }
  const indexOfSharp = include.indexOf("#");
  if (indexOfSharp === -1) {
    return new TopLevelReference(include);
  } else if (indexOfSharp === 0) {
    return new RelativeReference(include.substring(1));
  } else {
    const scopeName = include.substring(0, indexOfSharp);
    const ruleName = include.substring(indexOfSharp + 1);
    return new TopLevelRepositoryReference(scopeName, ruleName);
  }
}
var HAS_BACK_REFERENCES = /\\(\d+)/;
var BACK_REFERENCING_END = /\\(\d+)/g;
var ruleIdSymbol = Symbol("RuleId");
var endRuleId = -1;
var whileRuleId = -2;
function ruleIdFromNumber(id) {
  return id;
}
function ruleIdToNumber(id) {
  return id;
}
var Rule = class {
  $location;
  id;
  _nameIsCapturing;
  _name;
  _contentNameIsCapturing;
  _contentName;
  constructor($location, id, name, contentName) {
    this.$location = $location;
    this.id = id;
    this._name = name || null;
    this._nameIsCapturing = RegexSource.hasCaptures(this._name);
    this._contentName = contentName || null;
    this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);
  }
  get debugName() {
    const location2 = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : "unknown";
    return `${this.constructor.name}#${this.id} @ ${location2}`;
  }
  getName(lineText, captureIndices) {
    if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {
      return this._name;
    }
    return RegexSource.replaceCaptures(this._name, lineText, captureIndices);
  }
  getContentName(lineText, captureIndices) {
    if (!this._contentNameIsCapturing || this._contentName === null) {
      return this._contentName;
    }
    return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);
  }
};
var CaptureRule = class extends Rule {
  retokenizeCapturedWithRuleId;
  constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {
    super($location, id, name, contentName);
    this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;
  }
  dispose() {
  }
  collectPatterns(grammar, out) {
    throw new Error("Not supported!");
  }
  compile(grammar, endRegexSource) {
    throw new Error("Not supported!");
  }
  compileAG(grammar, endRegexSource, allowA, allowG) {
    throw new Error("Not supported!");
  }
};
var MatchRule = class extends Rule {
  _match;
  captures;
  _cachedCompiledPatterns;
  constructor($location, id, name, match, captures) {
    super($location, id, name, null);
    this._match = new RegExpSource(match, this.id);
    this.captures = captures;
    this._cachedCompiledPatterns = null;
  }
  dispose() {
    if (this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns.dispose();
      this._cachedCompiledPatterns = null;
    }
  }
  get debugMatchRegExp() {
    return `${this._match.source}`;
  }
  collectPatterns(grammar, out) {
    out.push(this._match);
  }
  compile(grammar, endRegexSource) {
    return this._getCachedCompiledPatterns(grammar).compile(grammar);
  }
  compileAG(grammar, endRegexSource, allowA, allowG) {
    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);
  }
  _getCachedCompiledPatterns(grammar) {
    if (!this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns = new RegExpSourceList();
      this.collectPatterns(grammar, this._cachedCompiledPatterns);
    }
    return this._cachedCompiledPatterns;
  }
};
var IncludeOnlyRule = class extends Rule {
  hasMissingPatterns;
  patterns;
  _cachedCompiledPatterns;
  constructor($location, id, name, contentName, patterns) {
    super($location, id, name, contentName);
    this.patterns = patterns.patterns;
    this.hasMissingPatterns = patterns.hasMissingPatterns;
    this._cachedCompiledPatterns = null;
  }
  dispose() {
    if (this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns.dispose();
      this._cachedCompiledPatterns = null;
    }
  }
  collectPatterns(grammar, out) {
    for (const pattern of this.patterns) {
      const rule = grammar.getRule(pattern);
      rule.collectPatterns(grammar, out);
    }
  }
  compile(grammar, endRegexSource) {
    return this._getCachedCompiledPatterns(grammar).compile(grammar);
  }
  compileAG(grammar, endRegexSource, allowA, allowG) {
    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);
  }
  _getCachedCompiledPatterns(grammar) {
    if (!this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns = new RegExpSourceList();
      this.collectPatterns(grammar, this._cachedCompiledPatterns);
    }
    return this._cachedCompiledPatterns;
  }
};
var BeginEndRule = class extends Rule {
  _begin;
  beginCaptures;
  _end;
  endHasBackReferences;
  endCaptures;
  applyEndPatternLast;
  hasMissingPatterns;
  patterns;
  _cachedCompiledPatterns;
  constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {
    super($location, id, name, contentName);
    this._begin = new RegExpSource(begin, this.id);
    this.beginCaptures = beginCaptures;
    this._end = new RegExpSource(end ? end : "\uFFFF", -1);
    this.endHasBackReferences = this._end.hasBackReferences;
    this.endCaptures = endCaptures;
    this.applyEndPatternLast = applyEndPatternLast || false;
    this.patterns = patterns.patterns;
    this.hasMissingPatterns = patterns.hasMissingPatterns;
    this._cachedCompiledPatterns = null;
  }
  dispose() {
    if (this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns.dispose();
      this._cachedCompiledPatterns = null;
    }
  }
  get debugBeginRegExp() {
    return `${this._begin.source}`;
  }
  get debugEndRegExp() {
    return `${this._end.source}`;
  }
  getEndWithResolvedBackReferences(lineText, captureIndices) {
    return this._end.resolveBackReferences(lineText, captureIndices);
  }
  collectPatterns(grammar, out) {
    out.push(this._begin);
  }
  compile(grammar, endRegexSource) {
    return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);
  }
  compileAG(grammar, endRegexSource, allowA, allowG) {
    return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);
  }
  _getCachedCompiledPatterns(grammar, endRegexSource) {
    if (!this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns = new RegExpSourceList();
      for (const pattern of this.patterns) {
        const rule = grammar.getRule(pattern);
        rule.collectPatterns(grammar, this._cachedCompiledPatterns);
      }
      if (this.applyEndPatternLast) {
        this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);
      } else {
        this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);
      }
    }
    if (this._end.hasBackReferences) {
      if (this.applyEndPatternLast) {
        this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);
      } else {
        this._cachedCompiledPatterns.setSource(0, endRegexSource);
      }
    }
    return this._cachedCompiledPatterns;
  }
};
var BeginWhileRule = class extends Rule {
  _begin;
  beginCaptures;
  whileCaptures;
  _while;
  whileHasBackReferences;
  hasMissingPatterns;
  patterns;
  _cachedCompiledPatterns;
  _cachedCompiledWhilePatterns;
  constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {
    super($location, id, name, contentName);
    this._begin = new RegExpSource(begin, this.id);
    this.beginCaptures = beginCaptures;
    this.whileCaptures = whileCaptures;
    this._while = new RegExpSource(_while, whileRuleId);
    this.whileHasBackReferences = this._while.hasBackReferences;
    this.patterns = patterns.patterns;
    this.hasMissingPatterns = patterns.hasMissingPatterns;
    this._cachedCompiledPatterns = null;
    this._cachedCompiledWhilePatterns = null;
  }
  dispose() {
    if (this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns.dispose();
      this._cachedCompiledPatterns = null;
    }
    if (this._cachedCompiledWhilePatterns) {
      this._cachedCompiledWhilePatterns.dispose();
      this._cachedCompiledWhilePatterns = null;
    }
  }
  get debugBeginRegExp() {
    return `${this._begin.source}`;
  }
  get debugWhileRegExp() {
    return `${this._while.source}`;
  }
  getWhileWithResolvedBackReferences(lineText, captureIndices) {
    return this._while.resolveBackReferences(lineText, captureIndices);
  }
  collectPatterns(grammar, out) {
    out.push(this._begin);
  }
  compile(grammar, endRegexSource) {
    return this._getCachedCompiledPatterns(grammar).compile(grammar);
  }
  compileAG(grammar, endRegexSource, allowA, allowG) {
    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);
  }
  _getCachedCompiledPatterns(grammar) {
    if (!this._cachedCompiledPatterns) {
      this._cachedCompiledPatterns = new RegExpSourceList();
      for (const pattern of this.patterns) {
        const rule = grammar.getRule(pattern);
        rule.collectPatterns(grammar, this._cachedCompiledPatterns);
      }
    }
    return this._cachedCompiledPatterns;
  }
  compileWhile(grammar, endRegexSource) {
    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);
  }
  compileWhileAG(grammar, endRegexSource, allowA, allowG) {
    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);
  }
  _getCachedCompiledWhilePatterns(grammar, endRegexSource) {
    if (!this._cachedCompiledWhilePatterns) {
      this._cachedCompiledWhilePatterns = new RegExpSourceList();
      this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);
    }
    if (this._while.hasBackReferences) {
      this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : "\uFFFF");
    }
    return this._cachedCompiledWhilePatterns;
  }
};
var RuleFactory = class _RuleFactory {
  static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {
    return helper.registerRule((id) => {
      return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);
    });
  }
  static getCompiledRuleId(desc, helper, repository) {
    if (!desc.id) {
      helper.registerRule((id) => {
        desc.id = id;
        if (desc.match) {
          return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, _RuleFactory._compileCaptures(desc.captures, helper, repository));
        }
        if (typeof desc.begin === "undefined") {
          if (desc.repository) {
            repository = mergeObjects({}, repository, desc.repository);
          }
          let patterns = desc.patterns;
          if (typeof patterns === "undefined" && desc.include) {
            patterns = [
              {
                include: desc.include
              }
            ];
          }
          return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, _RuleFactory._compilePatterns(patterns, helper, repository));
        }
        if (desc.while) {
          return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, _RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), _RuleFactory._compilePatterns(desc.patterns, helper, repository));
        }
        return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, _RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, _RuleFactory._compilePatterns(desc.patterns, helper, repository));
      });
    }
    return desc.id;
  }
  static _compileCaptures(captures, helper, repository) {
    let r4 = [];
    if (captures) {
      let maximumCaptureId = 0;
      for (const captureId in captures) {
        if (captureId === "$vscodeTextmateLocation") {
          continue;
        }
        const numericCaptureId = parseInt(captureId, 10);
        if (numericCaptureId > maximumCaptureId) {
          maximumCaptureId = numericCaptureId;
        }
      }
      for (let i6 = 0; i6 <= maximumCaptureId; i6++) {
        r4[i6] = null;
      }
      for (const captureId in captures) {
        if (captureId === "$vscodeTextmateLocation") {
          continue;
        }
        const numericCaptureId = parseInt(captureId, 10);
        let retokenizeCapturedWithRuleId = 0;
        if (captures[captureId].patterns) {
          retokenizeCapturedWithRuleId = _RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);
        }
        r4[numericCaptureId] = _RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);
      }
    }
    return r4;
  }
  static _compilePatterns(patterns, helper, repository) {
    let r4 = [];
    if (patterns) {
      for (let i6 = 0, len = patterns.length; i6 < len; i6++) {
        const pattern = patterns[i6];
        let ruleId = -1;
        if (pattern.include) {
          const reference = parseInclude(pattern.include);
          switch (reference.kind) {
            case 0:
            case 1:
              ruleId = _RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);
              break;
            case 2:
              let localIncludedRule = repository[reference.ruleName];
              if (localIncludedRule) {
                ruleId = _RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);
              } else {
              }
              break;
            case 3:
            case 4:
              const externalGrammarName = reference.scopeName;
              const externalGrammarInclude = reference.kind === 4 ? reference.ruleName : null;
              const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);
              if (externalGrammar) {
                if (externalGrammarInclude) {
                  let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];
                  if (externalIncludedRule) {
                    ruleId = _RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);
                  } else {
                  }
                } else {
                  ruleId = _RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);
                }
              } else {
              }
              break;
          }
        } else {
          ruleId = _RuleFactory.getCompiledRuleId(pattern, helper, repository);
        }
        if (ruleId !== -1) {
          const rule = helper.getRule(ruleId);
          let skipRule = false;
          if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {
            if (rule.hasMissingPatterns && rule.patterns.length === 0) {
              skipRule = true;
            }
          }
          if (skipRule) {
            continue;
          }
          r4.push(ruleId);
        }
      }
    }
    return {
      patterns: r4,
      hasMissingPatterns: (patterns ? patterns.length : 0) !== r4.length
    };
  }
};
var RegExpSource = class _RegExpSource {
  source;
  ruleId;
  hasAnchor;
  hasBackReferences;
  _anchorCache;
  constructor(regExpSource, ruleId) {
    if (regExpSource && typeof regExpSource === "string") {
      const len = regExpSource.length;
      let lastPushedPos = 0;
      let output = [];
      let hasAnchor = false;
      for (let pos = 0; pos < len; pos++) {
        const ch = regExpSource.charAt(pos);
        if (ch === "\\") {
          if (pos + 1 < len) {
            const nextCh = regExpSource.charAt(pos + 1);
            if (nextCh === "z") {
              output.push(regExpSource.substring(lastPushedPos, pos));
              output.push("$(?!\\n)(?<!\\n)");
              lastPushedPos = pos + 2;
            } else if (nextCh === "A" || nextCh === "G") {
              hasAnchor = true;
            }
            pos++;
          }
        }
      }
      this.hasAnchor = hasAnchor;
      if (lastPushedPos === 0) {
        this.source = regExpSource;
      } else {
        output.push(regExpSource.substring(lastPushedPos, len));
        this.source = output.join("");
      }
    } else {
      this.hasAnchor = false;
      this.source = regExpSource;
    }
    if (this.hasAnchor) {
      this._anchorCache = this._buildAnchorCache();
    } else {
      this._anchorCache = null;
    }
    this.ruleId = ruleId;
    if (typeof this.source === "string") {
      this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);
    } else {
      this.hasBackReferences = false;
    }
  }
  clone() {
    return new _RegExpSource(this.source, this.ruleId);
  }
  setSource(newSource) {
    if (this.source === newSource) {
      return;
    }
    this.source = newSource;
    if (this.hasAnchor) {
      this._anchorCache = this._buildAnchorCache();
    }
  }
  resolveBackReferences(lineText, captureIndices) {
    if (typeof this.source !== "string") {
      throw new Error("This method should only be called if the source is a string");
    }
    let capturedValues = captureIndices.map((capture) => {
      return lineText.substring(capture.start, capture.end);
    });
    BACK_REFERENCING_END.lastIndex = 0;
    return this.source.replace(BACK_REFERENCING_END, (match, g1) => {
      return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || "");
    });
  }
  _buildAnchorCache() {
    if (typeof this.source !== "string") {
      throw new Error("This method should only be called if the source is a string");
    }
    let A0_G0_result = [];
    let A0_G1_result = [];
    let A1_G0_result = [];
    let A1_G1_result = [];
    let pos, len, ch, nextCh;
    for (pos = 0, len = this.source.length; pos < len; pos++) {
      ch = this.source.charAt(pos);
      A0_G0_result[pos] = ch;
      A0_G1_result[pos] = ch;
      A1_G0_result[pos] = ch;
      A1_G1_result[pos] = ch;
      if (ch === "\\") {
        if (pos + 1 < len) {
          nextCh = this.source.charAt(pos + 1);
          if (nextCh === "A") {
            A0_G0_result[pos + 1] = "\uFFFF";
            A0_G1_result[pos + 1] = "\uFFFF";
            A1_G0_result[pos + 1] = "A";
            A1_G1_result[pos + 1] = "A";
          } else if (nextCh === "G") {
            A0_G0_result[pos + 1] = "\uFFFF";
            A0_G1_result[pos + 1] = "G";
            A1_G0_result[pos + 1] = "\uFFFF";
            A1_G1_result[pos + 1] = "G";
          } else {
            A0_G0_result[pos + 1] = nextCh;
            A0_G1_result[pos + 1] = nextCh;
            A1_G0_result[pos + 1] = nextCh;
            A1_G1_result[pos + 1] = nextCh;
          }
          pos++;
        }
      }
    }
    return {
      A0_G0: A0_G0_result.join(""),
      A0_G1: A0_G1_result.join(""),
      A1_G0: A1_G0_result.join(""),
      A1_G1: A1_G1_result.join("")
    };
  }
  resolveAnchors(allowA, allowG) {
    if (!this.hasAnchor || !this._anchorCache || typeof this.source !== "string") {
      return this.source;
    }
    if (allowA) {
      if (allowG) {
        return this._anchorCache.A1_G1;
      } else {
        return this._anchorCache.A1_G0;
      }
    } else {
      if (allowG) {
        return this._anchorCache.A0_G1;
      } else {
        return this._anchorCache.A0_G0;
      }
    }
  }
};
var RegExpSourceList = class {
  _items;
  _hasAnchors;
  _cached;
  _anchorCache;
  constructor() {
    this._items = [];
    this._hasAnchors = false;
    this._cached = null;
    this._anchorCache = {
      A0_G0: null,
      A0_G1: null,
      A1_G0: null,
      A1_G1: null
    };
  }
  dispose() {
    this._disposeCaches();
  }
  _disposeCaches() {
    if (this._cached) {
      this._cached.dispose();
      this._cached = null;
    }
    if (this._anchorCache.A0_G0) {
      this._anchorCache.A0_G0.dispose();
      this._anchorCache.A0_G0 = null;
    }
    if (this._anchorCache.A0_G1) {
      this._anchorCache.A0_G1.dispose();
      this._anchorCache.A0_G1 = null;
    }
    if (this._anchorCache.A1_G0) {
      this._anchorCache.A1_G0.dispose();
      this._anchorCache.A1_G0 = null;
    }
    if (this._anchorCache.A1_G1) {
      this._anchorCache.A1_G1.dispose();
      this._anchorCache.A1_G1 = null;
    }
  }
  push(item) {
    this._items.push(item);
    this._hasAnchors = this._hasAnchors || item.hasAnchor;
  }
  unshift(item) {
    this._items.unshift(item);
    this._hasAnchors = this._hasAnchors || item.hasAnchor;
  }
  length() {
    return this._items.length;
  }
  setSource(index, newSource) {
    if (this._items[index].source !== newSource) {
      this._disposeCaches();
      this._items[index].setSource(newSource);
    }
  }
  compile(onigLib) {
    if (!this._cached) {
      let regExps = this._items.map((e4) => e4.source);
      this._cached = new CompiledRule(onigLib, regExps, this._items.map((e4) => e4.ruleId));
    }
    return this._cached;
  }
  compileAG(onigLib, allowA, allowG) {
    if (!this._hasAnchors) {
      return this.compile(onigLib);
    } else {
      if (allowA) {
        if (allowG) {
          if (!this._anchorCache.A1_G1) {
            this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);
          }
          return this._anchorCache.A1_G1;
        } else {
          if (!this._anchorCache.A1_G0) {
            this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);
          }
          return this._anchorCache.A1_G0;
        }
      } else {
        if (allowG) {
          if (!this._anchorCache.A0_G1) {
            this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);
          }
          return this._anchorCache.A0_G1;
        } else {
          if (!this._anchorCache.A0_G0) {
            this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);
          }
          return this._anchorCache.A0_G0;
        }
      }
    }
  }
  _resolveAnchors(onigLib, allowA, allowG) {
    let regExps = this._items.map((e4) => e4.resolveAnchors(allowA, allowG));
    return new CompiledRule(onigLib, regExps, this._items.map((e4) => e4.ruleId));
  }
};
var CompiledRule = class {
  constructor(onigLib, regExps, rules) {
    this.regExps = regExps;
    this.rules = rules;
    this.scanner = onigLib.createOnigScanner(regExps);
  }
  scanner;
  dispose() {
    if (typeof this.scanner.dispose === "function") {
      this.scanner.dispose();
    }
  }
  toString() {
    const r4 = [];
    for (let i6 = 0, len = this.rules.length; i6 < len; i6++) {
      r4.push("   - " + this.rules[i6] + ": " + this.regExps[i6]);
    }
    return r4.join("\n");
  }
  findNextMatchSync(string, startPosition, options) {
    const result = this.scanner.findNextMatchSync(string, startPosition, options);
    if (!result) {
      return null;
    }
    return {
      ruleId: this.rules[result.index],
      captureIndices: result.captureIndices
    };
  }
};
var BasicScopeAttributes = class {
  constructor(languageId, tokenType) {
    this.languageId = languageId;
    this.tokenType = tokenType;
  }
};
var BasicScopeAttributesProvider = class _BasicScopeAttributesProvider {
  _defaultAttributes;
  _embeddedLanguagesMatcher;
  constructor(initialLanguageId, embeddedLanguages) {
    this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8);
    this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));
  }
  getDefaultAttributes() {
    return this._defaultAttributes;
  }
  getBasicScopeAttributes(scopeName) {
    if (scopeName === null) {
      return _BasicScopeAttributesProvider._NULL_SCOPE_METADATA;
    }
    return this._getBasicScopeAttributes.get(scopeName);
  }
  static _NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);
  _getBasicScopeAttributes = new CachedFn((scopeName) => {
    const languageId = this._scopeToLanguage(scopeName);
    const standardTokenType = this._toStandardTokenType(scopeName);
    return new BasicScopeAttributes(languageId, standardTokenType);
  });
  /**
   * Given a produced TM scope, return the language that token describes or null if unknown.
   * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null
   */
  _scopeToLanguage(scope) {
    return this._embeddedLanguagesMatcher.match(scope) || 0;
  }
  _toStandardTokenType(scopeName) {
    const m4 = scopeName.match(_BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);
    if (!m4) {
      return 8;
    }
    switch (m4[1]) {
      case "comment":
        return 1;
      case "string":
        return 2;
      case "regex":
        return 3;
      case "meta.embedded":
        return 0;
    }
    throw new Error("Unexpected match for standard token type!");
  }
  static STANDARD_TOKEN_TYPE_REGEXP = /\b(comment|string|regex|meta\.embedded)\b/;
};
var ScopeMatcher = class {
  values;
  scopesRegExp;
  constructor(values) {
    if (values.length === 0) {
      this.values = null;
      this.scopesRegExp = null;
    } else {
      this.values = new Map(values);
      const escapedScopes = values.map(([scopeName, value]) => escapeRegExpCharacters(scopeName));
      escapedScopes.sort();
      escapedScopes.reverse();
      this.scopesRegExp = new RegExp(`^((${escapedScopes.join(")|(")}))($|\\.)`, "");
    }
  }
  match(scope) {
    if (!this.scopesRegExp) {
      return void 0;
    }
    const m4 = scope.match(this.scopesRegExp);
    if (!m4) {
      return void 0;
    }
    return this.values.get(m4[1]);
  }
};
var DebugFlags = {
  InDebugMode: typeof process !== "undefined" && !!process.env["VSCODE_TEXTMATE_DEBUG"]
};
var UseOnigurumaFindOptions = false;
var TokenizeStringResult = class {
  constructor(stack, stoppedEarly) {
    this.stack = stack;
    this.stoppedEarly = stoppedEarly;
  }
};
function _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {
  const lineLength = lineText.content.length;
  let STOP = false;
  let anchorPosition = -1;
  if (checkWhileConditions) {
    const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);
    stack = whileCheckResult.stack;
    linePos = whileCheckResult.linePos;
    isFirstLine = whileCheckResult.isFirstLine;
    anchorPosition = whileCheckResult.anchorPosition;
  }
  const startTime = Date.now();
  while (!STOP) {
    if (timeLimit !== 0) {
      const elapsedTime = Date.now() - startTime;
      if (elapsedTime > timeLimit) {
        return new TokenizeStringResult(stack, true);
      }
    }
    scanNext();
  }
  return new TokenizeStringResult(stack, false);
  function scanNext() {
    if (false) {
      console.log("");
      console.log(`@@scanNext ${linePos}: |${lineText.content.substr(linePos).replace(/\n$/, "\\n")}|`);
    }
    const r4 = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);
    if (!r4) {
      lineTokens.produce(stack, lineLength);
      STOP = true;
      return;
    }
    const captureIndices = r4.captureIndices;
    const matchedRuleId = r4.matchedRuleId;
    const hasAdvanced = captureIndices && captureIndices.length > 0 ? captureIndices[0].end > linePos : false;
    if (matchedRuleId === endRuleId) {
      const poppedRule = stack.getRule(grammar);
      if (false) {
        console.log("  popping " + poppedRule.debugName + " - " + poppedRule.debugEndRegExp);
      }
      lineTokens.produce(stack, captureIndices[0].start);
      stack = stack.withContentNameScopesList(stack.nameScopesList);
      handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);
      lineTokens.produce(stack, captureIndices[0].end);
      const popped = stack;
      stack = stack.parent;
      anchorPosition = popped.getAnchorPos();
      if (!hasAdvanced && popped.getEnterPos() === linePos) {
        if (false) {
          console.error("[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing");
        }
        stack = popped;
        lineTokens.produce(stack, lineLength);
        STOP = true;
        return;
      }
    } else {
      const _rule = grammar.getRule(matchedRuleId);
      lineTokens.produce(stack, captureIndices[0].start);
      const beforePush = stack;
      const scopeName = _rule.getName(lineText.content, captureIndices);
      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);
      stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);
      if (_rule instanceof BeginEndRule) {
        const pushedRule = _rule;
        if (false) {
          console.log("  pushing " + pushedRule.debugName + " - " + pushedRule.debugBeginRegExp);
        }
        handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);
        lineTokens.produce(stack, captureIndices[0].end);
        anchorPosition = captureIndices[0].end;
        const contentName = pushedRule.getContentName(lineText.content, captureIndices);
        const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);
        stack = stack.withContentNameScopesList(contentNameScopesList);
        if (pushedRule.endHasBackReferences) {
          stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));
        }
        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {
          if (false) {
            console.error("[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing");
          }
          stack = stack.pop();
          lineTokens.produce(stack, lineLength);
          STOP = true;
          return;
        }
      } else if (_rule instanceof BeginWhileRule) {
        const pushedRule = _rule;
        if (false) {
          console.log("  pushing " + pushedRule.debugName);
        }
        handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);
        lineTokens.produce(stack, captureIndices[0].end);
        anchorPosition = captureIndices[0].end;
        const contentName = pushedRule.getContentName(lineText.content, captureIndices);
        const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);
        stack = stack.withContentNameScopesList(contentNameScopesList);
        if (pushedRule.whileHasBackReferences) {
          stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));
        }
        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {
          if (false) {
            console.error("[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing");
          }
          stack = stack.pop();
          lineTokens.produce(stack, lineLength);
          STOP = true;
          return;
        }
      } else {
        const matchingRule = _rule;
        if (false) {
          console.log("  matched " + matchingRule.debugName + " - " + matchingRule.debugMatchRegExp);
        }
        handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);
        lineTokens.produce(stack, captureIndices[0].end);
        stack = stack.pop();
        if (!hasAdvanced) {
          if (false) {
            console.error("[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping");
          }
          stack = stack.safePop();
          lineTokens.produce(stack, lineLength);
          STOP = true;
          return;
        }
      }
    }
    if (captureIndices[0].end > linePos) {
      linePos = captureIndices[0].end;
      isFirstLine = false;
    }
  }
}
function _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {
  let anchorPosition = stack.beginRuleCapturedEOL ? 0 : -1;
  const whileRules = [];
  for (let node = stack; node; node = node.pop()) {
    const nodeRule = node.getRule(grammar);
    if (nodeRule instanceof BeginWhileRule) {
      whileRules.push({
        rule: nodeRule,
        stack: node
      });
    }
  }
  for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {
    const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);
    const r4 = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);
    if (false) {
      console.log("  scanning for while rule");
      console.log(ruleScanner.toString());
    }
    if (r4) {
      const matchedRuleId = r4.ruleId;
      if (matchedRuleId !== whileRuleId) {
        stack = whileRule.stack.pop();
        break;
      }
      if (r4.captureIndices && r4.captureIndices.length) {
        lineTokens.produce(whileRule.stack, r4.captureIndices[0].start);
        handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r4.captureIndices);
        lineTokens.produce(whileRule.stack, r4.captureIndices[0].end);
        anchorPosition = r4.captureIndices[0].end;
        if (r4.captureIndices[0].end > linePos) {
          linePos = r4.captureIndices[0].end;
          isFirstLine = false;
        }
      }
    } else {
      if (false) {
        console.log("  popping " + whileRule.rule.debugName + " - " + whileRule.rule.debugWhileRegExp);
      }
      stack = whileRule.stack.pop();
      break;
    }
  }
  return {
    stack,
    linePos,
    anchorPosition,
    isFirstLine
  };
}
function matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {
  const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);
  const injections = grammar.getInjections();
  if (injections.length === 0) {
    return matchResult;
  }
  const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);
  if (!injectionResult) {
    return matchResult;
  }
  if (!matchResult) {
    return injectionResult;
  }
  const matchResultScore = matchResult.captureIndices[0].start;
  const injectionResultScore = injectionResult.captureIndices[0].start;
  if (injectionResultScore < matchResultScore || injectionResult.priorityMatch && injectionResultScore === matchResultScore) {
    return injectionResult;
  }
  return matchResult;
}
function matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {
  const rule = stack.getRule(grammar);
  const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);
  const r4 = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);
  if (r4) {
    return {
      captureIndices: r4.captureIndices,
      matchedRuleId: r4.ruleId
    };
  }
  return null;
}
function matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {
  let bestMatchRating = Number.MAX_VALUE;
  let bestMatchCaptureIndices = null;
  let bestMatchRuleId;
  let bestMatchResultPriority = 0;
  const scopes = stack.contentNameScopesList.getScopeNames();
  for (let i6 = 0, len = injections.length; i6 < len; i6++) {
    const injection = injections[i6];
    if (!injection.matcher(scopes)) {
      continue;
    }
    const rule = grammar.getRule(injection.ruleId);
    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);
    const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);
    if (!matchResult) {
      continue;
    }
    if (false) {
      console.log(`  matched injection: ${injection.debugSelector}`);
      console.log(ruleScanner.toString());
    }
    const matchRating = matchResult.captureIndices[0].start;
    if (matchRating >= bestMatchRating) {
      continue;
    }
    bestMatchRating = matchRating;
    bestMatchCaptureIndices = matchResult.captureIndices;
    bestMatchRuleId = matchResult.ruleId;
    bestMatchResultPriority = injection.priority;
    if (bestMatchRating === linePos) {
      break;
    }
  }
  if (bestMatchCaptureIndices) {
    return {
      priorityMatch: bestMatchResultPriority === -1,
      captureIndices: bestMatchCaptureIndices,
      matchedRuleId: bestMatchRuleId
    };
  }
  return null;
}
function prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {
  if (UseOnigurumaFindOptions) {
    const ruleScanner2 = rule.compile(grammar, endRegexSource);
    const findOptions = getFindOptions(allowA, allowG);
    return {
      ruleScanner: ruleScanner2,
      findOptions
    };
  }
  const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);
  return {
    ruleScanner,
    findOptions: 0
  };
}
function prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {
  if (UseOnigurumaFindOptions) {
    const ruleScanner2 = rule.compileWhile(grammar, endRegexSource);
    const findOptions = getFindOptions(allowA, allowG);
    return {
      ruleScanner: ruleScanner2,
      findOptions
    };
  }
  const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);
  return {
    ruleScanner,
    findOptions: 0
  };
}
function getFindOptions(allowA, allowG) {
  let options = 0;
  if (!allowA) {
    options |= 1;
  }
  if (!allowG) {
    options |= 4;
  }
  return options;
}
function handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {
  if (captures.length === 0) {
    return;
  }
  const lineTextContent = lineText.content;
  const len = Math.min(captures.length, captureIndices.length);
  const localStack = [];
  const maxEnd = captureIndices[0].end;
  for (let i6 = 0; i6 < len; i6++) {
    const captureRule = captures[i6];
    if (captureRule === null) {
      continue;
    }
    const captureIndex = captureIndices[i6];
    if (captureIndex.length === 0) {
      continue;
    }
    if (captureIndex.start > maxEnd) {
      break;
    }
    while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {
      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);
      localStack.pop();
    }
    if (localStack.length > 0) {
      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);
    } else {
      lineTokens.produce(stack, captureIndex.start);
    }
    if (captureRule.retokenizeCapturedWithRuleId) {
      const scopeName = captureRule.getName(lineTextContent, captureIndices);
      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);
      const contentName = captureRule.getContentName(lineTextContent, captureIndices);
      const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);
      const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);
      const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));
      _tokenizeString(
        grammar,
        onigSubStr,
        isFirstLine && captureIndex.start === 0,
        captureIndex.start,
        stackClone,
        lineTokens,
        false,
        /* no time limit */
        0
      );
      disposeOnigString(onigSubStr);
      continue;
    }
    const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);
    if (captureRuleScopeName !== null) {
      const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;
      const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);
      localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));
    }
  }
  while (localStack.length > 0) {
    lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);
    localStack.pop();
  }
}
var LocalStackElement = class {
  scopes;
  endPos;
  constructor(scopes, endPos) {
    this.scopes = scopes;
    this.endPos = endPos;
  }
};
function createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {
  return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib);
}
function collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {
  const matchers = createMatchers(selector, nameMatcher);
  const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);
  for (const matcher of matchers) {
    result.push({
      debugSelector: selector,
      matcher: matcher.matcher,
      ruleId,
      grammar,
      priority: matcher.priority
    });
  }
}
function nameMatcher(identifers, scopes) {
  if (scopes.length < identifers.length) {
    return false;
  }
  let lastIndex = 0;
  return identifers.every((identifier) => {
    for (let i6 = lastIndex; i6 < scopes.length; i6++) {
      if (scopesAreMatching(scopes[i6], identifier)) {
        lastIndex = i6 + 1;
        return true;
      }
    }
    return false;
  });
}
function scopesAreMatching(thisScopeName, scopeName) {
  if (!thisScopeName) {
    return false;
  }
  if (thisScopeName === scopeName) {
    return true;
  }
  const len = scopeName.length;
  return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === ".";
}
var Grammar = class {
  constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {
    this._rootScopeName = _rootScopeName;
    this.balancedBracketSelectors = balancedBracketSelectors;
    this._onigLib = _onigLib;
    this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);
    this._rootId = -1;
    this._lastRuleId = 0;
    this._ruleId2desc = [
      null
    ];
    this._includedGrammars = {};
    this._grammarRepository = grammarRepository;
    this._grammar = initGrammar(grammar, null);
    this._injections = null;
    this._tokenTypeMatchers = [];
    if (tokenTypes) {
      for (const selector of Object.keys(tokenTypes)) {
        const matchers = createMatchers(selector, nameMatcher);
        for (const matcher of matchers) {
          this._tokenTypeMatchers.push({
            matcher: matcher.matcher,
            type: tokenTypes[selector]
          });
        }
      }
    }
  }
  _rootId;
  _lastRuleId;
  _ruleId2desc;
  _includedGrammars;
  _grammarRepository;
  _grammar;
  _injections;
  _basicScopeAttributesProvider;
  _tokenTypeMatchers;
  get themeProvider() {
    return this._grammarRepository;
  }
  dispose() {
    for (const rule of this._ruleId2desc) {
      if (rule) {
        rule.dispose();
      }
    }
  }
  createOnigScanner(sources) {
    return this._onigLib.createOnigScanner(sources);
  }
  createOnigString(sources) {
    return this._onigLib.createOnigString(sources);
  }
  getMetadataForScope(scope) {
    return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);
  }
  _collectInjections() {
    const grammarRepository = {
      lookup: (scopeName2) => {
        if (scopeName2 === this._rootScopeName) {
          return this._grammar;
        }
        return this.getExternalGrammar(scopeName2);
      },
      injections: (scopeName2) => {
        return this._grammarRepository.injections(scopeName2);
      }
    };
    const result = [];
    const scopeName = this._rootScopeName;
    const grammar = grammarRepository.lookup(scopeName);
    if (grammar) {
      const rawInjections = grammar.injections;
      if (rawInjections) {
        for (let expression in rawInjections) {
          collectInjections(result, expression, rawInjections[expression], this, grammar);
        }
      }
      const injectionScopeNames = this._grammarRepository.injections(scopeName);
      if (injectionScopeNames) {
        injectionScopeNames.forEach((injectionScopeName) => {
          const injectionGrammar = this.getExternalGrammar(injectionScopeName);
          if (injectionGrammar) {
            const selector = injectionGrammar.injectionSelector;
            if (selector) {
              collectInjections(result, selector, injectionGrammar, this, injectionGrammar);
            }
          }
        });
      }
    }
    result.sort((i1, i22) => i1.priority - i22.priority);
    return result;
  }
  getInjections() {
    if (this._injections === null) {
      this._injections = this._collectInjections();
    }
    return this._injections;
  }
  registerRule(factory) {
    const id = ++this._lastRuleId;
    const result = factory(ruleIdFromNumber(id));
    this._ruleId2desc[id] = result;
    return result;
  }
  getRule(ruleId) {
    return this._ruleId2desc[ruleIdToNumber(ruleId)];
  }
  getExternalGrammar(scopeName, repository) {
    if (this._includedGrammars[scopeName]) {
      return this._includedGrammars[scopeName];
    } else if (this._grammarRepository) {
      const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);
      if (rawIncludedGrammar) {
        this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);
        return this._includedGrammars[scopeName];
      }
    }
    return void 0;
  }
  tokenizeLine(lineText, prevState, timeLimit = 0) {
    const r4 = this._tokenize(lineText, prevState, false, timeLimit);
    return {
      tokens: r4.lineTokens.getResult(r4.ruleStack, r4.lineLength),
      ruleStack: r4.ruleStack,
      stoppedEarly: r4.stoppedEarly
    };
  }
  tokenizeLine2(lineText, prevState, timeLimit = 0) {
    const r4 = this._tokenize(lineText, prevState, true, timeLimit);
    return {
      tokens: r4.lineTokens.getBinaryResult(r4.ruleStack, r4.lineLength),
      ruleStack: r4.ruleStack,
      stoppedEarly: r4.stoppedEarly
    };
  }
  _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {
    if (this._rootId === -1) {
      this._rootId = RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);
      this.getInjections();
    }
    let isFirstLine;
    if (!prevState || prevState === StateStackImpl.NULL) {
      isFirstLine = true;
      const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();
      const defaultStyle = this.themeProvider.getDefaults();
      const defaultMetadata = EncodedTokenMetadata.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);
      const rootScopeName = this.getRule(this._rootId).getName(null, null);
      let scopeList;
      if (rootScopeName) {
        scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);
      } else {
        scopeList = AttributedScopeStack.createRoot("unknown", defaultMetadata);
      }
      prevState = new StateStackImpl(null, this._rootId, -1, -1, false, null, scopeList, scopeList);
    } else {
      isFirstLine = false;
      prevState.reset();
    }
    lineText = lineText + "\n";
    const onigLineText = this.createOnigString(lineText);
    const lineLength = onigLineText.content.length;
    const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);
    const r4 = _tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);
    disposeOnigString(onigLineText);
    return {
      lineLength,
      lineTokens,
      ruleStack: r4.stack,
      stoppedEarly: r4.stoppedEarly
    };
  }
};
function initGrammar(grammar, base) {
  grammar = clone(grammar);
  grammar.repository = grammar.repository || {};
  grammar.repository.$self = {
    $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,
    patterns: grammar.patterns,
    name: grammar.scopeName
  };
  grammar.repository.$base = base || grammar.repository.$self;
  return grammar;
}
var AttributedScopeStack = class _AttributedScopeStack {
  /**
   * Invariant:
   * ```
   * if (parent && !scopePath.extends(parent.scopePath)) {
   * 	throw new Error();
   * }
   * ```
   */
  constructor(parent, scopePath, tokenAttributes) {
    this.parent = parent;
    this.scopePath = scopePath;
    this.tokenAttributes = tokenAttributes;
  }
  static fromExtension(namesScopeList, contentNameScopesList) {
    let current = namesScopeList;
    let scopeNames = namesScopeList?.scopePath ?? null;
    for (const frame of contentNameScopesList) {
      scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);
      current = new _AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);
    }
    return current;
  }
  static createRoot(scopeName, tokenAttributes) {
    return new _AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);
  }
  static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {
    const rawRootMetadata = grammar.getMetadataForScope(scopeName);
    const scopePath = new ScopeStack(null, scopeName);
    const rootStyle = grammar.themeProvider.themeMatch(scopePath);
    const resolvedTokenAttributes = _AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);
    return new _AttributedScopeStack(null, scopePath, resolvedTokenAttributes);
  }
  get scopeName() {
    return this.scopePath.scopeName;
  }
  toString() {
    return this.getScopeNames().join(" ");
  }
  equals(other) {
    return _AttributedScopeStack.equals(this, other);
  }
  static equals(a5, b4) {
    do {
      if (a5 === b4) {
        return true;
      }
      if (!a5 && !b4) {
        return true;
      }
      if (!a5 || !b4) {
        return false;
      }
      if (a5.scopeName !== b4.scopeName || a5.tokenAttributes !== b4.tokenAttributes) {
        return false;
      }
      a5 = a5.parent;
      b4 = b4.parent;
    } while (true);
  }
  static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {
    let fontStyle = -1;
    let foreground = 0;
    let background = 0;
    if (styleAttributes !== null) {
      fontStyle = styleAttributes.fontStyle;
      foreground = styleAttributes.foregroundId;
      background = styleAttributes.backgroundId;
    }
    return EncodedTokenMetadata.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);
  }
  pushAttributed(scopePath, grammar) {
    if (scopePath === null) {
      return this;
    }
    if (scopePath.indexOf(" ") === -1) {
      return _AttributedScopeStack._pushAttributed(this, scopePath, grammar);
    }
    const scopes = scopePath.split(/ /g);
    let result = this;
    for (const scope of scopes) {
      result = _AttributedScopeStack._pushAttributed(result, scope, grammar);
    }
    return result;
  }
  static _pushAttributed(target, scopeName, grammar) {
    const rawMetadata = grammar.getMetadataForScope(scopeName);
    const newPath = target.scopePath.push(scopeName);
    const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);
    const metadata = _AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);
    return new _AttributedScopeStack(target, newPath, metadata);
  }
  getScopeNames() {
    return this.scopePath.getSegments();
  }
  getExtensionIfDefined(base) {
    const result = [];
    let self = this;
    while (self && self !== base) {
      result.push({
        encodedTokenAttributes: self.tokenAttributes,
        scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null)
      });
      self = self.parent;
    }
    return self === base ? result.reverse() : void 0;
  }
};
var StateStackImpl = class _StateStackImpl {
  /**
   * Invariant:
   * ```
   * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {
   * 	throw new Error();
   * }
   * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {
   * 	throw new Error();
   * }
   * ```
   */
  constructor(parent, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {
    this.parent = parent;
    this.ruleId = ruleId;
    this.beginRuleCapturedEOL = beginRuleCapturedEOL;
    this.endRule = endRule;
    this.nameScopesList = nameScopesList;
    this.contentNameScopesList = contentNameScopesList;
    this.depth = this.parent ? this.parent.depth + 1 : 1;
    this._enterPos = enterPos;
    this._anchorPos = anchorPos;
  }
  _stackElementBrand = void 0;
  // TODO remove me
  static NULL = new _StateStackImpl(null, 0, 0, 0, false, null, null, null);
  /**
   * The position on the current line where this state was pushed.
   * This is relevant only while tokenizing a line, to detect endless loops.
   * Its value is meaningless across lines.
   */
  _enterPos;
  /**
   * The captured anchor position when this stack element was pushed.
   * This is relevant only while tokenizing a line, to restore the anchor position when popping.
   * Its value is meaningless across lines.
   */
  _anchorPos;
  /**
   * The depth of the stack.
   */
  depth;
  equals(other) {
    if (other === null) {
      return false;
    }
    return _StateStackImpl._equals(this, other);
  }
  static _equals(a5, b4) {
    if (a5 === b4) {
      return true;
    }
    if (!this._structuralEquals(a5, b4)) {
      return false;
    }
    return AttributedScopeStack.equals(a5.contentNameScopesList, b4.contentNameScopesList);
  }
  /**
   * A structural equals check. Does not take into account `scopes`.
   */
  static _structuralEquals(a5, b4) {
    do {
      if (a5 === b4) {
        return true;
      }
      if (!a5 && !b4) {
        return true;
      }
      if (!a5 || !b4) {
        return false;
      }
      if (a5.depth !== b4.depth || a5.ruleId !== b4.ruleId || a5.endRule !== b4.endRule) {
        return false;
      }
      a5 = a5.parent;
      b4 = b4.parent;
    } while (true);
  }
  clone() {
    return this;
  }
  static _reset(el) {
    while (el) {
      el._enterPos = -1;
      el._anchorPos = -1;
      el = el.parent;
    }
  }
  reset() {
    _StateStackImpl._reset(this);
  }
  pop() {
    return this.parent;
  }
  safePop() {
    if (this.parent) {
      return this.parent;
    }
    return this;
  }
  push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {
    return new _StateStackImpl(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);
  }
  getEnterPos() {
    return this._enterPos;
  }
  getAnchorPos() {
    return this._anchorPos;
  }
  getRule(grammar) {
    return grammar.getRule(this.ruleId);
  }
  toString() {
    const r4 = [];
    this._writeString(r4, 0);
    return "[" + r4.join(",") + "]";
  }
  _writeString(res, outIndex) {
    if (this.parent) {
      outIndex = this.parent._writeString(res, outIndex);
    }
    res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;
    return outIndex;
  }
  withContentNameScopesList(contentNameScopeStack) {
    if (this.contentNameScopesList === contentNameScopeStack) {
      return this;
    }
    return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);
  }
  withEndRule(endRule) {
    if (this.endRule === endRule) {
      return this;
    }
    return new _StateStackImpl(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);
  }
  // Used to warn of endless loops
  hasSameRuleAs(other) {
    let el = this;
    while (el && el._enterPos === other._enterPos) {
      if (el.ruleId === other.ruleId) {
        return true;
      }
      el = el.parent;
    }
    return false;
  }
  toStateStackFrame() {
    return {
      ruleId: ruleIdToNumber(this.ruleId),
      beginRuleCapturedEOL: this.beginRuleCapturedEOL,
      endRule: this.endRule,
      nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],
      contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? []
    };
  }
  static pushFrame(self, frame) {
    const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);
    return new _StateStackImpl(self, ruleIdFromNumber(frame.ruleId), frame.enterPos ?? -1, frame.anchorPos ?? -1, frame.beginRuleCapturedEOL, frame.endRule, namesScopeList, AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList));
  }
};
var BalancedBracketSelectors = class {
  balancedBracketScopes;
  unbalancedBracketScopes;
  allowAny = false;
  constructor(balancedBracketScopes, unbalancedBracketScopes) {
    this.balancedBracketScopes = balancedBracketScopes.flatMap((selector) => {
      if (selector === "*") {
        this.allowAny = true;
        return [];
      }
      return createMatchers(selector, nameMatcher).map((m4) => m4.matcher);
    });
    this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap((selector) => createMatchers(selector, nameMatcher).map((m4) => m4.matcher));
  }
  get matchesAlways() {
    return this.allowAny && this.unbalancedBracketScopes.length === 0;
  }
  get matchesNever() {
    return this.balancedBracketScopes.length === 0 && !this.allowAny;
  }
  match(scopes) {
    for (const excluder of this.unbalancedBracketScopes) {
      if (excluder(scopes)) {
        return false;
      }
    }
    for (const includer of this.balancedBracketScopes) {
      if (includer(scopes)) {
        return true;
      }
    }
    return this.allowAny;
  }
};
var LineTokens = class {
  constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {
    this.balancedBracketSelectors = balancedBracketSelectors;
    this._emitBinaryTokens = emitBinaryTokens;
    this._tokenTypeOverrides = tokenTypeOverrides;
    if (false) {
      this._lineText = lineText;
    } else {
      this._lineText = null;
    }
    this._tokens = [];
    this._binaryTokens = [];
    this._lastTokenEndIndex = 0;
  }
  _emitBinaryTokens;
  /**
   * defined only if `false`.
   */
  _lineText;
  /**
   * used only if `_emitBinaryTokens` is false.
   */
  _tokens;
  /**
   * used only if `_emitBinaryTokens` is true.
   */
  _binaryTokens;
  _lastTokenEndIndex;
  _tokenTypeOverrides;
  produce(stack, endIndex) {
    this.produceFromScopes(stack.contentNameScopesList, endIndex);
  }
  produceFromScopes(scopesList, endIndex) {
    if (this._lastTokenEndIndex >= endIndex) {
      return;
    }
    if (this._emitBinaryTokens) {
      let metadata = scopesList?.tokenAttributes ?? 0;
      let containsBalancedBrackets = false;
      if (this.balancedBracketSelectors?.matchesAlways) {
        containsBalancedBrackets = true;
      }
      if (this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {
        const scopes2 = scopesList?.getScopeNames() ?? [];
        for (const tokenType of this._tokenTypeOverrides) {
          if (tokenType.matcher(scopes2)) {
            metadata = EncodedTokenMetadata.set(metadata, 0, toOptionalTokenType(tokenType.type), null, -1, 0, 0);
          }
        }
        if (this.balancedBracketSelectors) {
          containsBalancedBrackets = this.balancedBracketSelectors.match(scopes2);
        }
      }
      if (containsBalancedBrackets) {
        metadata = EncodedTokenMetadata.set(metadata, 0, 8, containsBalancedBrackets, -1, 0, 0);
      }
      if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {
        this._lastTokenEndIndex = endIndex;
        return;
      }
      this._binaryTokens.push(this._lastTokenEndIndex);
      this._binaryTokens.push(metadata);
      this._lastTokenEndIndex = endIndex;
      return;
    }
    const scopes = scopesList?.getScopeNames() ?? [];
    this._tokens.push({
      startIndex: this._lastTokenEndIndex,
      endIndex,
      // value: lineText.substring(lastTokenEndIndex, endIndex),
      scopes
    });
    this._lastTokenEndIndex = endIndex;
  }
  getResult(stack, lineLength) {
    if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {
      this._tokens.pop();
    }
    if (this._tokens.length === 0) {
      this._lastTokenEndIndex = -1;
      this.produce(stack, lineLength);
      this._tokens[this._tokens.length - 1].startIndex = 0;
    }
    return this._tokens;
  }
  getBinaryResult(stack, lineLength) {
    if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {
      this._binaryTokens.pop();
      this._binaryTokens.pop();
    }
    if (this._binaryTokens.length === 0) {
      this._lastTokenEndIndex = -1;
      this.produce(stack, lineLength);
      this._binaryTokens[this._binaryTokens.length - 2] = 0;
    }
    const result = new Uint32Array(this._binaryTokens.length);
    for (let i6 = 0, len = this._binaryTokens.length; i6 < len; i6++) {
      result[i6] = this._binaryTokens[i6];
    }
    return result;
  }
};
var SyncRegistry = class {
  constructor(theme, _onigLib) {
    this._onigLib = _onigLib;
    this._theme = theme;
  }
  _grammars = /* @__PURE__ */ new Map();
  _rawGrammars = /* @__PURE__ */ new Map();
  _injectionGrammars = /* @__PURE__ */ new Map();
  _theme;
  dispose() {
    for (const grammar of this._grammars.values()) {
      grammar.dispose();
    }
  }
  setTheme(theme) {
    this._theme = theme;
  }
  getColorMap() {
    return this._theme.getColorMap();
  }
  /**
   * Add `grammar` to registry and return a list of referenced scope names
   */
  addGrammar(grammar, injectionScopeNames) {
    this._rawGrammars.set(grammar.scopeName, grammar);
    if (injectionScopeNames) {
      this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);
    }
  }
  /**
   * Lookup a raw grammar.
   */
  lookup(scopeName) {
    return this._rawGrammars.get(scopeName);
  }
  /**
   * Returns the injections for the given grammar
   */
  injections(targetScope) {
    return this._injectionGrammars.get(targetScope);
  }
  /**
   * Get the default theme settings
   */
  getDefaults() {
    return this._theme.getDefaults();
  }
  /**
   * Match a scope in the theme.
   */
  themeMatch(scopePath) {
    return this._theme.match(scopePath);
  }
  /**
   * Lookup a grammar.
   */
  grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {
    if (!this._grammars.has(scopeName)) {
      let rawGrammar = this._rawGrammars.get(scopeName);
      if (!rawGrammar) {
        return null;
      }
      this._grammars.set(scopeName, createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, this._onigLib));
    }
    return this._grammars.get(scopeName);
  }
};
var Registry = class {
  _options;
  _syncRegistry;
  _ensureGrammarCache;
  constructor(options) {
    this._options = options;
    this._syncRegistry = new SyncRegistry(Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);
    this._ensureGrammarCache = /* @__PURE__ */ new Map();
  }
  dispose() {
    this._syncRegistry.dispose();
  }
  /**
   * Change the theme. Once called, no previous `ruleStack` should be used anymore.
   */
  setTheme(theme, colorMap2) {
    this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap2));
  }
  /**
   * Returns a lookup array for color ids.
   */
  getColorMap() {
    return this._syncRegistry.getColorMap();
  }
  /**
   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.
   * Please do not use language id 0.
   */
  loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {
    return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, {
      embeddedLanguages
    });
  }
  /**
   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.
   * Please do not use language id 0.
   */
  loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {
    return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));
  }
  /**
   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.
   */
  loadGrammar(initialScopeName) {
    return this._loadGrammar(initialScopeName, 0, null, null, null);
  }
  _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {
    const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);
    while (dependencyProcessor.Q.length > 0) {
      dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName));
      dependencyProcessor.processQueue();
    }
    return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);
  }
  _loadSingleGrammar(scopeName) {
    if (!this._ensureGrammarCache.has(scopeName)) {
      this._doLoadSingleGrammar(scopeName);
      this._ensureGrammarCache.set(scopeName, true);
    }
  }
  _doLoadSingleGrammar(scopeName) {
    const grammar = this._options.loadGrammar(scopeName);
    if (grammar) {
      const injections = typeof this._options.getInjections === "function" ? this._options.getInjections(scopeName) : void 0;
      this._syncRegistry.addGrammar(grammar, injections);
    }
  }
  /**
   * Adds a rawGrammar.
   */
  addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {
    this._syncRegistry.addGrammar(rawGrammar, injections);
    return this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages);
  }
  /**
   * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.
   */
  _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {
    return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);
  }
};
var INITIAL = StateStackImpl.NULL;
var htmlVoidElements = [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "image",
  "img",
  "input",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
];
var Schema = class {
  /**
   * @param {SchemaType['property']} property
   *   Property.
   * @param {SchemaType['normal']} normal
   *   Normal.
   * @param {Space | undefined} [space]
   *   Space.
   * @returns
   *   Schema.
   */
  constructor(property, normal, space) {
    this.normal = normal;
    this.property = property;
    if (space) {
      this.space = space;
    }
  }
};
Schema.prototype.normal = {};
Schema.prototype.property = {};
Schema.prototype.space = void 0;
function merge(definitions, space) {
  const property = {};
  const normal = {};
  for (const definition of definitions) {
    Object.assign(property, definition.property);
    Object.assign(normal, definition.normal);
  }
  return new Schema(property, normal, space);
}
function normalize(value) {
  return value.toLowerCase();
}
var Info = class {
  /**
   * @param {string} property
   *   Property.
   * @param {string} attribute
   *   Attribute.
   * @returns
   *   Info.
   */
  constructor(property, attribute) {
    this.attribute = attribute;
    this.property = property;
  }
};
Info.prototype.attribute = "";
Info.prototype.booleanish = false;
Info.prototype.boolean = false;
Info.prototype.commaOrSpaceSeparated = false;
Info.prototype.commaSeparated = false;
Info.prototype.defined = false;
Info.prototype.mustUseProperty = false;
Info.prototype.number = false;
Info.prototype.overloadedBoolean = false;
Info.prototype.property = "";
Info.prototype.spaceSeparated = false;
Info.prototype.space = void 0;
var types_exports = {};
__export(types_exports, {
  boolean: () => boolean,
  booleanish: () => booleanish,
  commaOrSpaceSeparated: () => commaOrSpaceSeparated,
  commaSeparated: () => commaSeparated,
  number: () => number,
  overloadedBoolean: () => overloadedBoolean,
  spaceSeparated: () => spaceSeparated
});
var powers = 0;
var boolean = increment();
var booleanish = increment();
var overloadedBoolean = increment();
var number = increment();
var spaceSeparated = increment();
var commaSeparated = increment();
var commaOrSpaceSeparated = increment();
function increment() {
  return 2 ** ++powers;
}
var checks = (
  /** @type {ReadonlyArray<keyof typeof types>} */
  Object.keys(types_exports)
);
var DefinedInfo = class extends Info {
  /**
   * @constructor
   * @param {string} property
   *   Property.
   * @param {string} attribute
   *   Attribute.
   * @param {number | null | undefined} [mask]
   *   Mask.
   * @param {Space | undefined} [space]
   *   Space.
   * @returns
   *   Info.
   */
  constructor(property, attribute, mask, space) {
    let index = -1;
    super(property, attribute);
    mark(this, "space", space);
    if (typeof mask === "number") {
      while (++index < checks.length) {
        const check = checks[index];
        mark(this, checks[index], (mask & types_exports[check]) === types_exports[check]);
      }
    }
  }
};
DefinedInfo.prototype.defined = true;
function mark(values, key2, value) {
  if (value) {
    values[key2] = value;
  }
}
function create(definition) {
  const properties = {};
  const normals = {};
  for (const [property, value] of Object.entries(definition.properties)) {
    const info = new DefinedInfo(property, definition.transform(definition.attributes || {}, property), value, definition.space);
    if (definition.mustUseProperty && definition.mustUseProperty.includes(property)) {
      info.mustUseProperty = true;
    }
    properties[property] = info;
    normals[normalize(property)] = property;
    normals[normalize(info.attribute)] = property;
  }
  return new Schema(properties, normals, definition.space);
}
var aria = create({
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: booleanish,
    ariaAutoComplete: null,
    ariaBusy: booleanish,
    ariaChecked: booleanish,
    ariaColCount: number,
    ariaColIndex: number,
    ariaColSpan: number,
    ariaControls: spaceSeparated,
    ariaCurrent: null,
    ariaDescribedBy: spaceSeparated,
    ariaDetails: null,
    ariaDisabled: booleanish,
    ariaDropEffect: spaceSeparated,
    ariaErrorMessage: null,
    ariaExpanded: booleanish,
    ariaFlowTo: spaceSeparated,
    ariaGrabbed: booleanish,
    ariaHasPopup: null,
    ariaHidden: booleanish,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: spaceSeparated,
    ariaLevel: number,
    ariaLive: null,
    ariaModal: booleanish,
    ariaMultiLine: booleanish,
    ariaMultiSelectable: booleanish,
    ariaOrientation: null,
    ariaOwns: spaceSeparated,
    ariaPlaceholder: null,
    ariaPosInSet: number,
    ariaPressed: booleanish,
    ariaReadOnly: booleanish,
    ariaRelevant: null,
    ariaRequired: booleanish,
    ariaRoleDescription: spaceSeparated,
    ariaRowCount: number,
    ariaRowIndex: number,
    ariaRowSpan: number,
    ariaSelected: booleanish,
    ariaSetSize: number,
    ariaSort: null,
    ariaValueMax: number,
    ariaValueMin: number,
    ariaValueNow: number,
    ariaValueText: null,
    role: null
  },
  transform(_5, property) {
    return property === "role" ? property : "aria-" + property.slice(4).toLowerCase();
  }
});
function caseSensitiveTransform(attributes, attribute) {
  return attribute in attributes ? attributes[attribute] : attribute;
}
function caseInsensitiveTransform(attributes, property) {
  return caseSensitiveTransform(attributes, property.toLowerCase());
}
var html = create({
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  mustUseProperty: [
    "checked",
    "multiple",
    "muted",
    "selected"
  ],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: commaSeparated,
    acceptCharset: spaceSeparated,
    accessKey: spaceSeparated,
    action: null,
    allow: null,
    allowFullScreen: boolean,
    allowPaymentRequest: boolean,
    allowUserMedia: boolean,
    alt: null,
    as: null,
    async: boolean,
    autoCapitalize: null,
    autoComplete: spaceSeparated,
    autoFocus: boolean,
    autoPlay: boolean,
    blocking: spaceSeparated,
    capture: null,
    charSet: null,
    checked: boolean,
    cite: null,
    className: spaceSeparated,
    cols: number,
    colSpan: null,
    content: null,
    contentEditable: booleanish,
    controls: boolean,
    controlsList: spaceSeparated,
    coords: number | commaSeparated,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: boolean,
    defer: boolean,
    dir: null,
    dirName: null,
    disabled: boolean,
    download: overloadedBoolean,
    draggable: booleanish,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: boolean,
    formTarget: null,
    headers: spaceSeparated,
    height: number,
    hidden: boolean,
    high: number,
    href: null,
    hrefLang: null,
    htmlFor: spaceSeparated,
    httpEquiv: spaceSeparated,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: boolean,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: boolean,
    itemId: null,
    itemProp: spaceSeparated,
    itemRef: spaceSeparated,
    itemScope: boolean,
    itemType: spaceSeparated,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: boolean,
    low: number,
    manifest: null,
    max: null,
    maxLength: number,
    media: null,
    method: null,
    min: null,
    minLength: number,
    multiple: boolean,
    muted: boolean,
    name: null,
    nonce: null,
    noModule: boolean,
    noValidate: boolean,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: boolean,
    optimum: number,
    pattern: null,
    ping: spaceSeparated,
    placeholder: null,
    playsInline: boolean,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: boolean,
    referrerPolicy: null,
    rel: spaceSeparated,
    required: boolean,
    reversed: boolean,
    rows: number,
    rowSpan: number,
    sandbox: spaceSeparated,
    scope: null,
    scoped: boolean,
    seamless: boolean,
    selected: boolean,
    shadowRootClonable: boolean,
    shadowRootDelegatesFocus: boolean,
    shadowRootMode: null,
    shape: null,
    size: number,
    sizes: null,
    slot: null,
    span: number,
    spellCheck: booleanish,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: number,
    step: null,
    style: null,
    tabIndex: number,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: boolean,
    useMap: null,
    value: booleanish,
    width: number,
    wrap: null,
    writingSuggestions: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: spaceSeparated,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: number,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: number,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: boolean,
    // Lists. Use CSS to reduce space between items instead
    declare: boolean,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: number,
    // `<img>` and `<object>`
    leftMargin: number,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: number,
    // `<body>`
    marginWidth: number,
    // `<body>`
    noResize: boolean,
    // `<frame>`
    noHref: boolean,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: boolean,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: boolean,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: number,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: booleanish,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: number,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: number,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: boolean,
    disableRemotePlayback: boolean,
    prefix: null,
    property: null,
    results: number,
    security: null,
    unselectable: null
  },
  space: "html",
  transform: caseInsensitiveTransform
});
var svg = create({
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  properties: {
    about: commaOrSpaceSeparated,
    accentHeight: number,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: number,
    amplitude: number,
    arabicForm: null,
    ascent: number,
    attributeName: null,
    attributeType: null,
    azimuth: number,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: number,
    by: null,
    calcMode: null,
    capHeight: number,
    className: spaceSeparated,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: number,
    diffuseConstant: number,
    direction: null,
    display: null,
    dur: null,
    divisor: number,
    dominantBaseline: null,
    download: boolean,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: number,
    enableBackground: null,
    end: null,
    event: null,
    exponent: number,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: number,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: commaSeparated,
    g2: commaSeparated,
    glyphName: commaSeparated,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: number,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: number,
    horizOriginX: number,
    horizOriginY: number,
    id: null,
    ideographic: number,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: number,
    k: number,
    k1: number,
    k2: number,
    k3: number,
    k4: number,
    kernelMatrix: commaOrSpaceSeparated,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: number,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: number,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: number,
    overlineThickness: number,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: number,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: spaceSeparated,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: number,
    pointsAtY: number,
    pointsAtZ: number,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: commaOrSpaceSeparated,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: commaOrSpaceSeparated,
    rev: commaOrSpaceSeparated,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: commaOrSpaceSeparated,
    requiredFeatures: commaOrSpaceSeparated,
    requiredFonts: commaOrSpaceSeparated,
    requiredFormats: commaOrSpaceSeparated,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: number,
    specularExponent: number,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: number,
    strikethroughThickness: number,
    string: null,
    stroke: null,
    strokeDashArray: commaOrSpaceSeparated,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: number,
    strokeOpacity: number,
    strokeWidth: null,
    style: null,
    surfaceScale: number,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: commaOrSpaceSeparated,
    tabIndex: number,
    tableValues: null,
    target: null,
    targetX: number,
    targetY: number,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: commaOrSpaceSeparated,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: number,
    underlineThickness: number,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: number,
    values: null,
    vAlphabetic: number,
    vMathematical: number,
    vectorEffect: null,
    vHanging: number,
    vIdeographic: number,
    version: null,
    vertAdvY: number,
    vertOriginX: number,
    vertOriginY: number,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: number,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  },
  space: "svg",
  transform: caseSensitiveTransform
});
var xlink = create({
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  },
  space: "xlink",
  transform(_5, property) {
    return "xlink:" + property.slice(5).toLowerCase();
  }
});
var xmlns = create({
  attributes: {
    xmlnsxlink: "xmlns:xlink"
  },
  properties: {
    xmlnsXLink: null,
    xmlns: null
  },
  space: "xmlns",
  transform: caseInsensitiveTransform
});
var xml = create({
  properties: {
    xmlBase: null,
    xmlLang: null,
    xmlSpace: null
  },
  space: "xml",
  transform(_5, property) {
    return "xml:" + property.slice(3).toLowerCase();
  }
});
var cap = /[A-Z]/g;
var dash = /-[a-z]/g;
var valid = /^data[-\w.:]+$/i;
function find(schema, value) {
  const normal = normalize(value);
  let property = value;
  let Type = Info;
  if (normal in schema.normal) {
    return schema.property[schema.normal[normal]];
  }
  if (normal.length > 4 && normal.slice(0, 4) === "data" && valid.test(value)) {
    if (value.charAt(4) === "-") {
      const rest = value.slice(5).replace(dash, camelcase);
      property = "data" + rest.charAt(0).toUpperCase() + rest.slice(1);
    } else {
      const rest = value.slice(4);
      if (!dash.test(rest)) {
        let dashes = rest.replace(cap, kebab);
        if (dashes.charAt(0) !== "-") {
          dashes = "-" + dashes;
        }
        value = "data" + dashes;
      }
    }
    Type = DefinedInfo;
  }
  return new Type(property, value);
}
function kebab($0) {
  return "-" + $0.toLowerCase();
}
function camelcase($0) {
  return $0.charAt(1).toUpperCase();
}
var html2 = merge([
  aria,
  html,
  xlink,
  xmlns,
  xml
], "html");
var svg2 = merge([
  aria,
  svg,
  xlink,
  xmlns,
  xml
], "svg");
var own = {}.hasOwnProperty;
function zwitch(key2, options) {
  const settings = options || {};
  function one2(value, ...parameters) {
    let fn2 = one2.invalid;
    const handlers = one2.handlers;
    if (value && own.call(value, key2)) {
      const id = String(value[key2]);
      fn2 = own.call(handlers, id) ? handlers[id] : one2.unknown;
    }
    if (fn2) {
      return fn2.call(this, value, ...parameters);
    }
  }
  one2.handlers = settings.handlers || {};
  one2.invalid = settings.invalid;
  one2.unknown = settings.unknown;
  return one2;
}
var defaultSubsetRegex = /["&'<>`]/g;
var surrogatePairsRegex = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
var controlCharactersRegex = (
  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
  /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g
);
var regexEscapeRegex = /[|\\{}()[\]^$+*?.]/g;
var subsetToRegexCache = /* @__PURE__ */ new WeakMap();
function core(value, options) {
  value = value.replace(options.subset ? charactersToExpressionCached(options.subset) : defaultSubsetRegex, basic);
  if (options.subset || options.escapeOnly) {
    return value;
  }
  return value.replace(surrogatePairsRegex, surrogate).replace(controlCharactersRegex, basic);
  function surrogate(pair, index, all2) {
    return options.format((pair.charCodeAt(0) - 55296) * 1024 + pair.charCodeAt(1) - 56320 + 65536, all2.charCodeAt(index + 2), options);
  }
  function basic(character, index, all2) {
    return options.format(character.charCodeAt(0), all2.charCodeAt(index + 1), options);
  }
}
function charactersToExpressionCached(subset) {
  let cached = subsetToRegexCache.get(subset);
  if (!cached) {
    cached = charactersToExpression(subset);
    subsetToRegexCache.set(subset, cached);
  }
  return cached;
}
function charactersToExpression(subset) {
  const groups = [];
  let index = -1;
  while (++index < subset.length) {
    groups.push(subset[index].replace(regexEscapeRegex, "\\$&"));
  }
  return new RegExp("(?:" + groups.join("|") + ")", "g");
}
var hexadecimalRegex = /[\dA-Fa-f]/;
function toHexadecimal(code, next, omit) {
  const value = "&#x" + code.toString(16).toUpperCase();
  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next)) ? value : value + ";";
}
var decimalRegex = /\d/;
function toDecimal(code, next, omit) {
  const value = "&#" + String(code);
  return omit && next && !decimalRegex.test(String.fromCharCode(next)) ? value : value + ";";
}
var characterEntitiesLegacy = [
  "AElig",
  "AMP",
  "Aacute",
  "Acirc",
  "Agrave",
  "Aring",
  "Atilde",
  "Auml",
  "COPY",
  "Ccedil",
  "ETH",
  "Eacute",
  "Ecirc",
  "Egrave",
  "Euml",
  "GT",
  "Iacute",
  "Icirc",
  "Igrave",
  "Iuml",
  "LT",
  "Ntilde",
  "Oacute",
  "Ocirc",
  "Ograve",
  "Oslash",
  "Otilde",
  "Ouml",
  "QUOT",
  "REG",
  "THORN",
  "Uacute",
  "Ucirc",
  "Ugrave",
  "Uuml",
  "Yacute",
  "aacute",
  "acirc",
  "acute",
  "aelig",
  "agrave",
  "amp",
  "aring",
  "atilde",
  "auml",
  "brvbar",
  "ccedil",
  "cedil",
  "cent",
  "copy",
  "curren",
  "deg",
  "divide",
  "eacute",
  "ecirc",
  "egrave",
  "eth",
  "euml",
  "frac12",
  "frac14",
  "frac34",
  "gt",
  "iacute",
  "icirc",
  "iexcl",
  "igrave",
  "iquest",
  "iuml",
  "laquo",
  "lt",
  "macr",
  "micro",
  "middot",
  "nbsp",
  "not",
  "ntilde",
  "oacute",
  "ocirc",
  "ograve",
  "ordf",
  "ordm",
  "oslash",
  "otilde",
  "ouml",
  "para",
  "plusmn",
  "pound",
  "quot",
  "raquo",
  "reg",
  "sect",
  "shy",
  "sup1",
  "sup2",
  "sup3",
  "szlig",
  "thorn",
  "times",
  "uacute",
  "ucirc",
  "ugrave",
  "uml",
  "uuml",
  "yacute",
  "yen",
  "yuml"
];
var characterEntitiesHtml4 = {
  nbsp: "\xA0",
  iexcl: "\xA1",
  cent: "\xA2",
  pound: "\xA3",
  curren: "\xA4",
  yen: "\xA5",
  brvbar: "\xA6",
  sect: "\xA7",
  uml: "\xA8",
  copy: "\xA9",
  ordf: "\xAA",
  laquo: "\xAB",
  not: "\xAC",
  shy: "\xAD",
  reg: "\xAE",
  macr: "\xAF",
  deg: "\xB0",
  plusmn: "\xB1",
  sup2: "\xB2",
  sup3: "\xB3",
  acute: "\xB4",
  micro: "\xB5",
  para: "\xB6",
  middot: "\xB7",
  cedil: "\xB8",
  sup1: "\xB9",
  ordm: "\xBA",
  raquo: "\xBB",
  frac14: "\xBC",
  frac12: "\xBD",
  frac34: "\xBE",
  iquest: "\xBF",
  Agrave: "\xC0",
  Aacute: "\xC1",
  Acirc: "\xC2",
  Atilde: "\xC3",
  Auml: "\xC4",
  Aring: "\xC5",
  AElig: "\xC6",
  Ccedil: "\xC7",
  Egrave: "\xC8",
  Eacute: "\xC9",
  Ecirc: "\xCA",
  Euml: "\xCB",
  Igrave: "\xCC",
  Iacute: "\xCD",
  Icirc: "\xCE",
  Iuml: "\xCF",
  ETH: "\xD0",
  Ntilde: "\xD1",
  Ograve: "\xD2",
  Oacute: "\xD3",
  Ocirc: "\xD4",
  Otilde: "\xD5",
  Ouml: "\xD6",
  times: "\xD7",
  Oslash: "\xD8",
  Ugrave: "\xD9",
  Uacute: "\xDA",
  Ucirc: "\xDB",
  Uuml: "\xDC",
  Yacute: "\xDD",
  THORN: "\xDE",
  szlig: "\xDF",
  agrave: "\xE0",
  aacute: "\xE1",
  acirc: "\xE2",
  atilde: "\xE3",
  auml: "\xE4",
  aring: "\xE5",
  aelig: "\xE6",
  ccedil: "\xE7",
  egrave: "\xE8",
  eacute: "\xE9",
  ecirc: "\xEA",
  euml: "\xEB",
  igrave: "\xEC",
  iacute: "\xED",
  icirc: "\xEE",
  iuml: "\xEF",
  eth: "\xF0",
  ntilde: "\xF1",
  ograve: "\xF2",
  oacute: "\xF3",
  ocirc: "\xF4",
  otilde: "\xF5",
  ouml: "\xF6",
  divide: "\xF7",
  oslash: "\xF8",
  ugrave: "\xF9",
  uacute: "\xFA",
  ucirc: "\xFB",
  uuml: "\xFC",
  yacute: "\xFD",
  thorn: "\xFE",
  yuml: "\xFF",
  fnof: "\u0192",
  Alpha: "\u0391",
  Beta: "\u0392",
  Gamma: "\u0393",
  Delta: "\u0394",
  Epsilon: "\u0395",
  Zeta: "\u0396",
  Eta: "\u0397",
  Theta: "\u0398",
  Iota: "\u0399",
  Kappa: "\u039A",
  Lambda: "\u039B",
  Mu: "\u039C",
  Nu: "\u039D",
  Xi: "\u039E",
  Omicron: "\u039F",
  Pi: "\u03A0",
  Rho: "\u03A1",
  Sigma: "\u03A3",
  Tau: "\u03A4",
  Upsilon: "\u03A5",
  Phi: "\u03A6",
  Chi: "\u03A7",
  Psi: "\u03A8",
  Omega: "\u03A9",
  alpha: "\u03B1",
  beta: "\u03B2",
  gamma: "\u03B3",
  delta: "\u03B4",
  epsilon: "\u03B5",
  zeta: "\u03B6",
  eta: "\u03B7",
  theta: "\u03B8",
  iota: "\u03B9",
  kappa: "\u03BA",
  lambda: "\u03BB",
  mu: "\u03BC",
  nu: "\u03BD",
  xi: "\u03BE",
  omicron: "\u03BF",
  pi: "\u03C0",
  rho: "\u03C1",
  sigmaf: "\u03C2",
  sigma: "\u03C3",
  tau: "\u03C4",
  upsilon: "\u03C5",
  phi: "\u03C6",
  chi: "\u03C7",
  psi: "\u03C8",
  omega: "\u03C9",
  thetasym: "\u03D1",
  upsih: "\u03D2",
  piv: "\u03D6",
  bull: "\u2022",
  hellip: "\u2026",
  prime: "\u2032",
  Prime: "\u2033",
  oline: "\u203E",
  frasl: "\u2044",
  weierp: "\u2118",
  image: "\u2111",
  real: "\u211C",
  trade: "\u2122",
  alefsym: "\u2135",
  larr: "\u2190",
  uarr: "\u2191",
  rarr: "\u2192",
  darr: "\u2193",
  harr: "\u2194",
  crarr: "\u21B5",
  lArr: "\u21D0",
  uArr: "\u21D1",
  rArr: "\u21D2",
  dArr: "\u21D3",
  hArr: "\u21D4",
  forall: "\u2200",
  part: "\u2202",
  exist: "\u2203",
  empty: "\u2205",
  nabla: "\u2207",
  isin: "\u2208",
  notin: "\u2209",
  ni: "\u220B",
  prod: "\u220F",
  sum: "\u2211",
  minus: "\u2212",
  lowast: "\u2217",
  radic: "\u221A",
  prop: "\u221D",
  infin: "\u221E",
  ang: "\u2220",
  and: "\u2227",
  or: "\u2228",
  cap: "\u2229",
  cup: "\u222A",
  int: "\u222B",
  there4: "\u2234",
  sim: "\u223C",
  cong: "\u2245",
  asymp: "\u2248",
  ne: "\u2260",
  equiv: "\u2261",
  le: "\u2264",
  ge: "\u2265",
  sub: "\u2282",
  sup: "\u2283",
  nsub: "\u2284",
  sube: "\u2286",
  supe: "\u2287",
  oplus: "\u2295",
  otimes: "\u2297",
  perp: "\u22A5",
  sdot: "\u22C5",
  lceil: "\u2308",
  rceil: "\u2309",
  lfloor: "\u230A",
  rfloor: "\u230B",
  lang: "\u2329",
  rang: "\u232A",
  loz: "\u25CA",
  spades: "\u2660",
  clubs: "\u2663",
  hearts: "\u2665",
  diams: "\u2666",
  quot: '"',
  amp: "&",
  lt: "<",
  gt: ">",
  OElig: "\u0152",
  oelig: "\u0153",
  Scaron: "\u0160",
  scaron: "\u0161",
  Yuml: "\u0178",
  circ: "\u02C6",
  tilde: "\u02DC",
  ensp: "\u2002",
  emsp: "\u2003",
  thinsp: "\u2009",
  zwnj: "\u200C",
  zwj: "\u200D",
  lrm: "\u200E",
  rlm: "\u200F",
  ndash: "\u2013",
  mdash: "\u2014",
  lsquo: "\u2018",
  rsquo: "\u2019",
  sbquo: "\u201A",
  ldquo: "\u201C",
  rdquo: "\u201D",
  bdquo: "\u201E",
  dagger: "\u2020",
  Dagger: "\u2021",
  permil: "\u2030",
  lsaquo: "\u2039",
  rsaquo: "\u203A",
  euro: "\u20AC"
};
var dangerous = [
  "cent",
  "copy",
  "divide",
  "gt",
  "lt",
  "not",
  "para",
  "times"
];
var own2 = {}.hasOwnProperty;
var characters = {};
var key;
for (key in characterEntitiesHtml4) {
  if (own2.call(characterEntitiesHtml4, key)) {
    characters[characterEntitiesHtml4[key]] = key;
  }
}
var notAlphanumericRegex = /[^\dA-Za-z]/;
function toNamed(code, next, omit, attribute) {
  const character = String.fromCharCode(code);
  if (own2.call(characters, character)) {
    const name = characters[character];
    const value = "&" + name;
    if (omit && characterEntitiesLegacy.includes(name) && !dangerous.includes(name) && (!attribute || next && next !== 61 && notAlphanumericRegex.test(String.fromCharCode(next)))) {
      return value;
    }
    return value + ";";
  }
  return "";
}
function formatSmart(code, next, options) {
  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons);
  let named;
  if (options.useNamedReferences || options.useShortestReferences) {
    named = toNamed(code, next, options.omitOptionalSemicolons, options.attribute);
  }
  if ((options.useShortestReferences || !named) && options.useShortestReferences) {
    const decimal = toDecimal(code, next, options.omitOptionalSemicolons);
    if (decimal.length < numeric.length) {
      numeric = decimal;
    }
  }
  return named && (!options.useShortestReferences || named.length < numeric.length) ? named : numeric;
}
function stringifyEntities(value, options) {
  return core(value, Object.assign({
    format: formatSmart
  }, options));
}
var htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g;
var bogusCommentEntitySubset = [
  ">"
];
var commentEntitySubset = [
  "<",
  ">"
];
function comment(node, _1, _22, state) {
  return state.settings.bogusComments ? "<?" + stringifyEntities(node.value, Object.assign({}, state.settings.characterReferences, {
    subset: bogusCommentEntitySubset
  })) + ">" : "<!--" + node.value.replace(htmlCommentRegex, encode2) + "-->";
  function encode2($0) {
    return stringifyEntities($0, Object.assign({}, state.settings.characterReferences, {
      subset: commentEntitySubset
    }));
  }
}
function doctype(_1, _22, _32, state) {
  return "<!" + (state.settings.upperDoctype ? "DOCTYPE" : "doctype") + (state.settings.tightDoctype ? "" : " ") + "html>";
}
function ccount(value, character) {
  const source = String(value);
  if (typeof character !== "string") {
    throw new TypeError("Expected character");
  }
  let count = 0;
  let index = source.indexOf(character);
  while (index !== -1) {
    count++;
    index = source.indexOf(character, index + character.length);
  }
  return count;
}
function stringify(values, options) {
  const settings = options || {};
  const input2 = values[values.length - 1] === "" ? [
    ...values,
    ""
  ] : values;
  return input2.join((settings.padRight ? " " : "") + "," + (settings.padLeft === false ? "" : " ")).trim();
}
function stringify2(values) {
  return values.join(" ").trim();
}
var re = /[ \t\n\f\r]/g;
function whitespace(thing) {
  return typeof thing === "object" ? thing.type === "text" ? empty(thing.value) : false : empty(thing);
}
function empty(value) {
  return value.replace(re, "") === "";
}
var siblingAfter = siblings(1);
var siblingBefore = siblings(-1);
var emptyChildren = [];
function siblings(increment2) {
  return sibling;
  function sibling(parent, index, includeWhitespace) {
    const siblings2 = parent ? parent.children : emptyChildren;
    let offset = (index || 0) + increment2;
    let next = siblings2[offset];
    if (!includeWhitespace) {
      while (next && whitespace(next)) {
        offset += increment2;
        next = siblings2[offset];
      }
    }
    return next;
  }
}
var own3 = {}.hasOwnProperty;
function omission(handlers) {
  return omit;
  function omit(node, index, parent) {
    return own3.call(handlers, node.tagName) && handlers[node.tagName](node, index, parent);
  }
}
var closing = omission({
  body,
  caption: headOrColgroupOrCaption,
  colgroup: headOrColgroupOrCaption,
  dd,
  dt,
  head: headOrColgroupOrCaption,
  html: html3,
  li,
  optgroup,
  option,
  p: p5,
  rp: rubyElement,
  rt: rubyElement,
  tbody,
  td: cells,
  tfoot,
  th: cells,
  thead,
  tr
});
function headOrColgroupOrCaption(_5, index, parent) {
  const next = siblingAfter(parent, index, true);
  return !next || next.type !== "comment" && !(next.type === "text" && whitespace(next.value.charAt(0)));
}
function html3(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type !== "comment";
}
function body(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type !== "comment";
}
function p5(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return next ? next.type === "element" && (next.tagName === "address" || next.tagName === "article" || next.tagName === "aside" || next.tagName === "blockquote" || next.tagName === "details" || next.tagName === "div" || next.tagName === "dl" || next.tagName === "fieldset" || next.tagName === "figcaption" || next.tagName === "figure" || next.tagName === "footer" || next.tagName === "form" || next.tagName === "h1" || next.tagName === "h2" || next.tagName === "h3" || next.tagName === "h4" || next.tagName === "h5" || next.tagName === "h6" || next.tagName === "header" || next.tagName === "hgroup" || next.tagName === "hr" || next.tagName === "main" || next.tagName === "menu" || next.tagName === "nav" || next.tagName === "ol" || next.tagName === "p" || next.tagName === "pre" || next.tagName === "section" || next.tagName === "table" || next.tagName === "ul") : !parent || // Confusing parent.
  !(parent.type === "element" && (parent.tagName === "a" || parent.tagName === "audio" || parent.tagName === "del" || parent.tagName === "ins" || parent.tagName === "map" || parent.tagName === "noscript" || parent.tagName === "video"));
}
function li(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && next.tagName === "li";
}
function dt(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return Boolean(next && next.type === "element" && (next.tagName === "dt" || next.tagName === "dd"));
}
function dd(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && (next.tagName === "dt" || next.tagName === "dd");
}
function rubyElement(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && (next.tagName === "rp" || next.tagName === "rt");
}
function optgroup(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && next.tagName === "optgroup";
}
function option(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && (next.tagName === "option" || next.tagName === "optgroup");
}
function thead(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return Boolean(next && next.type === "element" && (next.tagName === "tbody" || next.tagName === "tfoot"));
}
function tbody(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && (next.tagName === "tbody" || next.tagName === "tfoot");
}
function tfoot(_5, index, parent) {
  return !siblingAfter(parent, index);
}
function tr(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && next.tagName === "tr";
}
function cells(_5, index, parent) {
  const next = siblingAfter(parent, index);
  return !next || next.type === "element" && (next.tagName === "td" || next.tagName === "th");
}
var opening = omission({
  body: body2,
  colgroup,
  head,
  html: html4,
  tbody: tbody2
});
function html4(node) {
  const head2 = siblingAfter(node, -1);
  return !head2 || head2.type !== "comment";
}
function head(node) {
  const seen = /* @__PURE__ */ new Set();
  for (const child2 of node.children) {
    if (child2.type === "element" && (child2.tagName === "base" || child2.tagName === "title")) {
      if (seen.has(child2.tagName)) return false;
      seen.add(child2.tagName);
    }
  }
  const child = node.children[0];
  return !child || child.type === "element";
}
function body2(node) {
  const head2 = siblingAfter(node, -1, true);
  return !head2 || head2.type !== "comment" && !(head2.type === "text" && whitespace(head2.value.charAt(0))) && !(head2.type === "element" && (head2.tagName === "meta" || head2.tagName === "link" || head2.tagName === "script" || head2.tagName === "style" || head2.tagName === "template"));
}
function colgroup(node, index, parent) {
  const previous = siblingBefore(parent, index);
  const head2 = siblingAfter(node, -1, true);
  if (parent && previous && previous.type === "element" && previous.tagName === "colgroup" && closing(previous, parent.children.indexOf(previous), parent)) {
    return false;
  }
  return Boolean(head2 && head2.type === "element" && head2.tagName === "col");
}
function tbody2(node, index, parent) {
  const previous = siblingBefore(parent, index);
  const head2 = siblingAfter(node, -1);
  if (parent && previous && previous.type === "element" && (previous.tagName === "thead" || previous.tagName === "tbody") && closing(previous, parent.children.indexOf(previous), parent)) {
    return false;
  }
  return Boolean(head2 && head2.type === "element" && head2.tagName === "tr");
}
var constants = {
  // See: <https://html.spec.whatwg.org/#attribute-name-state>.
  name: [
    [
      "	\n\f\r &/=>".split(""),
      "	\n\f\r \"&'/=>`".split("")
    ],
    [
      `\0	
\f\r "&'/<=>`.split(""),
      "\0	\n\f\r \"&'/<=>`".split("")
    ]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.
  unquoted: [
    [
      "	\n\f\r &>".split(""),
      "\0	\n\f\r \"&'<=>`".split("")
    ],
    [
      "\0	\n\f\r \"&'<=>`".split(""),
      "\0	\n\f\r \"&'<=>`".split("")
    ]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.
  single: [
    [
      "&'".split(""),
      "\"&'`".split("")
    ],
    [
      "\0&'".split(""),
      "\0\"&'`".split("")
    ]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.
  double: [
    [
      '"&'.split(""),
      "\"&'`".split("")
    ],
    [
      '\0"&'.split(""),
      "\0\"&'`".split("")
    ]
  ]
};
function element(node, index, parent, state) {
  const schema = state.schema;
  const omit = schema.space === "svg" ? false : state.settings.omitOptionalTags;
  let selfClosing = schema.space === "svg" ? state.settings.closeEmptyElements : state.settings.voids.includes(node.tagName.toLowerCase());
  const parts = [];
  let last;
  if (schema.space === "html" && node.tagName === "svg") {
    state.schema = svg2;
  }
  const attributes = serializeAttributes(state, node.properties);
  const content2 = state.all(schema.space === "html" && node.tagName === "template" ? node.content : node);
  state.schema = schema;
  if (content2) selfClosing = false;
  if (attributes || !omit || !opening(node, index, parent)) {
    parts.push("<", node.tagName, attributes ? " " + attributes : "");
    if (selfClosing && (schema.space === "svg" || state.settings.closeSelfClosing)) {
      last = attributes.charAt(attributes.length - 1);
      if (!state.settings.tightSelfClosing || last === "/" || last && last !== '"' && last !== "'") {
        parts.push(" ");
      }
      parts.push("/");
    }
    parts.push(">");
  }
  parts.push(content2);
  if (!selfClosing && (!omit || !closing(node, index, parent))) {
    parts.push("</" + node.tagName + ">");
  }
  return parts.join("");
}
function serializeAttributes(state, properties) {
  const values = [];
  let index = -1;
  let key2;
  if (properties) {
    for (key2 in properties) {
      if (properties[key2] !== null && properties[key2] !== void 0) {
        const value = serializeAttribute(state, key2, properties[key2]);
        if (value) values.push(value);
      }
    }
  }
  while (++index < values.length) {
    const last = state.settings.tightAttributes ? values[index].charAt(values[index].length - 1) : void 0;
    if (index !== values.length - 1 && last !== '"' && last !== "'") {
      values[index] += " ";
    }
  }
  return values.join("");
}
function serializeAttribute(state, key2, value) {
  const info = find(state.schema, key2);
  const x5 = state.settings.allowParseErrors && state.schema.space === "html" ? 0 : 1;
  const y6 = state.settings.allowDangerousCharacters ? 0 : 1;
  let quote = state.quote;
  let result;
  if (info.overloadedBoolean && (value === info.attribute || value === "")) {
    value = true;
  } else if ((info.boolean || info.overloadedBoolean) && (typeof value !== "string" || value === info.attribute || value === "")) {
    value = Boolean(value);
  }
  if (value === null || value === void 0 || value === false || typeof value === "number" && Number.isNaN(value)) {
    return "";
  }
  const name = stringifyEntities(info.attribute, Object.assign({}, state.settings.characterReferences, {
    // Always encode without parse errors in non-HTML.
    subset: constants.name[x5][y6]
  }));
  if (value === true) return name;
  value = Array.isArray(value) ? (info.commaSeparated ? stringify : stringify2)(value, {
    padLeft: !state.settings.tightCommaSeparatedLists
  }) : String(value);
  if (state.settings.collapseEmptyAttributes && !value) return name;
  if (state.settings.preferUnquoted) {
    result = stringifyEntities(value, Object.assign({}, state.settings.characterReferences, {
      attribute: true,
      subset: constants.unquoted[x5][y6]
    }));
  }
  if (result !== value) {
    if (state.settings.quoteSmart && ccount(value, quote) > ccount(value, state.alternative)) {
      quote = state.alternative;
    }
    result = quote + stringifyEntities(value, Object.assign({}, state.settings.characterReferences, {
      // Always encode without parse errors in non-HTML.
      subset: (quote === "'" ? constants.single : constants.double)[x5][y6],
      attribute: true
    })) + quote;
  }
  return name + (result ? "=" + result : result);
}
var textEntitySubset = [
  "<",
  "&"
];
function text(node, _5, parent, state) {
  return parent && parent.type === "element" && (parent.tagName === "script" || parent.tagName === "style") ? node.value : stringifyEntities(node.value, Object.assign({}, state.settings.characterReferences, {
    subset: textEntitySubset
  }));
}
function raw(node, index, parent, state) {
  return state.settings.allowDangerousHtml ? node.value : text(node, index, parent, state);
}
function root(node, _1, _22, state) {
  return state.all(node);
}
var handle = zwitch("type", {
  invalid,
  unknown,
  handlers: {
    comment,
    doctype,
    element,
    raw,
    root,
    text
  }
});
function invalid(node) {
  throw new Error("Expected node, not `" + node + "`");
}
function unknown(node_) {
  const node = (
    /** @type {Nodes} */
    node_
  );
  throw new Error("Cannot compile unknown node `" + node.type + "`");
}
var emptyOptions = {};
var emptyCharacterReferences = {};
var emptyChildren2 = [];
function toHtml(tree, options) {
  const options_ = options || emptyOptions;
  const quote = options_.quote || '"';
  const alternative = quote === '"' ? "'" : '"';
  if (quote !== '"' && quote !== "'") {
    throw new Error("Invalid quote `" + quote + "`, expected `'` or `\"`");
  }
  const state = {
    one,
    all,
    settings: {
      omitOptionalTags: options_.omitOptionalTags || false,
      allowParseErrors: options_.allowParseErrors || false,
      allowDangerousCharacters: options_.allowDangerousCharacters || false,
      quoteSmart: options_.quoteSmart || false,
      preferUnquoted: options_.preferUnquoted || false,
      tightAttributes: options_.tightAttributes || false,
      upperDoctype: options_.upperDoctype || false,
      tightDoctype: options_.tightDoctype || false,
      bogusComments: options_.bogusComments || false,
      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,
      tightSelfClosing: options_.tightSelfClosing || false,
      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,
      allowDangerousHtml: options_.allowDangerousHtml || false,
      voids: options_.voids || htmlVoidElements,
      characterReferences: options_.characterReferences || emptyCharacterReferences,
      closeSelfClosing: options_.closeSelfClosing || false,
      closeEmptyElements: options_.closeEmptyElements || false
    },
    schema: options_.space === "svg" ? svg2 : html2,
    quote,
    alternative
  };
  return state.one(Array.isArray(tree) ? {
    type: "root",
    children: tree
  } : tree, void 0, void 0);
}
function one(node, index, parent) {
  return handle(node, index, parent, this);
}
function all(parent) {
  const results = [];
  const children = parent && parent.children || emptyChildren2;
  let index = -1;
  while (++index < children.length) {
    results[index] = this.one(children[index], index, parent);
  }
  return results.join("");
}
function resolveColorReplacements(theme, options) {
  const replacements = typeof theme === "string" ? {} : {
    ...theme.colorReplacements
  };
  const themeName = typeof theme === "string" ? theme : theme.name;
  for (const [key2, value] of Object.entries(options?.colorReplacements || {})) {
    if (typeof value === "string") replacements[key2] = value;
    else if (key2 === themeName) Object.assign(replacements, value);
  }
  return replacements;
}
function applyColorReplacements(color, replacements) {
  if (!color) return color;
  return replacements?.[color?.toLowerCase()] || color;
}
function toArray(x5) {
  return Array.isArray(x5) ? x5 : [
    x5
  ];
}
async function normalizeGetter(p22) {
  return Promise.resolve(typeof p22 === "function" ? p22() : p22).then((r4) => r4.default || r4);
}
function isPlainLang(lang) {
  return !lang || [
    "plaintext",
    "txt",
    "text",
    "plain"
  ].includes(lang);
}
function isSpecialLang(lang) {
  return lang === "ansi" || isPlainLang(lang);
}
function isNoneTheme(theme) {
  return theme === "none";
}
function isSpecialTheme(theme) {
  return isNoneTheme(theme);
}
function addClassToHast(node, className) {
  if (!className) return node;
  node.properties ||= {};
  node.properties.class ||= [];
  if (typeof node.properties.class === "string") node.properties.class = node.properties.class.split(/\s+/g);
  if (!Array.isArray(node.properties.class)) node.properties.class = [];
  const targets = Array.isArray(className) ? className : className.split(/\s+/g);
  for (const c5 of targets) {
    if (c5 && !node.properties.class.includes(c5)) node.properties.class.push(c5);
  }
  return node;
}
function splitLines(code, preserveEnding = false) {
  const parts = code.split(/(\r?\n)/g);
  let index = 0;
  const lines = [];
  for (let i6 = 0; i6 < parts.length; i6 += 2) {
    const line = preserveEnding ? parts[i6] + (parts[i6 + 1] || "") : parts[i6];
    lines.push([
      line,
      index
    ]);
    index += parts[i6].length;
    index += parts[i6 + 1]?.length || 0;
  }
  return lines;
}
function createPositionConverter(code) {
  const lines = splitLines(code, true).map(([line]) => line);
  function indexToPos(index) {
    if (index === code.length) {
      return {
        line: lines.length - 1,
        character: lines[lines.length - 1].length
      };
    }
    let character = index;
    let line = 0;
    for (const lineText of lines) {
      if (character < lineText.length) break;
      character -= lineText.length;
      line++;
    }
    return {
      line,
      character
    };
  }
  function posToIndex(line, character) {
    let index = 0;
    for (let i6 = 0; i6 < line; i6++) index += lines[i6].length;
    index += character;
    return index;
  }
  return {
    lines,
    indexToPos,
    posToIndex
  };
}
var DEFAULT_COLOR_LIGHT_DARK = "light-dark()";
var COLOR_KEYS = [
  "color",
  "background-color"
];
function splitToken(token, offsets) {
  let lastOffset = 0;
  const tokens = [];
  for (const offset of offsets) {
    if (offset > lastOffset) {
      tokens.push({
        ...token,
        content: token.content.slice(lastOffset, offset),
        offset: token.offset + lastOffset
      });
    }
    lastOffset = offset;
  }
  if (lastOffset < token.content.length) {
    tokens.push({
      ...token,
      content: token.content.slice(lastOffset),
      offset: token.offset + lastOffset
    });
  }
  return tokens;
}
function splitTokens(tokens, breakpoints) {
  const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints)).sort((a5, b4) => a5 - b4);
  if (!sorted.length) return tokens;
  return tokens.map((line) => {
    return line.flatMap((token) => {
      const breakpointsInToken = sorted.filter((i6) => token.offset < i6 && i6 < token.offset + token.content.length).map((i6) => i6 - token.offset).sort((a5, b4) => a5 - b4);
      if (!breakpointsInToken.length) return token;
      return splitToken(token, breakpointsInToken);
    });
  });
}
function flatTokenVariants(merged, variantsOrder, cssVariablePrefix, defaultColor, colorsRendering = "css-vars") {
  const token = {
    content: merged.content,
    explanation: merged.explanation,
    offset: merged.offset
  };
  const styles = variantsOrder.map((t4) => getTokenStyleObject(merged.variants[t4]));
  const styleKeys = new Set(styles.flatMap((t4) => Object.keys(t4)));
  const mergedStyles = {};
  const varKey = (idx, key2) => {
    const keyName = key2 === "color" ? "" : key2 === "background-color" ? "-bg" : `-${key2}`;
    return cssVariablePrefix + variantsOrder[idx] + (key2 === "color" ? "" : keyName);
  };
  styles.forEach((cur, idx) => {
    for (const key2 of styleKeys) {
      const value = cur[key2] || "inherit";
      if (idx === 0 && defaultColor && COLOR_KEYS.includes(key2)) {
        if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && styles.length > 1) {
          const lightIndex = variantsOrder.findIndex((t4) => t4 === "light");
          const darkIndex = variantsOrder.findIndex((t4) => t4 === "dark");
          if (lightIndex === -1 || darkIndex === -1) throw new ShikiError('When using `defaultColor: "light-dark()"`, you must provide both `light` and `dark` themes');
          const lightValue = styles[lightIndex][key2] || "inherit";
          const darkValue = styles[darkIndex][key2] || "inherit";
          mergedStyles[key2] = `light-dark(${lightValue}, ${darkValue})`;
          if (colorsRendering === "css-vars") mergedStyles[varKey(idx, key2)] = value;
        } else {
          mergedStyles[key2] = value;
        }
      } else {
        if (colorsRendering === "css-vars") mergedStyles[varKey(idx, key2)] = value;
      }
    }
  });
  token.htmlStyle = mergedStyles;
  return token;
}
function getTokenStyleObject(token) {
  const styles = {};
  if (token.color) styles.color = token.color;
  if (token.bgColor) styles["background-color"] = token.bgColor;
  if (token.fontStyle) {
    if (token.fontStyle & FontStyle.Italic) styles["font-style"] = "italic";
    if (token.fontStyle & FontStyle.Bold) styles["font-weight"] = "bold";
    const decorations2 = [];
    if (token.fontStyle & FontStyle.Underline) decorations2.push("underline");
    if (token.fontStyle & FontStyle.Strikethrough) decorations2.push("line-through");
    if (decorations2.length) styles["text-decoration"] = decorations2.join(" ");
  }
  return styles;
}
function stringifyTokenStyle(token) {
  if (typeof token === "string") return token;
  return Object.entries(token).map(([key2, value]) => `${key2}:${value}`).join(";");
}
var _grammarStateMap = /* @__PURE__ */ new WeakMap();
function setLastGrammarStateToMap(keys, state) {
  _grammarStateMap.set(keys, state);
}
function getLastGrammarStateFromMap(keys) {
  return _grammarStateMap.get(keys);
}
var GrammarState = class _GrammarState {
  /**
   * Theme to Stack mapping
   */
  _stacks = {};
  lang;
  get themes() {
    return Object.keys(this._stacks);
  }
  get theme() {
    return this.themes[0];
  }
  get _stack() {
    return this._stacks[this.theme];
  }
  /**
   * Static method to create a initial grammar state.
   */
  static initial(lang, themes2) {
    return new _GrammarState(Object.fromEntries(toArray(themes2).map((theme) => [
      theme,
      INITIAL
    ])), lang);
  }
  constructor(...args) {
    if (args.length === 2) {
      const [stacksMap, lang] = args;
      this.lang = lang;
      this._stacks = stacksMap;
    } else {
      const [stack, lang, theme] = args;
      this.lang = lang;
      this._stacks = {
        [theme]: stack
      };
    }
  }
  /**
   * Get the internal stack object.
   * @internal
   */
  getInternalStack(theme = this.theme) {
    return this._stacks[theme];
  }
  getScopes(theme = this.theme) {
    return getScopes(this._stacks[theme]);
  }
  toJSON() {
    return {
      lang: this.lang,
      theme: this.theme,
      themes: this.themes,
      scopes: this.getScopes()
    };
  }
};
function getScopes(stack) {
  const scopes = [];
  const visited = /* @__PURE__ */ new Set();
  function pushScope(stack2) {
    if (visited.has(stack2)) return;
    visited.add(stack2);
    const name = stack2?.nameScopesList?.scopeName;
    if (name) scopes.push(name);
    if (stack2.parent) pushScope(stack2.parent);
  }
  pushScope(stack);
  return scopes;
}
function getGrammarStack(state, theme) {
  if (!(state instanceof GrammarState)) throw new ShikiError("Invalid grammar state");
  return state.getInternalStack(theme);
}
function transformerDecorations() {
  const map = /* @__PURE__ */ new WeakMap();
  function getContext(shiki) {
    if (!map.has(shiki.meta)) {
      let normalizePosition = function(p22) {
        if (typeof p22 === "number") {
          if (p22 < 0 || p22 > shiki.source.length) throw new ShikiError(`Invalid decoration offset: ${p22}. Code length: ${shiki.source.length}`);
          return {
            ...converter.indexToPos(p22),
            offset: p22
          };
        } else {
          const line = converter.lines[p22.line];
          if (line === void 0) throw new ShikiError(`Invalid decoration position ${JSON.stringify(p22)}. Lines length: ${converter.lines.length}`);
          let character = p22.character;
          if (character < 0) character = line.length + character;
          if (character < 0 || character > line.length) throw new ShikiError(`Invalid decoration position ${JSON.stringify(p22)}. Line ${p22.line} length: ${line.length}`);
          return {
            ...p22,
            character,
            offset: converter.posToIndex(p22.line, character)
          };
        }
      };
      const converter = createPositionConverter(shiki.source);
      const decorations2 = (shiki.options.decorations || []).map((d5) => ({
        ...d5,
        start: normalizePosition(d5.start),
        end: normalizePosition(d5.end)
      }));
      verifyIntersections(decorations2);
      map.set(shiki.meta, {
        decorations: decorations2,
        converter,
        source: shiki.source
      });
    }
    return map.get(shiki.meta);
  }
  return {
    name: "shiki:decorations",
    tokens(tokens) {
      if (!this.options.decorations?.length) return;
      const ctx = getContext(this);
      const breakpoints = ctx.decorations.flatMap((d5) => [
        d5.start.offset,
        d5.end.offset
      ]);
      const splitted = splitTokens(tokens, breakpoints);
      return splitted;
    },
    code(codeEl) {
      if (!this.options.decorations?.length) return;
      const ctx = getContext(this);
      const lines = Array.from(codeEl.children).filter((i6) => i6.type === "element" && i6.tagName === "span");
      if (lines.length !== ctx.converter.lines.length) throw new ShikiError(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);
      function applyLineSection(line, start, end, decoration) {
        const lineEl = lines[line];
        let text2 = "";
        let startIndex = -1;
        let endIndex = -1;
        if (start === 0) startIndex = 0;
        if (end === 0) endIndex = 0;
        if (end === Number.POSITIVE_INFINITY) endIndex = lineEl.children.length;
        if (startIndex === -1 || endIndex === -1) {
          for (let i6 = 0; i6 < lineEl.children.length; i6++) {
            text2 += stringify3(lineEl.children[i6]);
            if (startIndex === -1 && text2.length === start) startIndex = i6 + 1;
            if (endIndex === -1 && text2.length === end) endIndex = i6 + 1;
          }
        }
        if (startIndex === -1) throw new ShikiError(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);
        if (endIndex === -1) throw new ShikiError(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);
        const children = lineEl.children.slice(startIndex, endIndex);
        if (!decoration.alwaysWrap && children.length === lineEl.children.length) {
          applyDecoration(lineEl, decoration, "line");
        } else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === "element") {
          applyDecoration(children[0], decoration, "token");
        } else {
          const wrapper = {
            type: "element",
            tagName: "span",
            properties: {},
            children
          };
          applyDecoration(wrapper, decoration, "wrapper");
          lineEl.children.splice(startIndex, children.length, wrapper);
        }
      }
      function applyLine(line, decoration) {
        lines[line] = applyDecoration(lines[line], decoration, "line");
      }
      function applyDecoration(el, decoration, type) {
        const properties = decoration.properties || {};
        const transform = decoration.transform || ((i6) => i6);
        el.tagName = decoration.tagName || "span";
        el.properties = {
          ...el.properties,
          ...properties,
          class: el.properties.class
        };
        if (decoration.properties?.class) addClassToHast(el, decoration.properties.class);
        el = transform(el, type) || el;
        return el;
      }
      const lineApplies = [];
      const sorted = ctx.decorations.sort((a5, b4) => b4.start.offset - a5.start.offset || a5.end.offset - b4.end.offset);
      for (const decoration of sorted) {
        const { start, end } = decoration;
        if (start.line === end.line) {
          applyLineSection(start.line, start.character, end.character, decoration);
        } else if (start.line < end.line) {
          applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);
          for (let i6 = start.line + 1; i6 < end.line; i6++) lineApplies.unshift(() => applyLine(i6, decoration));
          applyLineSection(end.line, 0, end.character, decoration);
        }
      }
      lineApplies.forEach((i6) => i6());
    }
  };
}
function verifyIntersections(items) {
  for (let i6 = 0; i6 < items.length; i6++) {
    const foo = items[i6];
    if (foo.start.offset > foo.end.offset) throw new ShikiError(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);
    for (let j4 = i6 + 1; j4 < items.length; j4++) {
      const bar = items[j4];
      const isFooHasBarStart = foo.start.offset <= bar.start.offset && bar.start.offset < foo.end.offset;
      const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset <= foo.end.offset;
      const isBarHasFooStart = bar.start.offset <= foo.start.offset && foo.start.offset < bar.end.offset;
      const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset <= bar.end.offset;
      if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {
        if (isFooHasBarStart && isFooHasBarEnd) continue;
        if (isBarHasFooStart && isBarHasFooEnd) continue;
        if (isBarHasFooStart && foo.start.offset === foo.end.offset) continue;
        if (isFooHasBarEnd && bar.start.offset === bar.end.offset) continue;
        throw new ShikiError(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);
      }
    }
  }
}
function stringify3(el) {
  if (el.type === "text") return el.value;
  if (el.type === "element") return el.children.map(stringify3).join("");
  return "";
}
var builtInTransformers = [
  /* @__PURE__ */ transformerDecorations()
];
function getTransformers(options) {
  const transformers = sortTransformersByEnforcement(options.transformers || []);
  return [
    ...transformers.pre,
    ...transformers.normal,
    ...transformers.post,
    ...builtInTransformers
  ];
}
function sortTransformersByEnforcement(transformers) {
  const pre = [];
  const post = [];
  const normal = [];
  for (const transformer of transformers) {
    switch (transformer.enforce) {
      case "pre":
        pre.push(transformer);
        break;
      case "post":
        post.push(transformer);
        break;
      default:
        normal.push(transformer);
    }
  }
  return {
    pre,
    post,
    normal
  };
}
var namedColors = [
  "black",
  "red",
  "green",
  "yellow",
  "blue",
  "magenta",
  "cyan",
  "white",
  "brightBlack",
  "brightRed",
  "brightGreen",
  "brightYellow",
  "brightBlue",
  "brightMagenta",
  "brightCyan",
  "brightWhite"
];
var decorations = {
  1: "bold",
  2: "dim",
  3: "italic",
  4: "underline",
  7: "reverse",
  8: "hidden",
  9: "strikethrough"
};
function findSequence(value, position) {
  const nextEscape = value.indexOf("\x1B", position);
  if (nextEscape !== -1) {
    if (value[nextEscape + 1] === "[") {
      const nextClose = value.indexOf("m", nextEscape);
      if (nextClose !== -1) {
        return {
          sequence: value.substring(nextEscape + 2, nextClose).split(";"),
          startPosition: nextEscape,
          position: nextClose + 1
        };
      }
    }
  }
  return {
    position: value.length
  };
}
function parseColor(sequence) {
  const colorMode = sequence.shift();
  if (colorMode === "2") {
    const rgb = sequence.splice(0, 3).map((x5) => Number.parseInt(x5));
    if (rgb.length !== 3 || rgb.some((x5) => Number.isNaN(x5))) return;
    return {
      type: "rgb",
      rgb
    };
  } else if (colorMode === "5") {
    const index = sequence.shift();
    if (index) {
      return {
        type: "table",
        index: Number(index)
      };
    }
  }
}
function parseSequence(sequence) {
  const commands = [];
  while (sequence.length > 0) {
    const code = sequence.shift();
    if (!code) continue;
    const codeInt = Number.parseInt(code);
    if (Number.isNaN(codeInt)) continue;
    if (codeInt === 0) {
      commands.push({
        type: "resetAll"
      });
    } else if (codeInt <= 9) {
      const decoration = decorations[codeInt];
      if (decoration) {
        commands.push({
          type: "setDecoration",
          value: decorations[codeInt]
        });
      }
    } else if (codeInt <= 29) {
      const decoration = decorations[codeInt - 20];
      if (decoration) {
        commands.push({
          type: "resetDecoration",
          value: decoration
        });
        if (decoration === "dim") {
          commands.push({
            type: "resetDecoration",
            value: "bold"
          });
        }
      }
    } else if (codeInt <= 37) {
      commands.push({
        type: "setForegroundColor",
        value: {
          type: "named",
          name: namedColors[codeInt - 30]
        }
      });
    } else if (codeInt === 38) {
      const color = parseColor(sequence);
      if (color) {
        commands.push({
          type: "setForegroundColor",
          value: color
        });
      }
    } else if (codeInt === 39) {
      commands.push({
        type: "resetForegroundColor"
      });
    } else if (codeInt <= 47) {
      commands.push({
        type: "setBackgroundColor",
        value: {
          type: "named",
          name: namedColors[codeInt - 40]
        }
      });
    } else if (codeInt === 48) {
      const color = parseColor(sequence);
      if (color) {
        commands.push({
          type: "setBackgroundColor",
          value: color
        });
      }
    } else if (codeInt === 49) {
      commands.push({
        type: "resetBackgroundColor"
      });
    } else if (codeInt === 53) {
      commands.push({
        type: "setDecoration",
        value: "overline"
      });
    } else if (codeInt === 55) {
      commands.push({
        type: "resetDecoration",
        value: "overline"
      });
    } else if (codeInt >= 90 && codeInt <= 97) {
      commands.push({
        type: "setForegroundColor",
        value: {
          type: "named",
          name: namedColors[codeInt - 90 + 8]
        }
      });
    } else if (codeInt >= 100 && codeInt <= 107) {
      commands.push({
        type: "setBackgroundColor",
        value: {
          type: "named",
          name: namedColors[codeInt - 100 + 8]
        }
      });
    }
  }
  return commands;
}
function createAnsiSequenceParser() {
  let foreground = null;
  let background = null;
  let decorations2 = /* @__PURE__ */ new Set();
  return {
    parse(value) {
      const tokens = [];
      let position = 0;
      do {
        const findResult = findSequence(value, position);
        const text2 = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);
        if (text2.length > 0) {
          tokens.push({
            value: text2,
            foreground,
            background,
            decorations: new Set(decorations2)
          });
        }
        if (findResult.sequence) {
          const commands = parseSequence(findResult.sequence);
          for (const styleToken of commands) {
            if (styleToken.type === "resetAll") {
              foreground = null;
              background = null;
              decorations2.clear();
            } else if (styleToken.type === "resetForegroundColor") {
              foreground = null;
            } else if (styleToken.type === "resetBackgroundColor") {
              background = null;
            } else if (styleToken.type === "resetDecoration") {
              decorations2.delete(styleToken.value);
            }
          }
          for (const styleToken of commands) {
            if (styleToken.type === "setForegroundColor") {
              foreground = styleToken.value;
            } else if (styleToken.type === "setBackgroundColor") {
              background = styleToken.value;
            } else if (styleToken.type === "setDecoration") {
              decorations2.add(styleToken.value);
            }
          }
        }
        position = findResult.position;
      } while (position < value.length);
      return tokens;
    }
  };
}
var defaultNamedColorsMap = {
  black: "#000000",
  red: "#bb0000",
  green: "#00bb00",
  yellow: "#bbbb00",
  blue: "#0000bb",
  magenta: "#ff00ff",
  cyan: "#00bbbb",
  white: "#eeeeee",
  brightBlack: "#555555",
  brightRed: "#ff5555",
  brightGreen: "#00ff00",
  brightYellow: "#ffff55",
  brightBlue: "#5555ff",
  brightMagenta: "#ff55ff",
  brightCyan: "#55ffff",
  brightWhite: "#ffffff"
};
function createColorPalette(namedColorsMap = defaultNamedColorsMap) {
  function namedColor(name) {
    return namedColorsMap[name];
  }
  function rgbColor(rgb) {
    return `#${rgb.map((x5) => Math.max(0, Math.min(x5, 255)).toString(16).padStart(2, "0")).join("")}`;
  }
  let colorTable;
  function getColorTable() {
    if (colorTable) {
      return colorTable;
    }
    colorTable = [];
    for (let i6 = 0; i6 < namedColors.length; i6++) {
      colorTable.push(namedColor(namedColors[i6]));
    }
    let levels = [
      0,
      95,
      135,
      175,
      215,
      255
    ];
    for (let r4 = 0; r4 < 6; r4++) {
      for (let g7 = 0; g7 < 6; g7++) {
        for (let b4 = 0; b4 < 6; b4++) {
          colorTable.push(rgbColor([
            levels[r4],
            levels[g7],
            levels[b4]
          ]));
        }
      }
    }
    let level = 8;
    for (let i6 = 0; i6 < 24; i6++, level += 10) {
      colorTable.push(rgbColor([
        level,
        level,
        level
      ]));
    }
    return colorTable;
  }
  function tableColor(index) {
    return getColorTable()[index];
  }
  function value(color) {
    switch (color.type) {
      case "named":
        return namedColor(color.name);
      case "rgb":
        return rgbColor(color.rgb);
      case "table":
        return tableColor(color.index);
    }
  }
  return {
    value
  };
}
function tokenizeAnsiWithTheme(theme, fileContents, options) {
  const colorReplacements = resolveColorReplacements(theme, options);
  const lines = splitLines(fileContents);
  const colorPalette = createColorPalette(Object.fromEntries(namedColors.map((name) => [
    name,
    theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`]
  ])));
  const parser = createAnsiSequenceParser();
  return lines.map((line) => parser.parse(line[0]).map((token) => {
    let color;
    let bgColor;
    if (token.decorations.has("reverse")) {
      color = token.background ? colorPalette.value(token.background) : theme.bg;
      bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;
    } else {
      color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;
      bgColor = token.background ? colorPalette.value(token.background) : void 0;
    }
    color = applyColorReplacements(color, colorReplacements);
    bgColor = applyColorReplacements(bgColor, colorReplacements);
    if (token.decorations.has("dim")) color = dimColor(color);
    let fontStyle = FontStyle.None;
    if (token.decorations.has("bold")) fontStyle |= FontStyle.Bold;
    if (token.decorations.has("italic")) fontStyle |= FontStyle.Italic;
    if (token.decorations.has("underline")) fontStyle |= FontStyle.Underline;
    if (token.decorations.has("strikethrough")) fontStyle |= FontStyle.Strikethrough;
    return {
      content: token.value,
      offset: line[1],
      // TODO: more accurate offset? might need to fork ansi-sequence-parser
      color,
      bgColor,
      fontStyle
    };
  }));
}
function dimColor(color) {
  const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);
  if (hexMatch) {
    if (hexMatch[3]) {
      const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2).toString(16).padStart(2, "0");
      return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;
    } else if (hexMatch[2]) {
      return `#${hexMatch[1]}${hexMatch[2]}80`;
    } else {
      return `#${Array.from(hexMatch[1]).map((x5) => `${x5}${x5}`).join("")}80`;
    }
  }
  const cssVarMatch = color.match(/var\((--[\w-]+-ansi-[\w-]+)\)/);
  if (cssVarMatch) return `var(${cssVarMatch[1]}-dim)`;
  return color;
}
function codeToTokensBase(internal, code, options = {}) {
  const { lang = "text", theme: themeName = internal.getLoadedThemes()[0] } = options;
  if (isPlainLang(lang) || isNoneTheme(themeName)) return splitLines(code).map((line) => [
    {
      content: line[0],
      offset: line[1]
    }
  ]);
  const { theme, colorMap: colorMap2 } = internal.setTheme(themeName);
  if (lang === "ansi") return tokenizeAnsiWithTheme(theme, code, options);
  const _grammar = internal.getLanguage(lang);
  if (options.grammarState) {
    if (options.grammarState.lang !== _grammar.name) {
      throw new ShikiError(`Grammar state language "${options.grammarState.lang}" does not match highlight language "${_grammar.name}"`);
    }
    if (!options.grammarState.themes.includes(theme.name)) {
      throw new ShikiError(`Grammar state themes "${options.grammarState.themes}" do not contain highlight theme "${theme.name}"`);
    }
  }
  return tokenizeWithTheme(code, _grammar, theme, colorMap2, options);
}
function getLastGrammarState(...args) {
  if (args.length === 2) {
    return getLastGrammarStateFromMap(args[1]);
  }
  const [internal, code, options = {}] = args;
  const { lang = "text", theme: themeName = internal.getLoadedThemes()[0] } = options;
  if (isPlainLang(lang) || isNoneTheme(themeName)) throw new ShikiError("Plain language does not have grammar state");
  if (lang === "ansi") throw new ShikiError("ANSI language does not have grammar state");
  const { theme, colorMap: colorMap2 } = internal.setTheme(themeName);
  const _grammar = internal.getLanguage(lang);
  return new GrammarState(_tokenizeWithTheme(code, _grammar, theme, colorMap2, options).stateStack, _grammar.name, theme.name);
}
function tokenizeWithTheme(code, grammar, theme, colorMap2, options) {
  const result = _tokenizeWithTheme(code, grammar, theme, colorMap2, options);
  const grammarState = new GrammarState(_tokenizeWithTheme(code, grammar, theme, colorMap2, options).stateStack, grammar.name, theme.name);
  setLastGrammarStateToMap(result.tokens, grammarState);
  return result.tokens;
}
function _tokenizeWithTheme(code, grammar, theme, colorMap2, options) {
  const colorReplacements = resolveColorReplacements(theme, options);
  const { tokenizeMaxLineLength: tokenizeMaxLineLength2 = 0, tokenizeTimeLimit: tokenizeTimeLimit2 = 500 } = options;
  const lines = splitLines(code);
  let stateStack = options.grammarState ? getGrammarStack(options.grammarState, theme.name) ?? INITIAL : options.grammarContextCode != null ? _tokenizeWithTheme(options.grammarContextCode, grammar, theme, colorMap2, {
    ...options,
    grammarState: void 0,
    grammarContextCode: void 0
  }).stateStack : INITIAL;
  let actual = [];
  const final = [];
  for (let i6 = 0, len = lines.length; i6 < len; i6++) {
    const [line, lineOffset] = lines[i6];
    if (line === "") {
      actual = [];
      final.push([]);
      continue;
    }
    if (tokenizeMaxLineLength2 > 0 && line.length >= tokenizeMaxLineLength2) {
      actual = [];
      final.push([
        {
          content: line,
          offset: lineOffset,
          color: "",
          fontStyle: 0
        }
      ]);
      continue;
    }
    let resultWithScopes;
    let tokensWithScopes;
    let tokensWithScopesIndex;
    if (options.includeExplanation) {
      resultWithScopes = grammar.tokenizeLine(line, stateStack, tokenizeTimeLimit2);
      tokensWithScopes = resultWithScopes.tokens;
      tokensWithScopesIndex = 0;
    }
    const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit2);
    const tokensLength = result.tokens.length / 2;
    for (let j4 = 0; j4 < tokensLength; j4++) {
      const startIndex = result.tokens[2 * j4];
      const nextStartIndex = j4 + 1 < tokensLength ? result.tokens[2 * j4 + 2] : line.length;
      if (startIndex === nextStartIndex) continue;
      const metadata = result.tokens[2 * j4 + 1];
      const color = applyColorReplacements(colorMap2[EncodedTokenMetadata.getForeground(metadata)], colorReplacements);
      const fontStyle = EncodedTokenMetadata.getFontStyle(metadata);
      const token = {
        content: line.substring(startIndex, nextStartIndex),
        offset: lineOffset + startIndex,
        color,
        fontStyle
      };
      if (options.includeExplanation) {
        const themeSettingsSelectors = [];
        if (options.includeExplanation !== "scopeName") {
          for (const setting of theme.settings) {
            let selectors;
            switch (typeof setting.scope) {
              case "string":
                selectors = setting.scope.split(/,/).map((scope) => scope.trim());
                break;
              case "object":
                selectors = setting.scope;
                break;
              default:
                continue;
            }
            themeSettingsSelectors.push({
              settings: setting,
              selectors: selectors.map((selector) => selector.split(/ /))
            });
          }
        }
        token.explanation = [];
        let offset = 0;
        while (startIndex + offset < nextStartIndex) {
          const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];
          const tokenWithScopesText = line.substring(tokenWithScopes.startIndex, tokenWithScopes.endIndex);
          offset += tokenWithScopesText.length;
          token.explanation.push({
            content: tokenWithScopesText,
            scopes: options.includeExplanation === "scopeName" ? explainThemeScopesNameOnly(tokenWithScopes.scopes) : explainThemeScopesFull(themeSettingsSelectors, tokenWithScopes.scopes)
          });
          tokensWithScopesIndex += 1;
        }
      }
      actual.push(token);
    }
    final.push(actual);
    actual = [];
    stateStack = result.ruleStack;
  }
  return {
    tokens: final,
    stateStack
  };
}
function explainThemeScopesNameOnly(scopes) {
  return scopes.map((scope) => ({
    scopeName: scope
  }));
}
function explainThemeScopesFull(themeSelectors, scopes) {
  const result = [];
  for (let i6 = 0, len = scopes.length; i6 < len; i6++) {
    const scope = scopes[i6];
    result[i6] = {
      scopeName: scope,
      themeMatches: explainThemeScope(themeSelectors, scope, scopes.slice(0, i6))
    };
  }
  return result;
}
function matchesOne(selector, scope) {
  return selector === scope || scope.substring(0, selector.length) === selector && scope[selector.length] === ".";
}
function matches(selectors, scope, parentScopes) {
  if (!matchesOne(selectors[selectors.length - 1], scope)) return false;
  let selectorParentIndex = selectors.length - 2;
  let parentIndex = parentScopes.length - 1;
  while (selectorParentIndex >= 0 && parentIndex >= 0) {
    if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex])) selectorParentIndex -= 1;
    parentIndex -= 1;
  }
  if (selectorParentIndex === -1) return true;
  return false;
}
function explainThemeScope(themeSettingsSelectors, scope, parentScopes) {
  const result = [];
  for (const { selectors, settings } of themeSettingsSelectors) {
    for (const selectorPieces of selectors) {
      if (matches(selectorPieces, scope, parentScopes)) {
        result.push(settings);
        break;
      }
    }
  }
  return result;
}
function codeToTokensWithThemes(internal, code, options) {
  const themes2 = Object.entries(options.themes).filter((i6) => i6[1]).map((i6) => ({
    color: i6[0],
    theme: i6[1]
  }));
  const themedTokens = themes2.map((t4) => {
    const tokens2 = codeToTokensBase(internal, code, {
      ...options,
      theme: t4.theme
    });
    const state = getLastGrammarStateFromMap(tokens2);
    const theme = typeof t4.theme === "string" ? t4.theme : t4.theme.name;
    return {
      tokens: tokens2,
      state,
      theme
    };
  });
  const tokens = syncThemesTokenization(...themedTokens.map((i6) => i6.tokens));
  const mergedTokens = tokens[0].map((line, lineIdx) => line.map((_token, tokenIdx) => {
    const mergedToken = {
      content: _token.content,
      variants: {},
      offset: _token.offset
    };
    if ("includeExplanation" in options && options.includeExplanation) {
      mergedToken.explanation = _token.explanation;
    }
    tokens.forEach((t4, themeIdx) => {
      const { content: _5, explanation: __, offset: ___, ...styles } = t4[lineIdx][tokenIdx];
      mergedToken.variants[themes2[themeIdx].color] = styles;
    });
    return mergedToken;
  }));
  const mergedGrammarState = themedTokens[0].state ? new GrammarState(Object.fromEntries(themedTokens.map((s4) => [
    s4.theme,
    s4.state?.getInternalStack(s4.theme)
  ])), themedTokens[0].state.lang) : void 0;
  if (mergedGrammarState) setLastGrammarStateToMap(mergedTokens, mergedGrammarState);
  return mergedTokens;
}
function syncThemesTokenization(...themes2) {
  const outThemes = themes2.map(() => []);
  const count = themes2.length;
  for (let i6 = 0; i6 < themes2[0].length; i6++) {
    const lines = themes2.map((t4) => t4[i6]);
    const outLines = outThemes.map(() => []);
    outThemes.forEach((t4, i22) => t4.push(outLines[i22]));
    const indexes = lines.map(() => 0);
    const current = lines.map((l4) => l4[0]);
    while (current.every((t4) => t4)) {
      const minLength = Math.min(...current.map((t4) => t4.content.length));
      for (let n3 = 0; n3 < count; n3++) {
        const token = current[n3];
        if (token.content.length === minLength) {
          outLines[n3].push(token);
          indexes[n3] += 1;
          current[n3] = lines[n3][indexes[n3]];
        } else {
          outLines[n3].push({
            ...token,
            content: token.content.slice(0, minLength)
          });
          current[n3] = {
            ...token,
            content: token.content.slice(minLength),
            offset: token.offset + minLength
          };
        }
      }
    }
  }
  return outThemes;
}
function codeToTokens(internal, code, options) {
  let bg;
  let fg;
  let tokens;
  let themeName;
  let rootStyle;
  let grammarState;
  if ("themes" in options) {
    const { defaultColor = "light", cssVariablePrefix = "--shiki-", colorsRendering = "css-vars" } = options;
    const themes2 = Object.entries(options.themes).filter((i6) => i6[1]).map((i6) => ({
      color: i6[0],
      theme: i6[1]
    })).sort((a5, b4) => a5.color === defaultColor ? -1 : b4.color === defaultColor ? 1 : 0);
    if (themes2.length === 0) throw new ShikiError("`themes` option must not be empty");
    const themeTokens = codeToTokensWithThemes(internal, code, options);
    grammarState = getLastGrammarStateFromMap(themeTokens);
    if (defaultColor && DEFAULT_COLOR_LIGHT_DARK !== defaultColor && !themes2.find((t4) => t4.color === defaultColor)) throw new ShikiError(`\`themes\` option must contain the defaultColor key \`${defaultColor}\``);
    const themeRegs = themes2.map((t4) => internal.getTheme(t4.theme));
    const themesOrder = themes2.map((t4) => t4.color);
    tokens = themeTokens.map((line) => line.map((token) => flatTokenVariants(token, themesOrder, cssVariablePrefix, defaultColor, colorsRendering)));
    if (grammarState) setLastGrammarStateToMap(tokens, grammarState);
    const themeColorReplacements = themes2.map((t4) => resolveColorReplacements(t4.theme, options));
    fg = mapThemeColors(themes2, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, "fg", colorsRendering);
    bg = mapThemeColors(themes2, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, "bg", colorsRendering);
    themeName = `shiki-themes ${themeRegs.map((t4) => t4.name).join(" ")}`;
    rootStyle = defaultColor ? void 0 : [
      fg,
      bg
    ].join(";");
  } else if ("theme" in options) {
    const colorReplacements = resolveColorReplacements(options.theme, options);
    tokens = codeToTokensBase(internal, code, options);
    const _theme = internal.getTheme(options.theme);
    bg = applyColorReplacements(_theme.bg, colorReplacements);
    fg = applyColorReplacements(_theme.fg, colorReplacements);
    themeName = _theme.name;
    grammarState = getLastGrammarStateFromMap(tokens);
  } else {
    throw new ShikiError("Invalid options, either `theme` or `themes` must be provided");
  }
  return {
    tokens,
    fg,
    bg,
    themeName,
    rootStyle,
    grammarState
  };
}
function mapThemeColors(themes2, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, property, colorsRendering) {
  return themes2.map((t4, idx) => {
    const value = applyColorReplacements(themeRegs[idx][property], themeColorReplacements[idx]) || "inherit";
    const cssVar = `${cssVariablePrefix + t4.color}${property === "bg" ? "-bg" : ""}:${value}`;
    if (idx === 0 && defaultColor) {
      if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && themes2.length > 1) {
        const lightIndex = themes2.findIndex((t22) => t22.color === "light");
        const darkIndex = themes2.findIndex((t22) => t22.color === "dark");
        if (lightIndex === -1 || darkIndex === -1) throw new ShikiError('When using `defaultColor: "light-dark()"`, you must provide both `light` and `dark` themes');
        const lightValue = applyColorReplacements(themeRegs[lightIndex][property], themeColorReplacements[lightIndex]) || "inherit";
        const darkValue = applyColorReplacements(themeRegs[darkIndex][property], themeColorReplacements[darkIndex]) || "inherit";
        return `light-dark(${lightValue}, ${darkValue});${cssVar}`;
      }
      return value;
    }
    if (colorsRendering === "css-vars") {
      return cssVar;
    }
    return null;
  }).filter((i6) => !!i6).join(";");
}
function codeToHast(internal, code, options, transformerContext = {
  meta: {},
  options,
  codeToHast: (_code, _options) => codeToHast(internal, _code, _options),
  codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)
}) {
  let input2 = code;
  for (const transformer of getTransformers(options)) input2 = transformer.preprocess?.call(transformerContext, input2, options) || input2;
  let { tokens, fg, bg, themeName, rootStyle, grammarState } = codeToTokens(internal, input2, options);
  const { mergeWhitespaces = true, mergeSameStyleTokens = false } = options;
  if (mergeWhitespaces === true) tokens = mergeWhitespaceTokens(tokens);
  else if (mergeWhitespaces === "never") tokens = splitWhitespaceTokens(tokens);
  if (mergeSameStyleTokens) {
    tokens = mergeAdjacentStyledTokens(tokens);
  }
  const contextSource = {
    ...transformerContext,
    get source() {
      return input2;
    }
  };
  for (const transformer of getTransformers(options)) tokens = transformer.tokens?.call(contextSource, tokens) || tokens;
  return tokensToHast(tokens, {
    ...options,
    fg,
    bg,
    themeName,
    rootStyle
  }, contextSource, grammarState);
}
function tokensToHast(tokens, options, transformerContext, grammarState = getLastGrammarStateFromMap(tokens)) {
  const transformers = getTransformers(options);
  const lines = [];
  const root2 = {
    type: "root",
    children: []
  };
  const { structure = "classic", tabindex = "0" } = options;
  let preNode = {
    type: "element",
    tagName: "pre",
    properties: {
      class: `shiki ${options.themeName || ""}`,
      style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,
      ...tabindex !== false && tabindex != null ? {
        tabindex: tabindex.toString()
      } : {},
      ...Object.fromEntries(Array.from(Object.entries(options.meta || {})).filter(([key2]) => !key2.startsWith("_")))
    },
    children: []
  };
  let codeNode = {
    type: "element",
    tagName: "code",
    properties: {},
    children: lines
  };
  const lineNodes = [];
  const context = {
    ...transformerContext,
    structure,
    addClassToHast,
    get source() {
      return transformerContext.source;
    },
    get tokens() {
      return tokens;
    },
    get options() {
      return options;
    },
    get root() {
      return root2;
    },
    get pre() {
      return preNode;
    },
    get code() {
      return codeNode;
    },
    get lines() {
      return lineNodes;
    }
  };
  tokens.forEach((line, idx) => {
    if (idx) {
      if (structure === "inline") root2.children.push({
        type: "element",
        tagName: "br",
        properties: {},
        children: []
      });
      else if (structure === "classic") lines.push({
        type: "text",
        value: "\n"
      });
    }
    let lineNode = {
      type: "element",
      tagName: "span",
      properties: {
        class: "line"
      },
      children: []
    };
    let col = 0;
    for (const token of line) {
      let tokenNode = {
        type: "element",
        tagName: "span",
        properties: {
          ...token.htmlAttrs
        },
        children: [
          {
            type: "text",
            value: token.content
          }
        ]
      };
      const style = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));
      if (style) tokenNode.properties.style = style;
      for (const transformer of transformers) tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode, token) || tokenNode;
      if (structure === "inline") root2.children.push(tokenNode);
      else if (structure === "classic") lineNode.children.push(tokenNode);
      col += token.content.length;
    }
    if (structure === "classic") {
      for (const transformer of transformers) lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;
      lineNodes.push(lineNode);
      lines.push(lineNode);
    }
  });
  if (structure === "classic") {
    for (const transformer of transformers) codeNode = transformer?.code?.call(context, codeNode) || codeNode;
    preNode.children.push(codeNode);
    for (const transformer of transformers) preNode = transformer?.pre?.call(context, preNode) || preNode;
    root2.children.push(preNode);
  }
  let result = root2;
  for (const transformer of transformers) result = transformer?.root?.call(context, result) || result;
  if (grammarState) setLastGrammarStateToMap(result, grammarState);
  return result;
}
function mergeWhitespaceTokens(tokens) {
  return tokens.map((line) => {
    const newLine = [];
    let carryOnContent = "";
    let firstOffset = 0;
    line.forEach((token, idx) => {
      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);
      const couldMerge = !isDecorated;
      if (couldMerge && token.content.match(/^\s+$/) && line[idx + 1]) {
        if (!firstOffset) firstOffset = token.offset;
        carryOnContent += token.content;
      } else {
        if (carryOnContent) {
          if (couldMerge) {
            newLine.push({
              ...token,
              offset: firstOffset,
              content: carryOnContent + token.content
            });
          } else {
            newLine.push({
              content: carryOnContent,
              offset: firstOffset
            }, token);
          }
          firstOffset = 0;
          carryOnContent = "";
        } else {
          newLine.push(token);
        }
      }
    });
    return newLine;
  });
}
function splitWhitespaceTokens(tokens) {
  return tokens.map((line) => {
    return line.flatMap((token) => {
      if (token.content.match(/^\s+$/)) return token;
      const match = token.content.match(/^(\s*)(.*?)(\s*)$/);
      if (!match) return token;
      const [, leading, content2, trailing] = match;
      if (!leading && !trailing) return token;
      const expanded = [
        {
          ...token,
          offset: token.offset + leading.length,
          content: content2
        }
      ];
      if (leading) {
        expanded.unshift({
          content: leading,
          offset: token.offset
        });
      }
      if (trailing) {
        expanded.push({
          content: trailing,
          offset: token.offset + leading.length + content2.length
        });
      }
      return expanded;
    });
  });
}
function mergeAdjacentStyledTokens(tokens) {
  return tokens.map((line) => {
    const newLine = [];
    for (const token of line) {
      if (newLine.length === 0) {
        newLine.push({
          ...token
        });
        continue;
      }
      const prevToken = newLine[newLine.length - 1];
      const prevStyle = stringifyTokenStyle(prevToken.htmlStyle || getTokenStyleObject(prevToken));
      const currentStyle = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));
      const isPrevDecorated = prevToken.fontStyle && (prevToken.fontStyle & FontStyle.Underline || prevToken.fontStyle & FontStyle.Strikethrough);
      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);
      if (!isPrevDecorated && !isDecorated && prevStyle === currentStyle) {
        prevToken.content += token.content;
      } else {
        newLine.push({
          ...token
        });
      }
    }
    return newLine;
  });
}
var hastToHtml = toHtml;
function codeToHtml(internal, code, options) {
  const context = {
    meta: {},
    options,
    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),
    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)
  };
  let result = hastToHtml(codeToHast(internal, code, options, context));
  for (const transformer of getTransformers(options)) result = transformer.postprocess?.call(context, result, options) || result;
  return result;
}
var VSCODE_FALLBACK_EDITOR_FG = {
  light: "#333333",
  dark: "#bbbbbb"
};
var VSCODE_FALLBACK_EDITOR_BG = {
  light: "#fffffe",
  dark: "#1e1e1e"
};
var RESOLVED_KEY = "__shiki_resolved";
function normalizeTheme(rawTheme) {
  if (rawTheme?.[RESOLVED_KEY]) return rawTheme;
  const theme = {
    ...rawTheme
  };
  if (theme.tokenColors && !theme.settings) {
    theme.settings = theme.tokenColors;
    delete theme.tokenColors;
  }
  theme.type ||= "dark";
  theme.colorReplacements = {
    ...theme.colorReplacements
  };
  theme.settings ||= [];
  let { bg, fg } = theme;
  if (!bg || !fg) {
    const globalSetting = theme.settings ? theme.settings.find((s4) => !s4.name && !s4.scope) : void 0;
    if (globalSetting?.settings?.foreground) fg = globalSetting.settings.foreground;
    if (globalSetting?.settings?.background) bg = globalSetting.settings.background;
    if (!fg && theme?.colors?.["editor.foreground"]) fg = theme.colors["editor.foreground"];
    if (!bg && theme?.colors?.["editor.background"]) bg = theme.colors["editor.background"];
    if (!fg) fg = theme.type === "light" ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;
    if (!bg) bg = theme.type === "light" ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;
    theme.fg = fg;
    theme.bg = bg;
  }
  if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {
    theme.settings.unshift({
      settings: {
        foreground: theme.fg,
        background: theme.bg
      }
    });
  }
  let replacementCount = 0;
  const replacementMap = /* @__PURE__ */ new Map();
  function getReplacementColor(value) {
    if (replacementMap.has(value)) return replacementMap.get(value);
    replacementCount += 1;
    const hex = `#${replacementCount.toString(16).padStart(8, "0").toLowerCase()}`;
    if (theme.colorReplacements?.[`#${hex}`]) return getReplacementColor(value);
    replacementMap.set(value, hex);
    return hex;
  }
  theme.settings = theme.settings.map((setting) => {
    const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith("#");
    const replaceBg = setting.settings?.background && !setting.settings.background.startsWith("#");
    if (!replaceFg && !replaceBg) return setting;
    const clone2 = {
      ...setting,
      settings: {
        ...setting.settings
      }
    };
    if (replaceFg) {
      const replacement = getReplacementColor(setting.settings.foreground);
      theme.colorReplacements[replacement] = setting.settings.foreground;
      clone2.settings.foreground = replacement;
    }
    if (replaceBg) {
      const replacement = getReplacementColor(setting.settings.background);
      theme.colorReplacements[replacement] = setting.settings.background;
      clone2.settings.background = replacement;
    }
    return clone2;
  });
  for (const key2 of Object.keys(theme.colors || {})) {
    if (key2 === "editor.foreground" || key2 === "editor.background" || key2.startsWith("terminal.ansi")) {
      if (!theme.colors[key2]?.startsWith("#")) {
        const replacement = getReplacementColor(theme.colors[key2]);
        theme.colorReplacements[replacement] = theme.colors[key2];
        theme.colors[key2] = replacement;
      }
    }
  }
  Object.defineProperty(theme, RESOLVED_KEY, {
    enumerable: false,
    writable: false,
    value: true
  });
  return theme;
}
async function resolveLangs(langs) {
  return Array.from(new Set((await Promise.all(langs.filter((l4) => !isSpecialLang(l4)).map(async (lang) => await normalizeGetter(lang).then((r4) => Array.isArray(r4) ? r4 : [
    r4
  ])))).flat()));
}
async function resolveThemes(themes2) {
  const resolved = await Promise.all(themes2.map(async (theme) => isSpecialTheme(theme) ? null : normalizeTheme(await normalizeGetter(theme))));
  return resolved.filter((i6) => !!i6);
}
var _emitDeprecation = 3;
var _emitError = false;
function warnDeprecated(message, version32 = 3) {
  if (!_emitDeprecation) return;
  if (typeof _emitDeprecation === "number" && version32 > _emitDeprecation) return;
  if (_emitError) {
    throw new Error(`[SHIKI DEPRECATE]: ${message}`);
  } else {
    console.trace(`[SHIKI DEPRECATE]: ${message}`);
  }
}
var ShikiError2 = class extends Error {
  constructor(message) {
    super(message);
    this.name = "ShikiError";
  }
};
var Registry2 = class extends Registry {
  constructor(_resolver, _themes, _langs, _alias = {}) {
    super(_resolver);
    this._resolver = _resolver;
    this._themes = _themes;
    this._langs = _langs;
    this._alias = _alias;
    this._themes.map((t4) => this.loadTheme(t4));
    this.loadLanguages(this._langs);
  }
  _resolvedThemes = /* @__PURE__ */ new Map();
  _resolvedGrammars = /* @__PURE__ */ new Map();
  _langMap = /* @__PURE__ */ new Map();
  _langGraph = /* @__PURE__ */ new Map();
  _textmateThemeCache = /* @__PURE__ */ new WeakMap();
  _loadedThemesCache = null;
  _loadedLanguagesCache = null;
  getTheme(theme) {
    if (typeof theme === "string") return this._resolvedThemes.get(theme);
    else return this.loadTheme(theme);
  }
  loadTheme(theme) {
    const _theme = normalizeTheme(theme);
    if (_theme.name) {
      this._resolvedThemes.set(_theme.name, _theme);
      this._loadedThemesCache = null;
    }
    return _theme;
  }
  getLoadedThemes() {
    if (!this._loadedThemesCache) this._loadedThemesCache = [
      ...this._resolvedThemes.keys()
    ];
    return this._loadedThemesCache;
  }
  // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`
  // is expensive. Themes can switch often especially for dual-theme support.
  //
  // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,
  // we omit here so it's easier to cache the themes.
  setTheme(theme) {
    let textmateTheme = this._textmateThemeCache.get(theme);
    if (!textmateTheme) {
      textmateTheme = Theme.createFromRawTheme(theme);
      this._textmateThemeCache.set(theme, textmateTheme);
    }
    this._syncRegistry.setTheme(textmateTheme);
  }
  getGrammar(name) {
    if (this._alias[name]) {
      const resolved = /* @__PURE__ */ new Set([
        name
      ]);
      while (this._alias[name]) {
        name = this._alias[name];
        if (resolved.has(name)) throw new ShikiError2(`Circular alias \`${Array.from(resolved).join(" -> ")} -> ${name}\``);
        resolved.add(name);
      }
    }
    return this._resolvedGrammars.get(name);
  }
  loadLanguage(lang) {
    if (this.getGrammar(lang.name)) return;
    const embeddedLazilyBy = new Set([
      ...this._langMap.values()
    ].filter((i6) => i6.embeddedLangsLazy?.includes(lang.name)));
    this._resolver.addLanguage(lang);
    const grammarConfig = {
      balancedBracketSelectors: lang.balancedBracketSelectors || [
        "*"
      ],
      unbalancedBracketSelectors: lang.unbalancedBracketSelectors || []
    };
    this._syncRegistry._rawGrammars.set(lang.scopeName, lang);
    const g7 = this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);
    g7.name = lang.name;
    this._resolvedGrammars.set(lang.name, g7);
    if (lang.aliases) {
      lang.aliases.forEach((alias) => {
        this._alias[alias] = lang.name;
      });
    }
    this._loadedLanguagesCache = null;
    if (embeddedLazilyBy.size) {
      for (const e4 of embeddedLazilyBy) {
        this._resolvedGrammars.delete(e4.name);
        this._loadedLanguagesCache = null;
        this._syncRegistry?._injectionGrammars?.delete(e4.scopeName);
        this._syncRegistry?._grammars?.delete(e4.scopeName);
        this.loadLanguage(this._langMap.get(e4.name));
      }
    }
  }
  dispose() {
    super.dispose();
    this._resolvedThemes.clear();
    this._resolvedGrammars.clear();
    this._langMap.clear();
    this._langGraph.clear();
    this._loadedThemesCache = null;
  }
  loadLanguages(langs) {
    for (const lang of langs) this.resolveEmbeddedLanguages(lang);
    const langsGraphArray = Array.from(this._langGraph.entries());
    const missingLangs = langsGraphArray.filter(([_5, lang]) => !lang);
    if (missingLangs.length) {
      const dependents = langsGraphArray.filter(([_5, lang]) => lang && lang.embeddedLangs?.some((l4) => missingLangs.map(([name]) => name).includes(l4))).filter((lang) => !missingLangs.includes(lang));
      throw new ShikiError2(`Missing languages ${missingLangs.map(([name]) => `\`${name}\``).join(", ")}, required by ${dependents.map(([name]) => `\`${name}\``).join(", ")}`);
    }
    for (const [_5, lang] of langsGraphArray) this._resolver.addLanguage(lang);
    for (const [_5, lang] of langsGraphArray) this.loadLanguage(lang);
  }
  getLoadedLanguages() {
    if (!this._loadedLanguagesCache) {
      this._loadedLanguagesCache = [
        .../* @__PURE__ */ new Set([
          ...this._resolvedGrammars.keys(),
          ...Object.keys(this._alias)
        ])
      ];
    }
    return this._loadedLanguagesCache;
  }
  resolveEmbeddedLanguages(lang) {
    this._langMap.set(lang.name, lang);
    this._langGraph.set(lang.name, lang);
    if (lang.embeddedLangs) {
      for (const embeddedLang of lang.embeddedLangs) this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));
    }
  }
};
var Resolver = class {
  _langs = /* @__PURE__ */ new Map();
  _scopeToLang = /* @__PURE__ */ new Map();
  _injections = /* @__PURE__ */ new Map();
  _onigLib;
  constructor(engine, langs) {
    this._onigLib = {
      createOnigScanner: (patterns) => engine.createScanner(patterns),
      createOnigString: (s4) => engine.createString(s4)
    };
    langs.forEach((i6) => this.addLanguage(i6));
  }
  get onigLib() {
    return this._onigLib;
  }
  getLangRegistration(langIdOrAlias) {
    return this._langs.get(langIdOrAlias);
  }
  loadGrammar(scopeName) {
    return this._scopeToLang.get(scopeName);
  }
  addLanguage(l4) {
    this._langs.set(l4.name, l4);
    if (l4.aliases) {
      l4.aliases.forEach((a5) => {
        this._langs.set(a5, l4);
      });
    }
    this._scopeToLang.set(l4.scopeName, l4);
    if (l4.injectTo) {
      l4.injectTo.forEach((i6) => {
        if (!this._injections.get(i6)) this._injections.set(i6, []);
        this._injections.get(i6).push(l4.scopeName);
      });
    }
  }
  getInjections(scopeName) {
    const scopeParts = scopeName.split(".");
    let injections = [];
    for (let i6 = 1; i6 <= scopeParts.length; i6++) {
      const subScopeName = scopeParts.slice(0, i6).join(".");
      injections = [
        ...injections,
        ...this._injections.get(subScopeName) || []
      ];
    }
    return injections;
  }
};
var instancesCount = 0;
function createShikiInternalSync(options) {
  instancesCount += 1;
  if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0) console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \`highlighter.dispose()\` to release unused instances.`);
  let isDisposed = false;
  if (!options.engine) throw new ShikiError2("`engine` option is required for synchronous mode");
  const langs = (options.langs || []).flat(1);
  const themes2 = (options.themes || []).flat(1).map(normalizeTheme);
  const resolver = new Resolver(options.engine, langs);
  const _registry = new Registry2(resolver, themes2, langs, options.langAlias);
  let _lastTheme;
  function getLanguage(name) {
    ensureNotDisposed();
    const _lang = _registry.getGrammar(typeof name === "string" ? name : name.name);
    if (!_lang) throw new ShikiError2(`Language \`${name}\` not found, you may need to load it first`);
    return _lang;
  }
  function getTheme(name) {
    if (name === "none") return {
      bg: "",
      fg: "",
      name: "none",
      settings: [],
      type: "dark"
    };
    ensureNotDisposed();
    const _theme = _registry.getTheme(name);
    if (!_theme) throw new ShikiError2(`Theme \`${name}\` not found, you may need to load it first`);
    return _theme;
  }
  function setTheme(name) {
    ensureNotDisposed();
    const theme = getTheme(name);
    if (_lastTheme !== name) {
      _registry.setTheme(theme);
      _lastTheme = name;
    }
    const colorMap2 = _registry.getColorMap();
    return {
      theme,
      colorMap: colorMap2
    };
  }
  function getLoadedThemes() {
    ensureNotDisposed();
    return _registry.getLoadedThemes();
  }
  function getLoadedLanguages() {
    ensureNotDisposed();
    return _registry.getLoadedLanguages();
  }
  function loadLanguageSync(...langs2) {
    ensureNotDisposed();
    _registry.loadLanguages(langs2.flat(1));
  }
  async function loadLanguage(...langs2) {
    return loadLanguageSync(await resolveLangs(langs2));
  }
  function loadThemeSync(...themes22) {
    ensureNotDisposed();
    for (const theme of themes22.flat(1)) {
      _registry.loadTheme(theme);
    }
  }
  async function loadTheme(...themes22) {
    ensureNotDisposed();
    return loadThemeSync(await resolveThemes(themes22));
  }
  function ensureNotDisposed() {
    if (isDisposed) throw new ShikiError2("Shiki instance has been disposed");
  }
  function dispose() {
    if (isDisposed) return;
    isDisposed = true;
    _registry.dispose();
    instancesCount -= 1;
  }
  return {
    setTheme,
    getTheme,
    getLanguage,
    getLoadedThemes,
    getLoadedLanguages,
    loadLanguage,
    loadLanguageSync,
    loadTheme,
    loadThemeSync,
    dispose,
    [Symbol.dispose]: dispose
  };
}
async function createShikiInternal(options) {
  if (!options.engine) {
    warnDeprecated("`engine` option is required. Use `createOnigurumaEngine` or `createJavaScriptRegexEngine` to create an engine.");
  }
  const [themes2, langs, engine] = await Promise.all([
    resolveThemes(options.themes || []),
    resolveLangs(options.langs || []),
    options.engine
  ]);
  return createShikiInternalSync({
    ...options,
    themes: themes2,
    langs,
    engine
  });
}
async function createHighlighterCore(options) {
  const internal = await createShikiInternal(options);
  return {
    getLastGrammarState: (...args) => getLastGrammarState(internal, ...args),
    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),
    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),
    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),
    codeToHast: (code, options2) => codeToHast(internal, code, options2),
    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),
    getBundledLanguages: () => ({}),
    getBundledThemes: () => ({}),
    ...internal,
    getInternalContext: () => internal
  };
}
var ShikiError3 = class extends Error {
  constructor(message) {
    super(message);
    this.name = "ShikiError";
  }
};
function getHeapMax() {
  return 2147483648;
}
function _emscripten_get_now() {
  return typeof performance !== "undefined" ? performance.now() : Date.now();
}
var alignUp = (x5, multiple) => x5 + (multiple - x5 % multiple) % multiple;
async function main(init3) {
  let wasmMemory;
  let buffer;
  const binding = {};
  function updateGlobalBufferAndViews(buf) {
    buffer = buf;
    binding.HEAPU8 = new Uint8Array(buf);
    binding.HEAPU32 = new Uint32Array(buf);
  }
  function _emscripten_memcpy_big(dest, src, num) {
    binding.HEAPU8.copyWithin(dest, src, src + num);
  }
  function emscripten_realloc_buffer(size) {
    try {
      wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);
      updateGlobalBufferAndViews(wasmMemory.buffer);
      return 1;
    } catch {
    }
  }
  function _emscripten_resize_heap(requestedSize) {
    const oldSize = binding.HEAPU8.length;
    requestedSize = requestedSize >>> 0;
    const maxHeapSize = getHeapMax();
    if (requestedSize > maxHeapSize) return false;
    for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {
      let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);
      overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
      const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));
      const replacement = emscripten_realloc_buffer(newSize);
      if (replacement) return true;
    }
    return false;
  }
  const UTF8Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : void 0;
  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {
    const endIdx = idx + maxBytesToRead;
    let endPtr = idx;
    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
      return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
    }
    let str = "";
    while (idx < endPtr) {
      let u0 = heapOrArray[idx++];
      if (!(u0 & 128)) {
        str += String.fromCharCode(u0);
        continue;
      }
      const u1 = heapOrArray[idx++] & 63;
      if ((u0 & 224) === 192) {
        str += String.fromCharCode((u0 & 31) << 6 | u1);
        continue;
      }
      const u22 = heapOrArray[idx++] & 63;
      if ((u0 & 240) === 224) {
        u0 = (u0 & 15) << 12 | u1 << 6 | u22;
      } else {
        u0 = (u0 & 7) << 18 | u1 << 12 | u22 << 6 | heapOrArray[idx++] & 63;
      }
      if (u0 < 65536) {
        str += String.fromCharCode(u0);
      } else {
        const ch = u0 - 65536;
        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
      }
    }
    return str;
  }
  function UTF8ToString(ptr, maxBytesToRead) {
    return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : "";
  }
  const asmLibraryArg = {
    emscripten_get_now: _emscripten_get_now,
    emscripten_memcpy_big: _emscripten_memcpy_big,
    emscripten_resize_heap: _emscripten_resize_heap,
    fd_write: () => 0
  };
  async function createWasm() {
    const info = {
      env: asmLibraryArg,
      wasi_snapshot_preview1: asmLibraryArg
    };
    const exports = await init3(info);
    wasmMemory = exports.memory;
    updateGlobalBufferAndViews(wasmMemory.buffer);
    Object.assign(binding, exports);
    binding.UTF8ToString = UTF8ToString;
  }
  await createWasm();
  return binding;
}
var __defProp22 = Object.defineProperty;
var __defNormalProp2 = (obj, key2, value) => key2 in obj ? __defProp22(obj, key2, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key2] = value;
var __publicField2 = (obj, key2, value) => __defNormalProp2(obj, typeof key2 !== "symbol" ? key2 + "" : key2, value);
var onigBinding = null;
function throwLastOnigError(onigBinding2) {
  throw new ShikiError3(onigBinding2.UTF8ToString(onigBinding2.getLastOnigError()));
}
var UtfString = class _UtfString {
  constructor(str) {
    __publicField2(this, "utf16Length");
    __publicField2(this, "utf8Length");
    __publicField2(this, "utf16Value");
    __publicField2(this, "utf8Value");
    __publicField2(this, "utf16OffsetToUtf8");
    __publicField2(this, "utf8OffsetToUtf16");
    const utf16Length = str.length;
    const utf8Length = _UtfString._utf8ByteLength(str);
    const computeIndicesMapping = utf8Length !== utf16Length;
    const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;
    if (computeIndicesMapping) utf16OffsetToUtf8[utf16Length] = utf8Length;
    const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;
    if (computeIndicesMapping) utf8OffsetToUtf16[utf8Length] = utf16Length;
    const utf8Value = new Uint8Array(utf8Length);
    let i8 = 0;
    for (let i16 = 0; i16 < utf16Length; i16++) {
      const charCode = str.charCodeAt(i16);
      let codePoint = charCode;
      let wasSurrogatePair = false;
      if (charCode >= 55296 && charCode <= 56319) {
        if (i16 + 1 < utf16Length) {
          const nextCharCode = str.charCodeAt(i16 + 1);
          if (nextCharCode >= 56320 && nextCharCode <= 57343) {
            codePoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;
            wasSurrogatePair = true;
          }
        }
      }
      if (computeIndicesMapping) {
        utf16OffsetToUtf8[i16] = i8;
        if (wasSurrogatePair) utf16OffsetToUtf8[i16 + 1] = i8;
        if (codePoint <= 127) {
          utf8OffsetToUtf16[i8 + 0] = i16;
        } else if (codePoint <= 2047) {
          utf8OffsetToUtf16[i8 + 0] = i16;
          utf8OffsetToUtf16[i8 + 1] = i16;
        } else if (codePoint <= 65535) {
          utf8OffsetToUtf16[i8 + 0] = i16;
          utf8OffsetToUtf16[i8 + 1] = i16;
          utf8OffsetToUtf16[i8 + 2] = i16;
        } else {
          utf8OffsetToUtf16[i8 + 0] = i16;
          utf8OffsetToUtf16[i8 + 1] = i16;
          utf8OffsetToUtf16[i8 + 2] = i16;
          utf8OffsetToUtf16[i8 + 3] = i16;
        }
      }
      if (codePoint <= 127) {
        utf8Value[i8++] = codePoint;
      } else if (codePoint <= 2047) {
        utf8Value[i8++] = 192 | (codePoint & 1984) >>> 6;
        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;
      } else if (codePoint <= 65535) {
        utf8Value[i8++] = 224 | (codePoint & 61440) >>> 12;
        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;
        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;
      } else {
        utf8Value[i8++] = 240 | (codePoint & 1835008) >>> 18;
        utf8Value[i8++] = 128 | (codePoint & 258048) >>> 12;
        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;
        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;
      }
      if (wasSurrogatePair) i16++;
    }
    this.utf16Length = utf16Length;
    this.utf8Length = utf8Length;
    this.utf16Value = str;
    this.utf8Value = utf8Value;
    this.utf16OffsetToUtf8 = utf16OffsetToUtf8;
    this.utf8OffsetToUtf16 = utf8OffsetToUtf16;
  }
  static _utf8ByteLength(str) {
    let result = 0;
    for (let i6 = 0, len = str.length; i6 < len; i6++) {
      const charCode = str.charCodeAt(i6);
      let codepoint = charCode;
      let wasSurrogatePair = false;
      if (charCode >= 55296 && charCode <= 56319) {
        if (i6 + 1 < len) {
          const nextCharCode = str.charCodeAt(i6 + 1);
          if (nextCharCode >= 56320 && nextCharCode <= 57343) {
            codepoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;
            wasSurrogatePair = true;
          }
        }
      }
      if (codepoint <= 127) result += 1;
      else if (codepoint <= 2047) result += 2;
      else if (codepoint <= 65535) result += 3;
      else result += 4;
      if (wasSurrogatePair) i6++;
    }
    return result;
  }
  createString(onigBinding2) {
    const result = onigBinding2.omalloc(this.utf8Length);
    onigBinding2.HEAPU8.set(this.utf8Value, result);
    return result;
  }
};
var _OnigString = class _OnigString2 {
  constructor(str) {
    __publicField2(this, "id", ++_OnigString2.LAST_ID);
    __publicField2(this, "_onigBinding");
    __publicField2(this, "content");
    __publicField2(this, "utf16Length");
    __publicField2(this, "utf8Length");
    __publicField2(this, "utf16OffsetToUtf8");
    __publicField2(this, "utf8OffsetToUtf16");
    __publicField2(this, "ptr");
    if (!onigBinding) throw new ShikiError3("Must invoke loadWasm first.");
    this._onigBinding = onigBinding;
    this.content = str;
    const utfString = new UtfString(str);
    this.utf16Length = utfString.utf16Length;
    this.utf8Length = utfString.utf8Length;
    this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;
    this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;
    if (this.utf8Length < 1e4 && !_OnigString2._sharedPtrInUse) {
      if (!_OnigString2._sharedPtr) _OnigString2._sharedPtr = onigBinding.omalloc(1e4);
      _OnigString2._sharedPtrInUse = true;
      onigBinding.HEAPU8.set(utfString.utf8Value, _OnigString2._sharedPtr);
      this.ptr = _OnigString2._sharedPtr;
    } else {
      this.ptr = utfString.createString(onigBinding);
    }
  }
  convertUtf8OffsetToUtf16(utf8Offset) {
    if (this.utf8OffsetToUtf16) {
      if (utf8Offset < 0) return 0;
      if (utf8Offset > this.utf8Length) return this.utf16Length;
      return this.utf8OffsetToUtf16[utf8Offset];
    }
    return utf8Offset;
  }
  convertUtf16OffsetToUtf8(utf16Offset) {
    if (this.utf16OffsetToUtf8) {
      if (utf16Offset < 0) return 0;
      if (utf16Offset > this.utf16Length) return this.utf8Length;
      return this.utf16OffsetToUtf8[utf16Offset];
    }
    return utf16Offset;
  }
  dispose() {
    if (this.ptr === _OnigString2._sharedPtr) _OnigString2._sharedPtrInUse = false;
    else this._onigBinding.ofree(this.ptr);
  }
};
__publicField2(_OnigString, "LAST_ID", 0);
__publicField2(_OnigString, "_sharedPtr", 0);
__publicField2(_OnigString, "_sharedPtrInUse", false);
var OnigString = _OnigString;
var OnigScanner = class {
  constructor(patterns) {
    __publicField2(this, "_onigBinding");
    __publicField2(this, "_ptr");
    if (!onigBinding) throw new ShikiError3("Must invoke loadWasm first.");
    const strPtrsArr = [];
    const strLenArr = [];
    for (let i6 = 0, len = patterns.length; i6 < len; i6++) {
      const utfString = new UtfString(patterns[i6]);
      strPtrsArr[i6] = utfString.createString(onigBinding);
      strLenArr[i6] = utfString.utf8Length;
    }
    const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);
    onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);
    const strLenPtr = onigBinding.omalloc(4 * patterns.length);
    onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);
    const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);
    for (let i6 = 0, len = patterns.length; i6 < len; i6++) onigBinding.ofree(strPtrsArr[i6]);
    onigBinding.ofree(strLenPtr);
    onigBinding.ofree(strPtrsPtr);
    if (scannerPtr === 0) throwLastOnigError(onigBinding);
    this._onigBinding = onigBinding;
    this._ptr = scannerPtr;
  }
  dispose() {
    this._onigBinding.freeOnigScanner(this._ptr);
  }
  findNextMatchSync(string, startPosition, arg) {
    let options = 0;
    if (typeof arg === "number") {
      options = arg;
    }
    if (typeof string === "string") {
      string = new OnigString(string);
      const result = this._findNextMatchSync(string, startPosition, false, options);
      string.dispose();
      return result;
    }
    return this._findNextMatchSync(string, startPosition, false, options);
  }
  _findNextMatchSync(string, startPosition, debugCall, options) {
    const onigBinding2 = this._onigBinding;
    const resultPtr = onigBinding2.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);
    if (resultPtr === 0) {
      return null;
    }
    const HEAPU32 = onigBinding2.HEAPU32;
    let offset = resultPtr / 4;
    const index = HEAPU32[offset++];
    const count = HEAPU32[offset++];
    const captureIndices = [];
    for (let i6 = 0; i6 < count; i6++) {
      const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);
      const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);
      captureIndices[i6] = {
        start: beg,
        end,
        length: end - beg
      };
    }
    return {
      index,
      captureIndices
    };
  }
};
function isInstantiatorOptionsObject(dataOrOptions) {
  return typeof dataOrOptions.instantiator === "function";
}
function isInstantiatorModule(dataOrOptions) {
  return typeof dataOrOptions.default === "function";
}
function isDataOptionsObject(dataOrOptions) {
  return typeof dataOrOptions.data !== "undefined";
}
function isResponse(dataOrOptions) {
  return typeof Response !== "undefined" && dataOrOptions instanceof Response;
}
function isArrayBuffer(data) {
  return typeof ArrayBuffer !== "undefined" && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) || typeof Buffer !== "undefined" && Buffer.isBuffer?.(data) || typeof SharedArrayBuffer !== "undefined" && data instanceof SharedArrayBuffer || typeof Uint32Array !== "undefined" && data instanceof Uint32Array;
}
var initPromise;
function loadWasm(options) {
  if (initPromise) return initPromise;
  async function _load() {
    onigBinding = await main(async (info) => {
      let instance = options;
      instance = await instance;
      if (typeof instance === "function") instance = await instance(info);
      if (typeof instance === "function") instance = await instance(info);
      if (isInstantiatorOptionsObject(instance)) {
        instance = await instance.instantiator(info);
      } else if (isInstantiatorModule(instance)) {
        instance = await instance.default(info);
      } else {
        if (isDataOptionsObject(instance)) instance = instance.data;
        if (isResponse(instance)) {
          if (typeof WebAssembly.instantiateStreaming === "function") instance = await _makeResponseStreamingLoader(instance)(info);
          else instance = await _makeResponseNonStreamingLoader(instance)(info);
        } else if (isArrayBuffer(instance)) {
          instance = await _makeArrayBufferLoader(instance)(info);
        } else if (instance instanceof WebAssembly.Module) {
          instance = await _makeArrayBufferLoader(instance)(info);
        } else if ("default" in instance && instance.default instanceof WebAssembly.Module) {
          instance = await _makeArrayBufferLoader(instance.default)(info);
        }
      }
      if ("instance" in instance) instance = instance.instance;
      if ("exports" in instance) instance = instance.exports;
      return instance;
    });
  }
  initPromise = _load();
  return initPromise;
}
function _makeArrayBufferLoader(data) {
  return (importObject) => WebAssembly.instantiate(data, importObject);
}
function _makeResponseStreamingLoader(data) {
  return (importObject) => WebAssembly.instantiateStreaming(data, importObject);
}
function _makeResponseNonStreamingLoader(data) {
  return async (importObject) => {
    const arrayBuffer = await data.arrayBuffer();
    return WebAssembly.instantiate(arrayBuffer, importObject);
  };
}
var _defaultWasmLoader;
function setDefaultWasmLoader(_loader) {
  _defaultWasmLoader = _loader;
}
function getDefaultWasmLoader() {
  return _defaultWasmLoader;
}
async function createOnigurumaEngine(options) {
  if (options) await loadWasm(options);
  return {
    createScanner(patterns) {
      return new OnigScanner(patterns.map((p22) => typeof p22 === "string" ? p22 : p22.source));
    },
    createString(s4) {
      return new OnigString(s4);
    }
  };
}
var version = "1.24.10";
var version2 = "1.10.9";
function textmateThemeToMonacoTheme(theme) {
  const rules = [];
  for (const { scope, settings } of theme.tokenColors ?? theme.settings) {
    const scopes = Array.isArray(scope) ? scope : [
      scope
    ];
    for (const s4 of scopes) {
      if (s4 && settings?.foreground) {
        rules.push({
          token: s4,
          foreground: normalizeColor(theme.bg, settings.foreground),
          fontStyle: settings?.fontStyle
        });
      }
    }
  }
  return {
    base: theme.type === "dark" ? "vs-dark" : "vs",
    colors: Object.fromEntries(Object.entries(theme.colors ?? {}).map(([key2, value]) => [
      key2,
      normalizeColor(theme.bg, value)
    ])),
    inherit: false,
    rules
  };
}
var tokenizeMaxLineLength = 2e4;
var tokenizeTimeLimit = 500;
var colorMap = [];
var colorToScopeMap = /* @__PURE__ */ new Map();
function initShikiMonacoTokenizer(monaco2, highlighter) {
  const themeMap = /* @__PURE__ */ new Map();
  const themeIds = highlighter.getLoadedThemes();
  for (const themeId of themeIds) {
    const tmTheme = highlighter.getTheme(themeId);
    const monacoTheme = textmateThemeToMonacoTheme(tmTheme);
    themeMap.set(themeId, monacoTheme);
    monaco2.editor.defineTheme(themeId, monacoTheme);
  }
  const setTheme = monaco2.editor.setTheme.bind(monaco2.editor);
  monaco2.editor.setTheme = (themeId) => {
    const theme = themeMap.get(themeId);
    if (!theme) {
      console.warn("Theme not found:", themeId);
      return;
    }
    const ret = highlighter.setTheme(themeId);
    colorMap.length = ret.colorMap.length;
    ret.colorMap.forEach((color, i6) => {
      colorMap[i6] = normalizeColor(ret.theme.bg, color);
    });
    colorToScopeMap.clear();
    theme.rules.forEach((rule) => {
      const color = rule.foreground;
      if (color && !colorToScopeMap.has(color)) {
        colorToScopeMap.set(color, rule.token);
      }
    });
    setTheme(themeId);
  };
  monaco2.editor.setTheme(themeIds[0]);
}
function registerShikiMonacoTokenizer(monaco2, highlighter, languageId) {
  if (!highlighter.getLoadedLanguages().includes(languageId)) {
    return;
  }
  monaco2.languages.setTokensProvider(languageId, {
    getInitialState() {
      return new TokenizerState(INITIAL);
    },
    tokenize(line, state) {
      if (line.length >= tokenizeMaxLineLength) {
        return {
          endState: state,
          tokens: [
            {
              startIndex: 0,
              scopes: ""
            }
          ]
        };
      }
      const grammar = highlighter.getLanguage(languageId);
      const result = grammar.tokenizeLine2(line, state.ruleStack, tokenizeTimeLimit);
      if (result.stoppedEarly) {
        console.warn(`Time limit reached when tokenizing line: ${line.substring(0, 100)}`);
      }
      const tokensLength = result.tokens.length / 2;
      const tokens = new Array(tokensLength);
      for (let j4 = 0; j4 < tokensLength; j4++) {
        const startIndex = result.tokens[2 * j4];
        const metadata = result.tokens[2 * j4 + 1];
        const color = colorMap[EncodedTokenMetadata.getForeground(metadata)] ?? "";
        const scope = colorToScopeMap.get(color) ?? "";
        tokens[j4] = {
          startIndex,
          scopes: scope
        };
      }
      return {
        endState: new TokenizerState(result.ruleStack),
        tokens
      };
    }
  });
}
var TokenizerState = class _TokenizerState {
  constructor(_ruleStack) {
    this._ruleStack = _ruleStack;
  }
  get ruleStack() {
    return this._ruleStack;
  }
  clone() {
    return new _TokenizerState(this._ruleStack);
  }
  equals(other) {
    return other && other instanceof _TokenizerState && other === this && other._ruleStack === this._ruleStack;
  }
};
function toRGBA(hex) {
  const start = hex.charCodeAt(0) === 35 ? 1 : 0;
  const step = hex.length - start >= 6 ? 2 : 1;
  const rgba = [
    0,
    1,
    2,
    3
  ].map((i6) => {
    const j4 = start + i6 * step;
    return parseInt(hex.slice(j4, j4 + step).repeat(3 - step), 16);
  });
  if (Number.isNaN(rgba[3])) {
    rgba[3] = 1;
  } else {
    rgba[3] /= 255;
  }
  return rgba;
}
function toHexColor(rgb) {
  return "#" + rgb.map((c5) => c5.toString(16).padStart(2, "0")).join("");
}
function channelMixer(channelA, channelB, amount) {
  const a5 = channelA * (1 - amount);
  const b4 = channelB * amount;
  return Math.round(a5 + b4);
}
function normalizeColor(bg, fg) {
  const fgRgba = toRGBA(fg);
  if (fgRgba[3] === 1) {
    return toHexColor(fgRgba.slice(0, 3));
  }
  const bgRgba = toRGBA(bg);
  return toHexColor([
    0,
    1,
    2
  ].map((i6) => channelMixer(bgRgba[i6], fgRgba[i6], fgRgba[3])));
}
var grammars = define_SHIKI_GRAMMARS_default;
var themes = /* @__PURE__ */ new Map();
var shikiThemeIds = new Set(define_SHIKI_THEMES_default);
async function initShiki({ theme = "vitesse-dark", langs: languages, tmDownloadCDN, engine = createOnigurumaEngine(getDefaultWasmLoader()) } = {}) {
  const langs = [];
  const themes2 = [];
  if (languages?.length) {
    const set = /* @__PURE__ */ new Set();
    languages.forEach((l4) => {
      if ([
        "plaintext",
        "text"
      ].includes(l4)) {
        return;
      }
      if (typeof l4 === "string" || l4 instanceof URL) {
        if (!set.has(l4.toString())) {
          const g7 = grammars.find((g22) => g22.name === l4);
          if (g7?.embedded) {
            langs.push(...g7.embedded.map((id) => loadTMGrammar(id, tmDownloadCDN)));
          }
          langs.push(loadTMGrammar(l4, tmDownloadCDN));
          set.add(l4.toString());
        }
      } else if (isPlainObject(l4) || typeof l4 === "function") {
        langs.push(l4);
      }
    });
  }
  if (typeof theme === "string" || theme instanceof URL) {
    themes2.push(await loadTMTheme(theme, tmDownloadCDN));
  } else if (isPlainObject(theme) || typeof theme === "function") {
    themes2.push(theme);
  }
  const highlighterCore = await createHighlighterCore({
    langs,
    themes: themes2,
    engine
  });
  Object.assign(highlighterCore, {
    loadThemeFromCDN: (themeName) => highlighterCore.loadTheme(loadTMTheme(themeName, tmDownloadCDN)),
    loadGrammarFromCDN: (...ids) => highlighterCore.loadLanguage(...ids.map((id) => loadTMGrammar(id, tmDownloadCDN)))
  });
  return highlighterCore;
}
function loadTMTheme(src, cdn = "https://esm.sh") {
  if (typeof src === "string" && themes.has(src)) {
    return themes.get(src);
  }
  if (typeof src === "string" && /^[a-zA-Z]/.test(src)) {
    src = src.replace(/\s+/g, "-").replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    if (!shikiThemeIds.has(src)) {
      throw new Error(`Invalid theme ID: ${src}, please ensure the theme ID is one of the following: ${Array.from(shikiThemeIds.keys()).join(", ")}`);
    }
  }
  if (typeof src === "string" && shikiThemeIds.has(src)) {
    const url2 = new URL(`/tm-themes@${version2}/themes/${src}.json`, cdn);
    return cache.fetch(url2).then((res) => res.json());
  }
  const url = typeof src === "string" ? new URL(src, globalThis.location?.href) : src;
  if (url.protocol === "http:" || url.protocol === "https:") {
    return cache.fetch(url).then((res) => res.json());
  }
  throw new Error(`Unsupported theme source: ${src}`);
}
function loadTMGrammar(src, cdn = "https://esm.sh") {
  if (typeof src === "string") {
    const g7 = grammars.find((g22) => g22.name === src);
    if (g7) {
      const url2 = new URL(`/tm-grammars@${version}/grammars/${g7.name}.json`, cdn);
      return cache.fetch(url2).then((res) => res.json());
    }
  }
  const url = typeof src === "string" ? new URL(src, globalThis.location?.href) : src;
  if (url.protocol === "http:" || url.protocol === "https:") {
    return cache.fetch(url).then((res) => res.json());
  }
  throw new Error(`Unsupported grammar source: ${src}`);
}
function getGarmmarInfoFromPath(path) {
  const idx = path.lastIndexOf(".");
  if (idx > 0) {
    const ext = path.slice(idx + 1);
    return grammars.find((g7) => g7.name === ext || g7.aliases?.includes(ext));
  }
}
function getLanguageIdFromPath(path) {
  return getGarmmarInfoFromPath(path)?.name;
}
function getExtnameFromLanguageId(language) {
  const g7 = grammars.find((g22) => g22.name === language);
  if (g7) {
    return g7.aliases?.[0] ?? g7.name;
  }
  return void 0;
}

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/shiki-wasm.mjs
var binary = Uint8Array.from(atob(""), (c5) => c5.charCodeAt(0));
var wasmBinary = binary;
var getWasmInstance = async (info) => {
  return WebAssembly.instantiate(wasmBinary, info).then((wasm) => wasm.instance.exports);
};

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/workspace.mjs
var ErrorNotFound = class extends Error {
  constructor(name) {
    super("No such file or directory: " + name);
  }
};

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/lsp/client.mjs
var DocumentUri;
(function(DocumentUri2) {
  function is(value) {
    return typeof value === "string";
  }
  DocumentUri2.is = is;
})(DocumentUri || (DocumentUri = {}));
var URI;
(function(URI2) {
  function is(value) {
    return typeof value === "string";
  }
  URI2.is = is;
})(URI || (URI = {}));
var integer;
(function(integer2) {
  integer2.MIN_VALUE = -2147483648;
  integer2.MAX_VALUE = 2147483647;
  function is(value) {
    return typeof value === "number" && integer2.MIN_VALUE <= value && value <= integer2.MAX_VALUE;
  }
  integer2.is = is;
})(integer || (integer = {}));
var uinteger;
(function(uinteger2) {
  uinteger2.MIN_VALUE = 0;
  uinteger2.MAX_VALUE = 2147483647;
  function is(value) {
    return typeof value === "number" && uinteger2.MIN_VALUE <= value && value <= uinteger2.MAX_VALUE;
  }
  uinteger2.is = is;
})(uinteger || (uinteger = {}));
var Position;
(function(Position2) {
  function create2(line, character) {
    if (line === Number.MAX_VALUE) {
      line = uinteger.MAX_VALUE;
    }
    if (character === Number.MAX_VALUE) {
      character = uinteger.MAX_VALUE;
    }
    return {
      line,
      character
    };
  }
  Position2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);
  }
  Position2.is = is;
})(Position || (Position = {}));
var Range;
(function(Range2) {
  function create2(one2, two, three, four) {
    if (Is.uinteger(one2) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {
      return {
        start: Position.create(one2, two),
        end: Position.create(three, four)
      };
    } else if (Position.is(one2) && Position.is(two)) {
      return {
        start: one2,
        end: two
      };
    } else {
      throw new Error(`Range#create called with invalid arguments[${one2}, ${two}, ${three}, ${four}]`);
    }
  }
  Range2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);
  }
  Range2.is = is;
})(Range || (Range = {}));
var Location;
(function(Location2) {
  function create2(uri, range) {
    return {
      uri,
      range
    };
  }
  Location2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));
  }
  Location2.is = is;
})(Location || (Location = {}));
var LocationLink;
(function(LocationLink2) {
  function create2(targetUri, targetRange, targetSelectionRange, originSelectionRange) {
    return {
      targetUri,
      targetRange,
      targetSelectionRange,
      originSelectionRange
    };
  }
  LocationLink2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && Range.is(candidate.targetSelectionRange) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));
  }
  LocationLink2.is = is;
})(LocationLink || (LocationLink = {}));
var Color;
(function(Color2) {
  function create2(red, green, blue, alpha) {
    return {
      red,
      green,
      blue,
      alpha
    };
  }
  Color2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);
  }
  Color2.is = is;
})(Color || (Color = {}));
var ColorInformation;
(function(ColorInformation2) {
  function create2(range, color) {
    return {
      range,
      color
    };
  }
  ColorInformation2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);
  }
  ColorInformation2.is = is;
})(ColorInformation || (ColorInformation = {}));
var ColorPresentation;
(function(ColorPresentation2) {
  function create2(label, textEdit, additionalTextEdits) {
    return {
      label,
      textEdit,
      additionalTextEdits
    };
  }
  ColorPresentation2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));
  }
  ColorPresentation2.is = is;
})(ColorPresentation || (ColorPresentation = {}));
var FoldingRangeKind;
(function(FoldingRangeKind2) {
  FoldingRangeKind2.Comment = "comment";
  FoldingRangeKind2.Imports = "imports";
  FoldingRangeKind2.Region = "region";
})(FoldingRangeKind || (FoldingRangeKind = {}));
var FoldingRange;
(function(FoldingRange2) {
  function create2(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {
    const result = {
      startLine,
      endLine
    };
    if (Is.defined(startCharacter)) {
      result.startCharacter = startCharacter;
    }
    if (Is.defined(endCharacter)) {
      result.endCharacter = endCharacter;
    }
    if (Is.defined(kind)) {
      result.kind = kind;
    }
    if (Is.defined(collapsedText)) {
      result.collapsedText = collapsedText;
    }
    return result;
  }
  FoldingRange2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));
  }
  FoldingRange2.is = is;
})(FoldingRange || (FoldingRange = {}));
var DiagnosticRelatedInformation;
(function(DiagnosticRelatedInformation2) {
  function create2(location2, message) {
    return {
      location: location2,
      message
    };
  }
  DiagnosticRelatedInformation2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);
  }
  DiagnosticRelatedInformation2.is = is;
})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));
var DiagnosticSeverity;
(function(DiagnosticSeverity2) {
  DiagnosticSeverity2.Error = 1;
  DiagnosticSeverity2.Warning = 2;
  DiagnosticSeverity2.Information = 3;
  DiagnosticSeverity2.Hint = 4;
})(DiagnosticSeverity || (DiagnosticSeverity = {}));
var DiagnosticTag;
(function(DiagnosticTag2) {
  DiagnosticTag2.Unnecessary = 1;
  DiagnosticTag2.Deprecated = 2;
})(DiagnosticTag || (DiagnosticTag = {}));
var CodeDescription;
(function(CodeDescription2) {
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Is.string(candidate.href);
  }
  CodeDescription2.is = is;
})(CodeDescription || (CodeDescription = {}));
var Diagnostic;
(function(Diagnostic2) {
  function create2(range, message, severity, code, source, relatedInformation) {
    let result = {
      range,
      message
    };
    if (Is.defined(severity)) {
      result.severity = severity;
    }
    if (Is.defined(code)) {
      result.code = code;
    }
    if (Is.defined(source)) {
      result.source = source;
    }
    if (Is.defined(relatedInformation)) {
      result.relatedInformation = relatedInformation;
    }
    return result;
  }
  Diagnostic2.create = create2;
  function is(value) {
    var _a;
    let candidate = value;
    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));
  }
  Diagnostic2.is = is;
})(Diagnostic || (Diagnostic = {}));
var Command;
(function(Command2) {
  function create2(title2, command, ...args) {
    let result = {
      title: title2,
      command
    };
    if (Is.defined(args) && args.length > 0) {
      result.arguments = args;
    }
    return result;
  }
  Command2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);
  }
  Command2.is = is;
})(Command || (Command = {}));
var TextEdit;
(function(TextEdit2) {
  function replace(range, newText) {
    return {
      range,
      newText
    };
  }
  TextEdit2.replace = replace;
  function insert(position, newText) {
    return {
      range: {
        start: position,
        end: position
      },
      newText
    };
  }
  TextEdit2.insert = insert;
  function del(range) {
    return {
      range,
      newText: ""
    };
  }
  TextEdit2.del = del;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);
  }
  TextEdit2.is = is;
})(TextEdit || (TextEdit = {}));
var ChangeAnnotation;
(function(ChangeAnnotation2) {
  function create2(label, needsConfirmation, description) {
    const result = {
      label
    };
    if (needsConfirmation !== void 0) {
      result.needsConfirmation = needsConfirmation;
    }
    if (description !== void 0) {
      result.description = description;
    }
    return result;
  }
  ChangeAnnotation2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);
  }
  ChangeAnnotation2.is = is;
})(ChangeAnnotation || (ChangeAnnotation = {}));
var ChangeAnnotationIdentifier;
(function(ChangeAnnotationIdentifier2) {
  function is(value) {
    const candidate = value;
    return Is.string(candidate);
  }
  ChangeAnnotationIdentifier2.is = is;
})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));
var AnnotatedTextEdit;
(function(AnnotatedTextEdit2) {
  function replace(range, newText, annotation) {
    return {
      range,
      newText,
      annotationId: annotation
    };
  }
  AnnotatedTextEdit2.replace = replace;
  function insert(position, newText, annotation) {
    return {
      range: {
        start: position,
        end: position
      },
      newText,
      annotationId: annotation
    };
  }
  AnnotatedTextEdit2.insert = insert;
  function del(range, annotation) {
    return {
      range,
      newText: "",
      annotationId: annotation
    };
  }
  AnnotatedTextEdit2.del = del;
  function is(value) {
    const candidate = value;
    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));
  }
  AnnotatedTextEdit2.is = is;
})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));
var TextDocumentEdit;
(function(TextDocumentEdit2) {
  function create2(textDocument, edits) {
    return {
      textDocument,
      edits
    };
  }
  TextDocumentEdit2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);
  }
  TextDocumentEdit2.is = is;
})(TextDocumentEdit || (TextDocumentEdit = {}));
var CreateFile;
(function(CreateFile2) {
  function create2(uri, options, annotation) {
    let result = {
      kind: "create",
      uri
    };
    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {
      result.options = options;
    }
    if (annotation !== void 0) {
      result.annotationId = annotation;
    }
    return result;
  }
  CreateFile2.create = create2;
  function is(value) {
    let candidate = value;
    return candidate && candidate.kind === "create" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));
  }
  CreateFile2.is = is;
})(CreateFile || (CreateFile = {}));
var RenameFile;
(function(RenameFile2) {
  function create2(oldUri, newUri, options, annotation) {
    let result = {
      kind: "rename",
      oldUri,
      newUri
    };
    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {
      result.options = options;
    }
    if (annotation !== void 0) {
      result.annotationId = annotation;
    }
    return result;
  }
  RenameFile2.create = create2;
  function is(value) {
    let candidate = value;
    return candidate && candidate.kind === "rename" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));
  }
  RenameFile2.is = is;
})(RenameFile || (RenameFile = {}));
var DeleteFile;
(function(DeleteFile2) {
  function create2(uri, options, annotation) {
    let result = {
      kind: "delete",
      uri
    };
    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {
      result.options = options;
    }
    if (annotation !== void 0) {
      result.annotationId = annotation;
    }
    return result;
  }
  DeleteFile2.create = create2;
  function is(value) {
    let candidate = value;
    return candidate && candidate.kind === "delete" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));
  }
  DeleteFile2.is = is;
})(DeleteFile || (DeleteFile = {}));
var WorkspaceEdit;
(function(WorkspaceEdit2) {
  function is(value) {
    let candidate = value;
    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every((change) => {
      if (Is.string(change.kind)) {
        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);
      } else {
        return TextDocumentEdit.is(change);
      }
    }));
  }
  WorkspaceEdit2.is = is;
})(WorkspaceEdit || (WorkspaceEdit = {}));
var TextDocumentIdentifier;
(function(TextDocumentIdentifier2) {
  function create2(uri) {
    return {
      uri
    };
  }
  TextDocumentIdentifier2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.string(candidate.uri);
  }
  TextDocumentIdentifier2.is = is;
})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));
var VersionedTextDocumentIdentifier;
(function(VersionedTextDocumentIdentifier2) {
  function create2(uri, version4) {
    return {
      uri,
      version: version4
    };
  }
  VersionedTextDocumentIdentifier2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);
  }
  VersionedTextDocumentIdentifier2.is = is;
})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));
var OptionalVersionedTextDocumentIdentifier;
(function(OptionalVersionedTextDocumentIdentifier2) {
  function create2(uri, version4) {
    return {
      uri,
      version: version4
    };
  }
  OptionalVersionedTextDocumentIdentifier2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));
  }
  OptionalVersionedTextDocumentIdentifier2.is = is;
})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));
var TextDocumentItem;
(function(TextDocumentItem2) {
  function create2(uri, languageId, version4, text2) {
    return {
      uri,
      languageId,
      version: version4,
      text: text2
    };
  }
  TextDocumentItem2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);
  }
  TextDocumentItem2.is = is;
})(TextDocumentItem || (TextDocumentItem = {}));
var MarkupKind;
(function(MarkupKind2) {
  MarkupKind2.PlainText = "plaintext";
  MarkupKind2.Markdown = "markdown";
  function is(value) {
    const candidate = value;
    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;
  }
  MarkupKind2.is = is;
})(MarkupKind || (MarkupKind = {}));
var MarkupContent;
(function(MarkupContent2) {
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);
  }
  MarkupContent2.is = is;
})(MarkupContent || (MarkupContent = {}));
var CompletionItemKind;
(function(CompletionItemKind2) {
  CompletionItemKind2.Text = 1;
  CompletionItemKind2.Method = 2;
  CompletionItemKind2.Function = 3;
  CompletionItemKind2.Constructor = 4;
  CompletionItemKind2.Field = 5;
  CompletionItemKind2.Variable = 6;
  CompletionItemKind2.Class = 7;
  CompletionItemKind2.Interface = 8;
  CompletionItemKind2.Module = 9;
  CompletionItemKind2.Property = 10;
  CompletionItemKind2.Unit = 11;
  CompletionItemKind2.Value = 12;
  CompletionItemKind2.Enum = 13;
  CompletionItemKind2.Keyword = 14;
  CompletionItemKind2.Snippet = 15;
  CompletionItemKind2.Color = 16;
  CompletionItemKind2.File = 17;
  CompletionItemKind2.Reference = 18;
  CompletionItemKind2.Folder = 19;
  CompletionItemKind2.EnumMember = 20;
  CompletionItemKind2.Constant = 21;
  CompletionItemKind2.Struct = 22;
  CompletionItemKind2.Event = 23;
  CompletionItemKind2.Operator = 24;
  CompletionItemKind2.TypeParameter = 25;
})(CompletionItemKind || (CompletionItemKind = {}));
var InsertTextFormat;
(function(InsertTextFormat2) {
  InsertTextFormat2.PlainText = 1;
  InsertTextFormat2.Snippet = 2;
})(InsertTextFormat || (InsertTextFormat = {}));
var CompletionItemTag;
(function(CompletionItemTag2) {
  CompletionItemTag2.Deprecated = 1;
})(CompletionItemTag || (CompletionItemTag = {}));
var InsertReplaceEdit;
(function(InsertReplaceEdit2) {
  function create2(newText, insert, replace) {
    return {
      newText,
      insert,
      replace
    };
  }
  InsertReplaceEdit2.create = create2;
  function is(value) {
    const candidate = value;
    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);
  }
  InsertReplaceEdit2.is = is;
})(InsertReplaceEdit || (InsertReplaceEdit = {}));
var InsertTextMode;
(function(InsertTextMode2) {
  InsertTextMode2.asIs = 1;
  InsertTextMode2.adjustIndentation = 2;
})(InsertTextMode || (InsertTextMode = {}));
var CompletionItemLabelDetails;
(function(CompletionItemLabelDetails2) {
  function is(value) {
    const candidate = value;
    return candidate && (Is.string(candidate.detail) || candidate.detail === void 0) && (Is.string(candidate.description) || candidate.description === void 0);
  }
  CompletionItemLabelDetails2.is = is;
})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));
var CompletionItem;
(function(CompletionItem2) {
  function create2(label) {
    return {
      label
    };
  }
  CompletionItem2.create = create2;
})(CompletionItem || (CompletionItem = {}));
var CompletionList;
(function(CompletionList2) {
  function create2(items, isIncomplete) {
    return {
      items: items ? items : [],
      isIncomplete: !!isIncomplete
    };
  }
  CompletionList2.create = create2;
})(CompletionList || (CompletionList = {}));
var MarkedString;
(function(MarkedString2) {
  function fromPlainText(plainText) {
    return plainText.replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&");
  }
  MarkedString2.fromPlainText = fromPlainText;
  function is(value) {
    const candidate = value;
    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);
  }
  MarkedString2.is = is;
})(MarkedString || (MarkedString = {}));
var Hover;
(function(Hover2) {
  function is(value) {
    let candidate = value;
    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));
  }
  Hover2.is = is;
})(Hover || (Hover = {}));
var ParameterInformation;
(function(ParameterInformation2) {
  function create2(label, documentation) {
    return documentation ? {
      label,
      documentation
    } : {
      label
    };
  }
  ParameterInformation2.create = create2;
})(ParameterInformation || (ParameterInformation = {}));
var SignatureInformation;
(function(SignatureInformation2) {
  function create2(label, documentation, ...parameters) {
    let result = {
      label
    };
    if (Is.defined(documentation)) {
      result.documentation = documentation;
    }
    if (Is.defined(parameters)) {
      result.parameters = parameters;
    } else {
      result.parameters = [];
    }
    return result;
  }
  SignatureInformation2.create = create2;
})(SignatureInformation || (SignatureInformation = {}));
var DocumentHighlightKind;
(function(DocumentHighlightKind2) {
  DocumentHighlightKind2.Text = 1;
  DocumentHighlightKind2.Read = 2;
  DocumentHighlightKind2.Write = 3;
})(DocumentHighlightKind || (DocumentHighlightKind = {}));
var DocumentHighlight;
(function(DocumentHighlight2) {
  function create2(range, kind) {
    let result = {
      range
    };
    if (Is.number(kind)) {
      result.kind = kind;
    }
    return result;
  }
  DocumentHighlight2.create = create2;
})(DocumentHighlight || (DocumentHighlight = {}));
var SymbolKind;
(function(SymbolKind2) {
  SymbolKind2.File = 1;
  SymbolKind2.Module = 2;
  SymbolKind2.Namespace = 3;
  SymbolKind2.Package = 4;
  SymbolKind2.Class = 5;
  SymbolKind2.Method = 6;
  SymbolKind2.Property = 7;
  SymbolKind2.Field = 8;
  SymbolKind2.Constructor = 9;
  SymbolKind2.Enum = 10;
  SymbolKind2.Interface = 11;
  SymbolKind2.Function = 12;
  SymbolKind2.Variable = 13;
  SymbolKind2.Constant = 14;
  SymbolKind2.String = 15;
  SymbolKind2.Number = 16;
  SymbolKind2.Boolean = 17;
  SymbolKind2.Array = 18;
  SymbolKind2.Object = 19;
  SymbolKind2.Key = 20;
  SymbolKind2.Null = 21;
  SymbolKind2.EnumMember = 22;
  SymbolKind2.Struct = 23;
  SymbolKind2.Event = 24;
  SymbolKind2.Operator = 25;
  SymbolKind2.TypeParameter = 26;
})(SymbolKind || (SymbolKind = {}));
var SymbolTag;
(function(SymbolTag2) {
  SymbolTag2.Deprecated = 1;
})(SymbolTag || (SymbolTag = {}));
var SymbolInformation;
(function(SymbolInformation2) {
  function create2(name, kind, range, uri, containerName) {
    let result = {
      name,
      kind,
      location: {
        uri,
        range
      }
    };
    if (containerName) {
      result.containerName = containerName;
    }
    return result;
  }
  SymbolInformation2.create = create2;
})(SymbolInformation || (SymbolInformation = {}));
var WorkspaceSymbol;
(function(WorkspaceSymbol2) {
  function create2(name, kind, uri, range) {
    return range !== void 0 ? {
      name,
      kind,
      location: {
        uri,
        range
      }
    } : {
      name,
      kind,
      location: {
        uri
      }
    };
  }
  WorkspaceSymbol2.create = create2;
})(WorkspaceSymbol || (WorkspaceSymbol = {}));
var DocumentSymbol;
(function(DocumentSymbol2) {
  function create2(name, detail, kind, range, selectionRange, children) {
    let result = {
      name,
      detail,
      kind,
      range,
      selectionRange
    };
    if (children !== void 0) {
      result.children = children;
    }
    return result;
  }
  DocumentSymbol2.create = create2;
  function is(value) {
    let candidate = value;
    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));
  }
  DocumentSymbol2.is = is;
})(DocumentSymbol || (DocumentSymbol = {}));
var CodeActionKind;
(function(CodeActionKind2) {
  CodeActionKind2.Empty = "";
  CodeActionKind2.QuickFix = "quickfix";
  CodeActionKind2.Refactor = "refactor";
  CodeActionKind2.RefactorExtract = "refactor.extract";
  CodeActionKind2.RefactorInline = "refactor.inline";
  CodeActionKind2.RefactorRewrite = "refactor.rewrite";
  CodeActionKind2.Source = "source";
  CodeActionKind2.SourceOrganizeImports = "source.organizeImports";
  CodeActionKind2.SourceFixAll = "source.fixAll";
})(CodeActionKind || (CodeActionKind = {}));
var CodeActionTriggerKind;
(function(CodeActionTriggerKind2) {
  CodeActionTriggerKind2.Invoked = 1;
  CodeActionTriggerKind2.Automatic = 2;
})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));
var CodeActionContext;
(function(CodeActionContext2) {
  function create2(diagnostics, only, triggerKind) {
    let result = {
      diagnostics
    };
    if (only !== void 0 && only !== null) {
      result.only = only;
    }
    if (triggerKind !== void 0 && triggerKind !== null) {
      result.triggerKind = triggerKind;
    }
    return result;
  }
  CodeActionContext2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string)) && (candidate.triggerKind === void 0 || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);
  }
  CodeActionContext2.is = is;
})(CodeActionContext || (CodeActionContext = {}));
var CodeAction;
(function(CodeAction2) {
  function create2(title2, kindOrCommandOrEdit, kind) {
    let result = {
      title: title2
    };
    let checkKind = true;
    if (typeof kindOrCommandOrEdit === "string") {
      checkKind = false;
      result.kind = kindOrCommandOrEdit;
    } else if (Command.is(kindOrCommandOrEdit)) {
      result.command = kindOrCommandOrEdit;
    } else {
      result.edit = kindOrCommandOrEdit;
    }
    if (checkKind && kind !== void 0) {
      result.kind = kind;
    }
    return result;
  }
  CodeAction2.create = create2;
  function is(value) {
    let candidate = value;
    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));
  }
  CodeAction2.is = is;
})(CodeAction || (CodeAction = {}));
var CodeLens;
(function(CodeLens2) {
  function create2(range, data) {
    let result = {
      range
    };
    if (Is.defined(data)) {
      result.data = data;
    }
    return result;
  }
  CodeLens2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));
  }
  CodeLens2.is = is;
})(CodeLens || (CodeLens = {}));
var FormattingOptions;
(function(FormattingOptions2) {
  function create2(tabSize, insertSpaces) {
    return {
      tabSize,
      insertSpaces
    };
  }
  FormattingOptions2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);
  }
  FormattingOptions2.is = is;
})(FormattingOptions || (FormattingOptions = {}));
var DocumentLink;
(function(DocumentLink2) {
  function create2(range, target, data) {
    return {
      range,
      target,
      data
    };
  }
  DocumentLink2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));
  }
  DocumentLink2.is = is;
})(DocumentLink || (DocumentLink = {}));
var SelectionRange;
(function(SelectionRange2) {
  function create2(range, parent) {
    return {
      range,
      parent
    };
  }
  SelectionRange2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));
  }
  SelectionRange2.is = is;
})(SelectionRange || (SelectionRange = {}));
var SemanticTokenTypes;
(function(SemanticTokenTypes2) {
  SemanticTokenTypes2["namespace"] = "namespace";
  SemanticTokenTypes2["type"] = "type";
  SemanticTokenTypes2["class"] = "class";
  SemanticTokenTypes2["enum"] = "enum";
  SemanticTokenTypes2["interface"] = "interface";
  SemanticTokenTypes2["struct"] = "struct";
  SemanticTokenTypes2["typeParameter"] = "typeParameter";
  SemanticTokenTypes2["parameter"] = "parameter";
  SemanticTokenTypes2["variable"] = "variable";
  SemanticTokenTypes2["property"] = "property";
  SemanticTokenTypes2["enumMember"] = "enumMember";
  SemanticTokenTypes2["event"] = "event";
  SemanticTokenTypes2["function"] = "function";
  SemanticTokenTypes2["method"] = "method";
  SemanticTokenTypes2["macro"] = "macro";
  SemanticTokenTypes2["keyword"] = "keyword";
  SemanticTokenTypes2["modifier"] = "modifier";
  SemanticTokenTypes2["comment"] = "comment";
  SemanticTokenTypes2["string"] = "string";
  SemanticTokenTypes2["number"] = "number";
  SemanticTokenTypes2["regexp"] = "regexp";
  SemanticTokenTypes2["operator"] = "operator";
  SemanticTokenTypes2["decorator"] = "decorator";
})(SemanticTokenTypes || (SemanticTokenTypes = {}));
var SemanticTokenModifiers;
(function(SemanticTokenModifiers2) {
  SemanticTokenModifiers2["declaration"] = "declaration";
  SemanticTokenModifiers2["definition"] = "definition";
  SemanticTokenModifiers2["readonly"] = "readonly";
  SemanticTokenModifiers2["static"] = "static";
  SemanticTokenModifiers2["deprecated"] = "deprecated";
  SemanticTokenModifiers2["abstract"] = "abstract";
  SemanticTokenModifiers2["async"] = "async";
  SemanticTokenModifiers2["modification"] = "modification";
  SemanticTokenModifiers2["documentation"] = "documentation";
  SemanticTokenModifiers2["defaultLibrary"] = "defaultLibrary";
})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));
var SemanticTokens;
(function(SemanticTokens2) {
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && (candidate.resultId === void 0 || typeof candidate.resultId === "string") && Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === "number");
  }
  SemanticTokens2.is = is;
})(SemanticTokens || (SemanticTokens = {}));
var InlineValueText;
(function(InlineValueText2) {
  function create2(range, text2) {
    return {
      range,
      text: text2
    };
  }
  InlineValueText2.create = create2;
  function is(value) {
    const candidate = value;
    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);
  }
  InlineValueText2.is = is;
})(InlineValueText || (InlineValueText = {}));
var InlineValueVariableLookup;
(function(InlineValueVariableLookup2) {
  function create2(range, variableName, caseSensitiveLookup) {
    return {
      range,
      variableName,
      caseSensitiveLookup
    };
  }
  InlineValueVariableLookup2.create = create2;
  function is(value) {
    const candidate = value;
    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup) && (Is.string(candidate.variableName) || candidate.variableName === void 0);
  }
  InlineValueVariableLookup2.is = is;
})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));
var InlineValueEvaluatableExpression;
(function(InlineValueEvaluatableExpression2) {
  function create2(range, expression) {
    return {
      range,
      expression
    };
  }
  InlineValueEvaluatableExpression2.create = create2;
  function is(value) {
    const candidate = value;
    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && (Is.string(candidate.expression) || candidate.expression === void 0);
  }
  InlineValueEvaluatableExpression2.is = is;
})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));
var InlineValueContext;
(function(InlineValueContext2) {
  function create2(frameId, stoppedLocation) {
    return {
      frameId,
      stoppedLocation
    };
  }
  InlineValueContext2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.defined(candidate) && Range.is(value.stoppedLocation);
  }
  InlineValueContext2.is = is;
})(InlineValueContext || (InlineValueContext = {}));
var InlayHintKind;
(function(InlayHintKind2) {
  InlayHintKind2.Type = 1;
  InlayHintKind2.Parameter = 2;
  function is(value) {
    return value === 1 || value === 2;
  }
  InlayHintKind2.is = is;
})(InlayHintKind || (InlayHintKind = {}));
var InlayHintLabelPart;
(function(InlayHintLabelPart2) {
  function create2(value) {
    return {
      value
    };
  }
  InlayHintLabelPart2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.location === void 0 || Location.is(candidate.location)) && (candidate.command === void 0 || Command.is(candidate.command));
  }
  InlayHintLabelPart2.is = is;
})(InlayHintLabelPart || (InlayHintLabelPart = {}));
var InlayHint;
(function(InlayHint2) {
  function create2(position, label, kind) {
    const result = {
      position,
      label
    };
    if (kind !== void 0) {
      result.kind = kind;
    }
    return result;
  }
  InlayHint2.create = create2;
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && Position.is(candidate.position) && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is)) && (candidate.kind === void 0 || InlayHintKind.is(candidate.kind)) && candidate.textEdits === void 0 || Is.typedArray(candidate.textEdits, TextEdit.is) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.paddingLeft === void 0 || Is.boolean(candidate.paddingLeft)) && (candidate.paddingRight === void 0 || Is.boolean(candidate.paddingRight));
  }
  InlayHint2.is = is;
})(InlayHint || (InlayHint = {}));
var StringValue;
(function(StringValue2) {
  function createSnippet(value) {
    return {
      kind: "snippet",
      value
    };
  }
  StringValue2.createSnippet = createSnippet;
})(StringValue || (StringValue = {}));
var InlineCompletionItem;
(function(InlineCompletionItem2) {
  function create2(insertText, filterText, range, command) {
    return {
      insertText,
      filterText,
      range,
      command
    };
  }
  InlineCompletionItem2.create = create2;
})(InlineCompletionItem || (InlineCompletionItem = {}));
var InlineCompletionList;
(function(InlineCompletionList2) {
  function create2(items) {
    return {
      items
    };
  }
  InlineCompletionList2.create = create2;
})(InlineCompletionList || (InlineCompletionList = {}));
var InlineCompletionTriggerKind;
(function(InlineCompletionTriggerKind2) {
  InlineCompletionTriggerKind2.Invoked = 0;
  InlineCompletionTriggerKind2.Automatic = 1;
})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));
var SelectedCompletionInfo;
(function(SelectedCompletionInfo2) {
  function create2(range, text2) {
    return {
      range,
      text: text2
    };
  }
  SelectedCompletionInfo2.create = create2;
})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));
var InlineCompletionContext;
(function(InlineCompletionContext2) {
  function create2(triggerKind, selectedCompletionInfo) {
    return {
      triggerKind,
      selectedCompletionInfo
    };
  }
  InlineCompletionContext2.create = create2;
})(InlineCompletionContext || (InlineCompletionContext = {}));
var WorkspaceFolder;
(function(WorkspaceFolder2) {
  function is(value) {
    const candidate = value;
    return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);
  }
  WorkspaceFolder2.is = is;
})(WorkspaceFolder || (WorkspaceFolder = {}));
var TextDocument;
(function(TextDocument2) {
  function create2(uri, languageId, version4, content2) {
    return new FullTextDocument(uri, languageId, version4, content2);
  }
  TextDocument2.create = create2;
  function is(value) {
    let candidate = value;
    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;
  }
  TextDocument2.is = is;
  function applyEdits(document2, edits) {
    let text2 = document2.getText();
    let sortedEdits = mergeSort(edits, (a5, b4) => {
      let diff = a5.range.start.line - b4.range.start.line;
      if (diff === 0) {
        return a5.range.start.character - b4.range.start.character;
      }
      return diff;
    });
    let lastModifiedOffset = text2.length;
    for (let i6 = sortedEdits.length - 1; i6 >= 0; i6--) {
      let e4 = sortedEdits[i6];
      let startOffset = document2.offsetAt(e4.range.start);
      let endOffset = document2.offsetAt(e4.range.end);
      if (endOffset <= lastModifiedOffset) {
        text2 = text2.substring(0, startOffset) + e4.newText + text2.substring(endOffset, text2.length);
      } else {
        throw new Error("Overlapping edit");
      }
      lastModifiedOffset = startOffset;
    }
    return text2;
  }
  TextDocument2.applyEdits = applyEdits;
  function mergeSort(data, compare) {
    if (data.length <= 1) {
      return data;
    }
    const p7 = data.length / 2 | 0;
    const left = data.slice(0, p7);
    const right = data.slice(p7);
    mergeSort(left, compare);
    mergeSort(right, compare);
    let leftIdx = 0;
    let rightIdx = 0;
    let i6 = 0;
    while (leftIdx < left.length && rightIdx < right.length) {
      let ret = compare(left[leftIdx], right[rightIdx]);
      if (ret <= 0) {
        data[i6++] = left[leftIdx++];
      } else {
        data[i6++] = right[rightIdx++];
      }
    }
    while (leftIdx < left.length) {
      data[i6++] = left[leftIdx++];
    }
    while (rightIdx < right.length) {
      data[i6++] = right[rightIdx++];
    }
    return data;
  }
})(TextDocument || (TextDocument = {}));
var FullTextDocument = class {
  constructor(uri, languageId, version4, content2) {
    this._uri = uri;
    this._languageId = languageId;
    this._version = version4;
    this._content = content2;
    this._lineOffsets = void 0;
  }
  get uri() {
    return this._uri;
  }
  get languageId() {
    return this._languageId;
  }
  get version() {
    return this._version;
  }
  getText(range) {
    if (range) {
      let start = this.offsetAt(range.start);
      let end = this.offsetAt(range.end);
      return this._content.substring(start, end);
    }
    return this._content;
  }
  update(event, version4) {
    this._content = event.text;
    this._version = version4;
    this._lineOffsets = void 0;
  }
  getLineOffsets() {
    if (this._lineOffsets === void 0) {
      let lineOffsets = [];
      let text2 = this._content;
      let isLineStart = true;
      for (let i6 = 0; i6 < text2.length; i6++) {
        if (isLineStart) {
          lineOffsets.push(i6);
          isLineStart = false;
        }
        let ch = text2.charAt(i6);
        isLineStart = ch === "\r" || ch === "\n";
        if (ch === "\r" && i6 + 1 < text2.length && text2.charAt(i6 + 1) === "\n") {
          i6++;
        }
      }
      if (isLineStart && text2.length > 0) {
        lineOffsets.push(text2.length);
      }
      this._lineOffsets = lineOffsets;
    }
    return this._lineOffsets;
  }
  positionAt(offset) {
    offset = Math.max(Math.min(offset, this._content.length), 0);
    let lineOffsets = this.getLineOffsets();
    let low = 0, high = lineOffsets.length;
    if (high === 0) {
      return Position.create(0, offset);
    }
    while (low < high) {
      let mid = Math.floor((low + high) / 2);
      if (lineOffsets[mid] > offset) {
        high = mid;
      } else {
        low = mid + 1;
      }
    }
    let line = low - 1;
    return Position.create(line, offset - lineOffsets[line]);
  }
  offsetAt(position) {
    let lineOffsets = this.getLineOffsets();
    if (position.line >= lineOffsets.length) {
      return this._content.length;
    } else if (position.line < 0) {
      return 0;
    }
    let lineOffset = lineOffsets[position.line];
    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;
    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);
  }
  get lineCount() {
    return this.getLineOffsets().length;
  }
};
var Is;
(function(Is2) {
  const toString = Object.prototype.toString;
  function defined(value) {
    return typeof value !== "undefined";
  }
  Is2.defined = defined;
  function undefined2(value) {
    return typeof value === "undefined";
  }
  Is2.undefined = undefined2;
  function boolean2(value) {
    return value === true || value === false;
  }
  Is2.boolean = boolean2;
  function string(value) {
    return toString.call(value) === "[object String]";
  }
  Is2.string = string;
  function number2(value) {
    return toString.call(value) === "[object Number]";
  }
  Is2.number = number2;
  function numberRange(value, min, max) {
    return toString.call(value) === "[object Number]" && min <= value && value <= max;
  }
  Is2.numberRange = numberRange;
  function integer2(value) {
    return toString.call(value) === "[object Number]" && -2147483648 <= value && value <= 2147483647;
  }
  Is2.integer = integer2;
  function uinteger2(value) {
    return toString.call(value) === "[object Number]" && 0 <= value && value <= 2147483647;
  }
  Is2.uinteger = uinteger2;
  function func(value) {
    return toString.call(value) === "[object Function]";
  }
  Is2.func = func;
  function objectLiteral(value) {
    return value !== null && typeof value === "object";
  }
  Is2.objectLiteral = objectLiteral;
  function typedArray(value, check) {
    return Array.isArray(value) && value.every(check);
  }
  Is2.typedArray = typedArray;
})(Is || (Is = {}));
var monaco;
function init(monacoNS) {
  monaco = monacoNS;
}

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/core.mjs
function parseImportMapFromJson(json, baseURL) {
  const importMap = {
    $baseURL: new URL(baseURL ?? ".", "file:///").href,
    imports: {},
    scopes: {}
  };
  const v4 = JSON.parse(json);
  if (isObject(v4)) {
    const { imports, scopes } = v4;
    if (isObject(imports)) {
      validateImports(imports);
      importMap.imports = imports;
    }
    if (isObject(scopes)) {
      validateScopes(scopes);
      importMap.scopes = scopes;
    }
  }
  return importMap;
}
function validateImports(imports) {
  for (const [k4, v4] of Object.entries(imports)) {
    if (!v4 || typeof v4 !== "string") {
      delete imports[k4];
    }
  }
}
function validateScopes(imports) {
  for (const [k4, v4] of Object.entries(imports)) {
    if (isObject(v4)) {
      validateImports(v4);
    } else {
      delete imports[k4];
    }
  }
}
function isObject(v4) {
  return typeof v4 === "object" && v4 !== null && !Array.isArray(v4);
}
var version3 = "0.2.2";
var cdnUrl = `https://esm.sh/modern-monaco@${version3}`;
var syntaxes = [];
var lspProviders = {};
async function init2(options) {
  const langs = (options?.langs ?? []).concat(syntaxes);
  const hightlighter = await initShiki({
    ...options,
    langs
  });
  return loadMonaco(hightlighter, options?.workspace, options?.lsp);
}
async function loadMonaco(highlighter, workspace, lsp) {
  let importmap = null;
  let editorCoreModuleUrl = `${cdnUrl}/es2022/editor-core.mjs`;
  let lspModuleUrl = `${cdnUrl}/es2022/lsp.mjs`;
  if (importmap = document.querySelector("script[type='importmap']")) {
    try {
      const { imports = {} } = parseImportMapFromJson(importmap.textContent);
      if (imports["modern-monaco/editor-core"]) {
        editorCoreModuleUrl = imports["modern-monaco/editor-core"];
      }
      if (imports["modern-monaco/lsp"]) {
        lspModuleUrl = imports["modern-monaco/lsp"];
      }
    } catch (error) {
    }
  }
  const builtinLSP = globalThis.MonacoEnvironment?.builtinLSP;
  const [monaco2, { builtinLSPProviders }] = await Promise.all([
    import(editorCoreModuleUrl),
    builtinLSP ? import(lspModuleUrl) : Promise.resolve({
      builtinLSPProviders: {}
    })
  ]);
  const lspProviderMap = {
    ...builtinLSPProviders,
    ...lspProviders,
    ...lsp?.providers
  };
  workspace?.setupMonaco(monaco2);
  if (Object.keys(lspProviderMap).length > 0) {
    init(monaco2);
  }
  if (!document.getElementById("monaco-editor-core-css")) {
    const styleEl = document.createElement("style");
    styleEl.id = "monaco-editor-core-css";
    styleEl.media = "screen";
    styleEl.textContent = monaco2.cssBundle;
    document.head.appendChild(styleEl);
  }
  Reflect.set(globalThis, "MonacoEnvironment", {
    getWorker: async (_workerId, label) => {
      if (label === "editorWorkerService") {
        return monaco2.createEditorWorkerMain();
      }
    },
    getLanguageIdFromUri: (uri) => getLanguageIdFromPath(uri.path),
    getExtnameFromLanguageId
  });
  monaco2.editor.registerLinkOpener({
    async open(link) {
      if ((link.scheme === "https" || link.scheme === "http") && monaco2.editor.getModel(link)) {
        return true;
      }
      return false;
    }
  });
  monaco2.editor.registerEditorOpener({
    openCodeEditor: async (editor, resource, selectionOrPosition) => {
      if (workspace && resource.scheme === "file") {
        try {
          await workspace._openTextDocument(resource.toString(), editor, selectionOrPosition);
          return true;
        } catch (err) {
          if (err instanceof ErrorNotFound) {
            return false;
          }
          throw err;
        }
      }
      try {
        const model = monaco2.editor.getModel(resource);
        if (model) {
          editor.setModel(model);
          if (selectionOrPosition) {
            if ("startLineNumber" in selectionOrPosition) {
              editor.setSelection(selectionOrPosition);
            } else {
              editor.setPosition(selectionOrPosition);
            }
            const pos = editor.getPosition();
            if (pos) {
              const svp = editor.getScrolledVisiblePosition(new monaco2.Position(pos.lineNumber - 7, pos.column));
              if (svp) {
                editor.setScrollTop(svp.top);
              }
            }
          }
          const isHttpUrl = resource.scheme === "https" || resource.scheme === "http";
          editor.updateOptions({
            readOnly: isHttpUrl
          });
          return true;
        }
      } catch (error) {
      }
      return false;
    }
  });
  if (globalThis.navigator?.userAgent?.includes("Macintosh")) {
    monaco2.editor.addKeybindingRule({
      keybinding: monaco2.KeyMod.CtrlCmd | monaco2.KeyCode.KeyK,
      command: "editor.action.quickCommand"
    });
  }
  const allLanguages = new Set(grammars.filter((g7) => !g7.injectTo).map((g7) => g7.name));
  allLanguages.forEach((id) => {
    const languages = monaco2.languages;
    languages.register({
      id,
      aliases: grammars.find((g7) => g7.name === id)?.aliases
    });
    languages.onLanguage(id, async () => {
      const config = monaco2.languageConfigurations[monaco2.languageConfigurationAliases[id] ?? id];
      const loadedGrammars = new Set(highlighter.getLoadedLanguages());
      const reqiredGrammars = [
        id
      ].concat(grammars.find((g7) => g7.name === id)?.embedded ?? []).filter((id2) => !loadedGrammars.has(id2));
      if (config) {
        languages.setLanguageConfiguration(id, monaco2.convertVscodeLanguageConfiguration(config));
      }
      if (reqiredGrammars.length > 0) {
        await highlighter.loadGrammarFromCDN(...reqiredGrammars);
      }
      registerShikiMonacoTokenizer(monaco2, highlighter, id);
      let lspLabel = id;
      let lspProvider = lspProviderMap[lspLabel];
      if (!lspProvider) {
        const alias = Object.entries(lspProviderMap).find(([, lsp2]) => lsp2.aliases?.includes(id));
        if (alias) {
          [lspLabel, lspProvider] = alias;
        }
      }
      if (lspProvider) {
        lspProvider.import().then(({ setup }) => setup(monaco2, id, lsp?.[lspLabel], lsp?.formatting, workspace));
      }
    });
  });
  initShikiMonacoTokenizer(monaco2, highlighter);
  return monaco2;
}
function registerSyntax(syntax) {
  syntaxes.push(syntax);
}
function registerTheme(theme) {
  if (theme.name) {
    themes.set(theme.name, theme);
  }
}
setDefaultWasmLoader(getWasmInstance);

// node_modules/.deno/modern-monaco@0.2.2/node_modules/modern-monaco/dist/index.mjs
var vitesse_dark_default = {
  colors: {
    "activityBar.activeBorder": "#4d9375",
    "activityBar.background": "#121212",
    "activityBar.border": "#191919",
    "activityBar.foreground": "#dbd7caee",
    "activityBar.inactiveForeground": "#dedcd550",
    "activityBarBadge.background": "#bfbaaa",
    "activityBarBadge.foreground": "#121212",
    "badge.background": "#dedcd590",
    "badge.foreground": "#121212",
    "breadcrumb.activeSelectionForeground": "#eeeeee18",
    "breadcrumb.background": "#181818",
    "breadcrumb.focusForeground": "#dbd7caee",
    "breadcrumb.foreground": "#959da5",
    "breadcrumbPicker.background": "#121212",
    "button.background": "#4d9375",
    "button.foreground": "#121212",
    "button.hoverBackground": "#4d9375",
    "checkbox.background": "#181818",
    "checkbox.border": "#2f363d",
    "debugToolBar.background": "#121212",
    descriptionForeground: "#dedcd590",
    "diffEditor.insertedTextBackground": "#4d937550",
    "diffEditor.removedTextBackground": "#ab595950",
    "dropdown.background": "#121212",
    "dropdown.border": "#191919",
    "dropdown.foreground": "#dbd7caee",
    "dropdown.listBackground": "#181818",
    "editor.background": "#121212",
    "editor.findMatchBackground": "#e6cc7722",
    "editor.findMatchHighlightBackground": "#e6cc7744",
    "editor.focusedStackFrameHighlightBackground": "#b808",
    "editor.foldBackground": "#eeeeee10",
    "editor.foreground": "#dbd7caee",
    "editor.inactiveSelectionBackground": "#eeeeee10",
    "editor.lineHighlightBackground": "#181818",
    "editor.selectionBackground": "#eeeeee18",
    "editor.selectionHighlightBackground": "#eeeeee10",
    "editor.stackFrameHighlightBackground": "#a707",
    "editor.wordHighlightBackground": "#1c6b4805",
    "editor.wordHighlightStrongBackground": "#1c6b4810",
    "editorBracketHighlight.foreground1": "#5eaab5",
    "editorBracketHighlight.foreground2": "#4d9375",
    "editorBracketHighlight.foreground3": "#d4976c",
    "editorBracketHighlight.foreground4": "#d9739f",
    "editorBracketHighlight.foreground5": "#e6cc77",
    "editorBracketHighlight.foreground6": "#6394bf",
    "editorBracketMatch.background": "#4d937520",
    "editorError.foreground": "#cb7676",
    "editorGroup.border": "#191919",
    "editorGroupHeader.tabsBackground": "#121212",
    "editorGroupHeader.tabsBorder": "#191919",
    "editorGutter.addedBackground": "#4d9375",
    "editorGutter.commentRangeForeground": "#dedcd550",
    "editorGutter.deletedBackground": "#cb7676",
    "editorGutter.foldingControlForeground": "#dedcd590",
    "editorGutter.modifiedBackground": "#6394bf",
    "editorHint.foreground": "#4d9375",
    "editorIndentGuide.activeBackground": "#ffffff30",
    "editorIndentGuide.background": "#ffffff15",
    "editorInfo.foreground": "#6394bf",
    "editorInlayHint.background": "#181818",
    "editorInlayHint.foreground": "#666666",
    "editorLineNumber.activeForeground": "#bfbaaa",
    "editorLineNumber.foreground": "#dedcd550",
    "editorOverviewRuler.border": "#111",
    "editorStickyScroll.background": "#181818",
    "editorStickyScrollHover.background": "#181818",
    "editorWarning.foreground": "#d4976c",
    "editorWhitespace.foreground": "#ffffff15",
    "editorWidget.background": "#121212",
    errorForeground: "#cb7676",
    focusBorder: "#00000000",
    foreground: "#dbd7caee",
    "gitDecoration.addedResourceForeground": "#4d9375",
    "gitDecoration.conflictingResourceForeground": "#d4976c",
    "gitDecoration.deletedResourceForeground": "#cb7676",
    "gitDecoration.ignoredResourceForeground": "#dedcd550",
    "gitDecoration.modifiedResourceForeground": "#6394bf",
    "gitDecoration.submoduleResourceForeground": "#dedcd590",
    "gitDecoration.untrackedResourceForeground": "#5eaab5",
    "input.background": "#181818",
    "input.border": "#191919",
    "input.foreground": "#dbd7caee",
    "input.placeholderForeground": "#dedcd590",
    "inputOption.activeBackground": "#dedcd550",
    "list.activeSelectionBackground": "#181818",
    "list.activeSelectionForeground": "#dbd7caee",
    "list.focusBackground": "#181818",
    "list.highlightForeground": "#4d9375",
    "list.hoverBackground": "#181818",
    "list.hoverForeground": "#dbd7caee",
    "list.inactiveFocusBackground": "#121212",
    "list.inactiveSelectionBackground": "#181818",
    "list.inactiveSelectionForeground": "#dbd7caee",
    "menu.separatorBackground": "#191919",
    "notificationCenterHeader.background": "#121212",
    "notificationCenterHeader.foreground": "#959da5",
    "notifications.background": "#121212",
    "notifications.border": "#191919",
    "notifications.foreground": "#dbd7caee",
    "notificationsErrorIcon.foreground": "#cb7676",
    "notificationsInfoIcon.foreground": "#6394bf",
    "notificationsWarningIcon.foreground": "#d4976c",
    "panel.background": "#121212",
    "panel.border": "#191919",
    "panelInput.border": "#2f363d",
    "panelTitle.activeBorder": "#4d9375",
    "panelTitle.activeForeground": "#dbd7caee",
    "panelTitle.inactiveForeground": "#959da5",
    "peekViewEditor.background": "#121212",
    "peekViewEditor.matchHighlightBackground": "#ffd33d33",
    "peekViewResult.background": "#121212",
    "peekViewResult.matchHighlightBackground": "#ffd33d33",
    "pickerGroup.border": "#191919",
    "pickerGroup.foreground": "#dbd7caee",
    "problemsErrorIcon.foreground": "#cb7676",
    "problemsInfoIcon.foreground": "#6394bf",
    "problemsWarningIcon.foreground": "#d4976c",
    "progressBar.background": "#4d9375",
    "quickInput.background": "#121212",
    "quickInput.foreground": "#dbd7caee",
    "quickInputList.focusBackground": "#181818",
    "scrollbar.shadow": "#0000",
    "scrollbarSlider.activeBackground": "#dedcd550",
    "scrollbarSlider.background": "#dedcd510",
    "scrollbarSlider.hoverBackground": "#dedcd550",
    "settings.headerForeground": "#dbd7caee",
    "settings.modifiedItemIndicator": "#4d9375",
    "sideBar.background": "#121212",
    "sideBar.border": "#191919",
    "sideBar.foreground": "#bfbaaa",
    "sideBarSectionHeader.background": "#121212",
    "sideBarSectionHeader.border": "#191919",
    "sideBarSectionHeader.foreground": "#dbd7caee",
    "sideBarTitle.foreground": "#dbd7caee",
    "statusBar.background": "#121212",
    "statusBar.border": "#191919",
    "statusBar.debuggingBackground": "#181818",
    "statusBar.debuggingForeground": "#bfbaaa",
    "statusBar.foreground": "#bfbaaa",
    "statusBar.noFolderBackground": "#121212",
    "statusBarItem.prominentBackground": "#181818",
    "tab.activeBackground": "#121212",
    "tab.activeBorder": "#191919",
    "tab.activeBorderTop": "#dedcd590",
    "tab.activeForeground": "#dbd7caee",
    "tab.border": "#191919",
    "tab.hoverBackground": "#181818",
    "tab.inactiveBackground": "#121212",
    "tab.inactiveForeground": "#959da5",
    "tab.unfocusedActiveBorder": "#191919",
    "tab.unfocusedActiveBorderTop": "#191919",
    "tab.unfocusedHoverBackground": "#121212",
    "terminal.ansiBlack": "#393a34",
    "terminal.ansiBlue": "#6394bf",
    "terminal.ansiBrightBlack": "#777777",
    "terminal.ansiBrightBlue": "#6394bf",
    "terminal.ansiBrightCyan": "#5eaab5",
    "terminal.ansiBrightGreen": "#4d9375",
    "terminal.ansiBrightMagenta": "#d9739f",
    "terminal.ansiBrightRed": "#cb7676",
    "terminal.ansiBrightWhite": "#ffffff",
    "terminal.ansiBrightYellow": "#e6cc77",
    "terminal.ansiCyan": "#5eaab5",
    "terminal.ansiGreen": "#4d9375",
    "terminal.ansiMagenta": "#d9739f",
    "terminal.ansiRed": "#cb7676",
    "terminal.ansiWhite": "#dbd7ca",
    "terminal.ansiYellow": "#e6cc77",
    "terminal.foreground": "#dbd7caee",
    "terminal.selectionBackground": "#eeeeee18",
    "textBlockQuote.background": "#121212",
    "textBlockQuote.border": "#191919",
    "textCodeBlock.background": "#121212",
    "textLink.activeForeground": "#4d9375",
    "textLink.foreground": "#4d9375",
    "textPreformat.foreground": "#d1d5da",
    "textSeparator.foreground": "#586069",
    "titleBar.activeBackground": "#121212",
    "titleBar.activeForeground": "#bfbaaa",
    "titleBar.border": "#181818",
    "titleBar.inactiveBackground": "#121212",
    "titleBar.inactiveForeground": "#959da5",
    "tree.indentGuidesStroke": "#2f363d",
    "welcomePage.buttonBackground": "#2f363d",
    "welcomePage.buttonHoverBackground": "#444d56"
  },
  displayName: "Vitesse Dark",
  name: "vitesse-dark",
  semanticHighlighting: true,
  semanticTokenColors: {
    class: "#6872ab",
    interface: "#5d99a9",
    namespace: "#db889a",
    property: "#b8a965",
    type: "#5d99a9"
  },
  tokenColors: [
    {
      scope: [
        "comment",
        "punctuation.definition.comment",
        "string.comment"
      ],
      settings: {
        foreground: "#758575dd"
      }
    },
    {
      scope: [
        "delimiter.bracket",
        "delimiter",
        "invalid.illegal.character-not-allowed-here.html",
        "keyword.operator.rest",
        "keyword.operator.spread",
        "keyword.operator.type.annotation",
        "keyword.operator.relational",
        "keyword.operator.assignment",
        "keyword.operator.type",
        "meta.brace",
        "meta.tag.block.any.html",
        "meta.tag.inline.any.html",
        "meta.tag.structure.input.void.html",
        "meta.type.annotation",
        "meta.embedded.block.github-actions-expression",
        "storage.type.function.arrow",
        "meta.objectliteral.ts",
        "punctuation",
        "punctuation.definition.string.begin.html.vue",
        "punctuation.definition.string.end.html.vue"
      ],
      settings: {
        foreground: "#666666"
      }
    },
    {
      scope: [
        "constant",
        "entity.name.constant",
        "variable.language",
        "meta.definition.variable"
      ],
      settings: {
        foreground: "#c99076"
      }
    },
    {
      scope: [
        "entity",
        "entity.name"
      ],
      settings: {
        foreground: "#80a665"
      }
    },
    {
      scope: "variable.parameter.function",
      settings: {
        foreground: "#dbd7caee"
      }
    },
    {
      scope: [
        "entity.name.tag",
        "tag.html"
      ],
      settings: {
        foreground: "#4d9375"
      }
    },
    {
      scope: "entity.name.function",
      settings: {
        foreground: "#80a665"
      }
    },
    {
      scope: [
        "keyword",
        "storage.type.class.jsdoc",
        "punctuation.definition.template-expression"
      ],
      settings: {
        foreground: "#4d9375"
      }
    },
    {
      scope: [
        "storage",
        "storage.type",
        "support.type.builtin",
        "constant.language.undefined",
        "constant.language.null",
        "constant.language.import-export-all.ts"
      ],
      settings: {
        foreground: "#cb7676"
      }
    },
    {
      scope: [
        "text.html.derivative",
        "storage.modifier.package",
        "storage.modifier.import",
        "storage.type.java"
      ],
      settings: {
        foreground: "#dbd7caee"
      }
    },
    {
      scope: [
        "string",
        "string punctuation.section.embedded source",
        "attribute.value"
      ],
      settings: {
        foreground: "#c98a7d"
      }
    },
    {
      scope: [
        "punctuation.definition.string"
      ],
      settings: {
        foreground: "#c98a7d77"
      }
    },
    {
      scope: [
        "punctuation.support.type.property-name"
      ],
      settings: {
        foreground: "#b8a96577"
      }
    },
    {
      scope: "support",
      settings: {
        foreground: "#b8a965"
      }
    },
    {
      scope: [
        "property",
        "meta.property-name",
        "meta.object-literal.key",
        "entity.name.tag.yaml",
        "attribute.name"
      ],
      settings: {
        foreground: "#b8a965"
      }
    },
    {
      scope: [
        "entity.other.attribute-name",
        "invalid.deprecated.entity.other.attribute-name.html"
      ],
      settings: {
        foreground: "#bd976a"
      }
    },
    {
      scope: [
        "variable",
        "identifier"
      ],
      settings: {
        foreground: "#bd976a"
      }
    },
    {
      scope: [
        "support.type.primitive",
        "entity.name.type"
      ],
      settings: {
        foreground: "#5DA994"
      }
    },
    {
      scope: "namespace",
      settings: {
        foreground: "#db889a"
      }
    },
    {
      scope: [
        "keyword.operator",
        "keyword.operator.assignment.compound",
        "meta.var.expr.ts"
      ],
      settings: {
        foreground: "#cb7676"
      }
    },
    {
      scope: "invalid.broken",
      settings: {
        fontStyle: "italic",
        foreground: "#fdaeb7"
      }
    },
    {
      scope: "invalid.deprecated",
      settings: {
        fontStyle: "italic",
        foreground: "#fdaeb7"
      }
    },
    {
      scope: "invalid.illegal",
      settings: {
        fontStyle: "italic",
        foreground: "#fdaeb7"
      }
    },
    {
      scope: "invalid.unimplemented",
      settings: {
        fontStyle: "italic",
        foreground: "#fdaeb7"
      }
    },
    {
      scope: "carriage-return",
      settings: {
        background: "#f97583",
        content: "^M",
        fontStyle: "italic underline",
        foreground: "#24292e"
      }
    },
    {
      scope: "message.error",
      settings: {
        foreground: "#fdaeb7"
      }
    },
    {
      scope: "string variable",
      settings: {
        foreground: "#c98a7d"
      }
    },
    {
      scope: [
        "source.regexp",
        "string.regexp"
      ],
      settings: {
        foreground: "#c4704f"
      }
    },
    {
      scope: [
        "string.regexp.character-class",
        "string.regexp constant.character.escape",
        "string.regexp source.ruby.embedded",
        "string.regexp string.regexp.arbitrary-repitition"
      ],
      settings: {
        foreground: "#c98a7d"
      }
    },
    {
      scope: "string.regexp constant.character.escape",
      settings: {
        foreground: "#e6cc77"
      }
    },
    {
      scope: [
        "support.constant"
      ],
      settings: {
        foreground: "#c99076"
      }
    },
    {
      scope: [
        "keyword.operator.quantifier.regexp",
        "constant.numeric",
        "number"
      ],
      settings: {
        foreground: "#4C9A91"
      }
    },
    {
      scope: [
        "keyword.other.unit"
      ],
      settings: {
        foreground: "#cb7676"
      }
    },
    {
      scope: [
        "constant.language.boolean",
        "constant.language"
      ],
      settings: {
        foreground: "#4d9375"
      }
    },
    {
      scope: "meta.module-reference",
      settings: {
        foreground: "#4d9375"
      }
    },
    {
      scope: "punctuation.definition.list.begin.markdown",
      settings: {
        foreground: "#d4976c"
      }
    },
    {
      scope: [
        "markup.heading",
        "markup.heading entity.name"
      ],
      settings: {
        fontStyle: "bold",
        foreground: "#4d9375"
      }
    },
    {
      scope: "markup.quote",
      settings: {
        foreground: "#5d99a9"
      }
    },
    {
      scope: "markup.italic",
      settings: {
        fontStyle: "italic",
        foreground: "#dbd7caee"
      }
    },
    {
      scope: "markup.bold",
      settings: {
        fontStyle: "bold",
        foreground: "#dbd7caee"
      }
    },
    {
      scope: "markup.raw",
      settings: {
        foreground: "#4d9375"
      }
    },
    {
      scope: [
        "markup.deleted",
        "meta.diff.header.from-file",
        "punctuation.definition.deleted"
      ],
      settings: {
        background: "#86181d",
        foreground: "#fdaeb7"
      }
    },
    {
      scope: [
        "markup.inserted",
        "meta.diff.header.to-file",
        "punctuation.definition.inserted"
      ],
      settings: {
        background: "#144620",
        foreground: "#85e89d"
      }
    },
    {
      scope: [
        "markup.changed",
        "punctuation.definition.changed"
      ],
      settings: {
        background: "#c24e00",
        foreground: "#ffab70"
      }
    },
    {
      scope: [
        "markup.ignored",
        "markup.untracked"
      ],
      settings: {
        background: "#79b8ff",
        foreground: "#2f363d"
      }
    },
    {
      scope: "meta.diff.range",
      settings: {
        fontStyle: "bold",
        foreground: "#b392f0"
      }
    },
    {
      scope: "meta.diff.header",
      settings: {
        foreground: "#79b8ff"
      }
    },
    {
      scope: "meta.separator",
      settings: {
        fontStyle: "bold",
        foreground: "#79b8ff"
      }
    },
    {
      scope: "meta.output",
      settings: {
        foreground: "#79b8ff"
      }
    },
    {
      scope: [
        "brackethighlighter.tag",
        "brackethighlighter.curly",
        "brackethighlighter.round",
        "brackethighlighter.square",
        "brackethighlighter.angle",
        "brackethighlighter.quote"
      ],
      settings: {
        foreground: "#d1d5da"
      }
    },
    {
      scope: "brackethighlighter.unmatched",
      settings: {
        foreground: "#fdaeb7"
      }
    },
    {
      scope: [
        "constant.other.reference.link",
        "string.other.link",
        "punctuation.definition.string.begin.markdown",
        "punctuation.definition.string.end.markdown"
      ],
      settings: {
        foreground: "#c98a7d"
      }
    },
    {
      scope: [
        "markup.underline.link.markdown",
        "markup.underline.link.image.markdown"
      ],
      settings: {
        fontStyle: "underline",
        foreground: "#dedcd590"
      }
    },
    {
      scope: [
        "type.identifier",
        "constant.other.character-class.regexp"
      ],
      settings: {
        foreground: "#6872ab"
      }
    },
    {
      scope: [
        "entity.other.attribute-name.html.vue"
      ],
      settings: {
        foreground: "#80a665"
      }
    },
    {
      scope: [
        "invalid.illegal.unrecognized-tag.html"
      ],
      settings: {
        fontStyle: "normal"
      }
    }
  ],
  type: "dark"
};
var html_default = {
  displayName: "HTML",
  injections: {
    "R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)": {
      patterns: [
        {
          match: "<",
          name: "invalid.illegal.bad-angle-bracket.html"
        }
      ]
    }
  },
  name: "html",
  patterns: [
    {
      include: "#xml-processing"
    },
    {
      include: "#comment"
    },
    {
      include: "#doctype"
    },
    {
      include: "#cdata"
    },
    {
      include: "#tags-valid"
    },
    {
      include: "#tags-invalid"
    },
    {
      include: "#entities"
    }
  ],
  repository: {
    attribute: {
      patterns: [
        {
          begin: "(s(hape|cope|t(ep|art)|ize(s)?|p(ellcheck|an)|elected|lot|andbox|rc(set|doc|lang)?)|h(ttp-equiv|i(dden|gh)|e(ight|aders)|ref(lang)?)|n(o(nce|validate|module)|ame)|c(h(ecked|arset)|ite|o(nt(ent(editable)?|rols)|ords|l(s(pan)?|or))|lass|rossorigin)|t(ype(mustmatch)?|itle|a(rget|bindex)|ranslate)|i(s(map)?|n(tegrity|putmode)|tem(scope|type|id|prop|ref)|d)|op(timum|en)|d(i(sabled|r(name)?)|ownload|e(coding|f(er|ault))|at(etime|a)|raggable)|usemap|p(ing|oster|la(ysinline|ceholder)|attern|reload)|enctype|value|kind|for(m(novalidate|target|enctype|action|method)?)?|w(idth|rap)|l(ist|o(op|w)|a(ng|bel))|a(s(ync)?|c(ce(sskey|pt(-charset)?)|tion)|uto(c(omplete|apitalize)|play|focus)|l(t|low(usermedia|paymentrequest|fullscreen))|bbr)|r(ows(pan)?|e(versed|quired|ferrerpolicy|l|adonly))|m(in(length)?|u(ted|ltiple)|e(thod|dia)|a(nifest|x(length)?)))(?![-:\\w])",
          beginCaptures: {
            "0": {
              name: "entity.other.attribute-name.html"
            }
          },
          end: "(?=\\s*+[^=\\s])",
          name: "meta.attribute.$1.html",
          patterns: [
            {
              include: "#attribute-interior"
            }
          ]
        },
        {
          begin: "style(?![-:\\w])",
          beginCaptures: {
            "0": {
              name: "entity.other.attribute-name.html"
            }
          },
          end: "(?=\\s*+[^=\\s])",
          name: "meta.attribute.style.html",
          patterns: [
            {
              begin: "=",
              beginCaptures: {
                "0": {
                  name: "punctuation.separator.key-value.html"
                }
              },
              end: "(?<=[^=\\s])(?!\\s*=)|(?=/?>)",
              patterns: [
                {
                  begin: "(?=[^/<=>`\\s]|/(?!>))",
                  end: "(?!\\G)",
                  name: "meta.embedded.line.css",
                  patterns: [
                    {
                      captures: {
                        "0": {
                          name: "source.css"
                        }
                      },
                      match: "([^\"'/<=>`\\s]|/(?!>))+",
                      name: "string.unquoted.html"
                    },
                    {
                      begin: '"',
                      beginCaptures: {
                        "0": {
                          name: "punctuation.definition.string.begin.html"
                        }
                      },
                      contentName: "source.css",
                      end: '(")',
                      endCaptures: {
                        "0": {
                          name: "punctuation.definition.string.end.html"
                        },
                        "1": {
                          name: "source.css"
                        }
                      },
                      name: "string.quoted.double.html",
                      patterns: [
                        {
                          include: "#entities"
                        }
                      ]
                    },
                    {
                      begin: "'",
                      beginCaptures: {
                        "0": {
                          name: "punctuation.definition.string.begin.html"
                        }
                      },
                      contentName: "source.css",
                      end: "(')",
                      endCaptures: {
                        "0": {
                          name: "punctuation.definition.string.end.html"
                        },
                        "1": {
                          name: "source.css"
                        }
                      },
                      name: "string.quoted.single.html",
                      patterns: [
                        {
                          include: "#entities"
                        }
                      ]
                    }
                  ]
                },
                {
                  match: "=",
                  name: "invalid.illegal.unexpected-equals-sign.html"
                }
              ]
            }
          ]
        },
        {
          begin: "on(s(croll|t(orage|alled)|u(spend|bmit)|e(curitypolicyviolation|ek(ing|ed)|lect))|hashchange|c(hange|o(ntextmenu|py)|u(t|echange)|l(ick|ose)|an(cel|play(through)?))|t(imeupdate|oggle)|in(put|valid)|o((?:n|ff)line)|d(urationchange|r(op|ag(start|over|e(n(ter|d)|xit)|leave)?)|blclick)|un(handledrejection|load)|p(opstate|lay(ing)?|a(ste|use|ge(show|hide))|rogress)|e(nded|rror|mptied)|volumechange|key(down|up|press)|focus|w(heel|aiting)|l(oad(start|e(nd|d((?:|meta)data)))?|anguagechange)|a(uxclick|fterprint|bort)|r(e(s(ize|et)|jectionhandled)|atechange)|m(ouse(o(ut|ver)|down|up|enter|leave|move)|essage(error)?)|b(efore(unload|print)|lur))(?![-:\\w])",
          beginCaptures: {
            "0": {
              name: "entity.other.attribute-name.html"
            }
          },
          end: "(?=\\s*+[^=\\s])",
          name: "meta.attribute.event-handler.$1.html",
          patterns: [
            {
              begin: "=",
              beginCaptures: {
                "0": {
                  name: "punctuation.separator.key-value.html"
                }
              },
              end: "(?<=[^=\\s])(?!\\s*=)|(?=/?>)",
              patterns: [
                {
                  begin: "(?=[^/<=>`\\s]|/(?!>))",
                  end: "(?!\\G)",
                  name: "meta.embedded.line.js",
                  patterns: [
                    {
                      captures: {
                        "0": {
                          name: "source.js"
                        },
                        "1": {
                          patterns: [
                            {
                              include: "source.js"
                            }
                          ]
                        }
                      },
                      match: "(([^\"'/<=>`\\s]|/(?!>))+)",
                      name: "string.unquoted.html"
                    },
                    {
                      begin: '"',
                      beginCaptures: {
                        "0": {
                          name: "punctuation.definition.string.begin.html"
                        }
                      },
                      contentName: "source.js",
                      end: '(")',
                      endCaptures: {
                        "0": {
                          name: "punctuation.definition.string.end.html"
                        },
                        "1": {
                          name: "source.js"
                        }
                      },
                      name: "string.quoted.double.html",
                      patterns: [
                        {
                          captures: {
                            "0": {
                              patterns: [
                                {
                                  include: "source.js"
                                }
                              ]
                            }
                          },
                          match: '([^\\n"/]|/(?![*/]))+'
                        },
                        {
                          begin: "//",
                          beginCaptures: {
                            "0": {
                              name: "punctuation.definition.comment.js"
                            }
                          },
                          end: '(?=")|\\n',
                          name: "comment.line.double-slash.js"
                        },
                        {
                          begin: "/\\*",
                          beginCaptures: {
                            "0": {
                              name: "punctuation.definition.comment.begin.js"
                            }
                          },
                          end: '(?=")|\\*/',
                          endCaptures: {
                            "0": {
                              name: "punctuation.definition.comment.end.js"
                            }
                          },
                          name: "comment.block.js"
                        }
                      ]
                    },
                    {
                      begin: "'",
                      beginCaptures: {
                        "0": {
                          name: "punctuation.definition.string.begin.html"
                        }
                      },
                      contentName: "source.js",
                      end: "(')",
                      endCaptures: {
                        "0": {
                          name: "punctuation.definition.string.end.html"
                        },
                        "1": {
                          name: "source.js"
                        }
                      },
                      name: "string.quoted.single.html",
                      patterns: [
                        {
                          captures: {
                            "0": {
                              patterns: [
                                {
                                  include: "source.js"
                                }
                              ]
                            }
                          },
                          match: "([^\\n'/]|/(?![*/]))+"
                        },
                        {
                          begin: "//",
                          beginCaptures: {
                            "0": {
                              name: "punctuation.definition.comment.js"
                            }
                          },
                          end: "(?=')|\\n",
                          name: "comment.line.double-slash.js"
                        },
                        {
                          begin: "/\\*",
                          beginCaptures: {
                            "0": {
                              name: "punctuation.definition.comment.begin.js"
                            }
                          },
                          end: "(?=')|\\*/",
                          endCaptures: {
                            "0": {
                              name: "punctuation.definition.comment.end.js"
                            }
                          },
                          name: "comment.block.js"
                        }
                      ]
                    }
                  ]
                },
                {
                  match: "=",
                  name: "invalid.illegal.unexpected-equals-sign.html"
                }
              ]
            }
          ]
        },
        {
          begin: "(data-[-a-z]+)(?![-:\\w])",
          beginCaptures: {
            "0": {
              name: "entity.other.attribute-name.html"
            }
          },
          end: "(?=\\s*+[^=\\s])",
          name: "meta.attribute.data-x.$1.html",
          patterns: [
            {
              include: "#attribute-interior"
            }
          ]
        },
        {
          begin: "(align|bgcolor|border)(?![-:\\w])",
          beginCaptures: {
            "0": {
              name: "invalid.deprecated.entity.other.attribute-name.html"
            }
          },
          end: "(?=\\s*+[^=\\s])",
          name: "meta.attribute.$1.html",
          patterns: [
            {
              include: "#attribute-interior"
            }
          ]
        },
        {
          begin: `([^\\x00- "'/<=>\\x7F-\\x{9F}\uFDD0-\uFDEF\uFFFE\uFFFF\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\\x{4FFFE}\\x{4FFFF}\\x{5FFFE}\\x{5FFFF}\\x{6FFFE}\\x{6FFFF}\\x{7FFFE}\\x{7FFFF}\\x{8FFFE}\\x{8FFFF}\\x{9FFFE}\\x{9FFFF}\\x{AFFFE}\\x{AFFFF}\\x{BFFFE}\\x{BFFFF}\\x{CFFFE}\\x{CFFFF}\\x{DFFFE}\\x{DFFFF}\\x{EFFFE}\\x{EFFFF}\\x{FFFFE}\\x{FFFFF}\\x{10FFFE}\\x{10FFFF}]+)`,
          beginCaptures: {
            "0": {
              name: "entity.other.attribute-name.html"
            }
          },
          end: "(?=\\s*+[^=\\s])",
          name: "meta.attribute.unrecognized.$1.html",
          patterns: [
            {
              include: "#attribute-interior"
            }
          ]
        },
        {
          match: "[^>\\s]+",
          name: "invalid.illegal.character-not-allowed-here.html"
        }
      ]
    },
    "attribute-interior": {
      patterns: [
        {
          begin: "=",
          beginCaptures: {
            "0": {
              name: "punctuation.separator.key-value.html"
            }
          },
          end: "(?<=[^=\\s])(?!\\s*=)|(?=/?>)",
          patterns: [
            {
              match: "([^\"'/<=>`\\s]|/(?!>))+",
              name: "string.unquoted.html"
            },
            {
              begin: '"',
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.html"
                }
              },
              end: '"',
              endCaptures: {
                "0": {
                  name: "punctuation.definition.string.end.html"
                }
              },
              name: "string.quoted.double.html",
              patterns: [
                {
                  include: "#entities"
                }
              ]
            },
            {
              begin: "'",
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.html"
                }
              },
              end: "'",
              endCaptures: {
                "0": {
                  name: "punctuation.definition.string.end.html"
                }
              },
              name: "string.quoted.single.html",
              patterns: [
                {
                  include: "#entities"
                }
              ]
            },
            {
              match: "=",
              name: "invalid.illegal.unexpected-equals-sign.html"
            }
          ]
        }
      ]
    },
    cdata: {
      begin: "<!\\[CDATA\\[",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.tag.begin.html"
        }
      },
      contentName: "string.other.inline-data.html",
      end: "]]>",
      endCaptures: {
        "0": {
          name: "punctuation.definition.tag.end.html"
        }
      },
      name: "meta.tag.metadata.cdata.html"
    },
    comment: {
      begin: "<!--",
      captures: {
        "0": {
          name: "punctuation.definition.comment.html"
        }
      },
      end: "-->",
      name: "comment.block.html",
      patterns: [
        {
          match: "\\G-?>",
          name: "invalid.illegal.characters-not-allowed-here.html"
        },
        {
          match: "<!-(?:-(?!>)|(?=-->))",
          name: "invalid.illegal.characters-not-allowed-here.html"
        },
        {
          match: "--!>",
          name: "invalid.illegal.characters-not-allowed-here.html"
        }
      ]
    },
    "core-minus-invalid": {
      patterns: [
        {
          include: "#xml-processing"
        },
        {
          include: "#comment"
        },
        {
          include: "#doctype"
        },
        {
          include: "#cdata"
        },
        {
          include: "#tags-valid"
        },
        {
          include: "#entities"
        }
      ]
    },
    doctype: {
      begin: "<!(?=(?i:DOCTYPE\\s))",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.tag.begin.html"
        }
      },
      end: ">",
      endCaptures: {
        "0": {
          name: "punctuation.definition.tag.end.html"
        }
      },
      name: "meta.tag.metadata.doctype.html",
      patterns: [
        {
          match: "\\G(?i:DOCTYPE)",
          name: "entity.name.tag.html"
        },
        {
          begin: '"',
          end: '"',
          name: "string.quoted.double.html"
        },
        {
          match: "[^>\\s]+",
          name: "entity.other.attribute-name.html"
        }
      ]
    },
    entities: {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.html"
            },
            "912": {
              name: "punctuation.definition.entity.html"
            }
          },
          match: "(&)(?=[A-Za-z])((a(s(ymp(eq)?|cr|t)|n(d(slope|[dv]|and)?|g(s(t|ph)|zarr|e|le|rt(vb(d)?)?|msd(a([a-h]))?)?)|c(y|irc|d|ute|E)?|tilde|o(pf|gon)|uml|p(id|os|prox(eq)?|[Ee]|acir)?|elig|f(r)?|w((?:con|)int)|l(pha|e(ph|fsym))|acute|ring|grave|m(p|a(cr|lg))|breve)|A(s(sign|cr)|nd|MP|c(y|irc)|tilde|o(pf|gon)|uml|pplyFunction|fr|Elig|lpha|acute|ring|grave|macr|breve))|(B(scr|cy|opf|umpeq|e(cause|ta|rnoullis)|fr|a(ckslash|r(v|wed))|reve)|b(s(cr|im(e)?|ol(hsub|b)?|emi)|n(ot|e(quiv)?)|c(y|ong)|ig(s(tar|qcup)|c(irc|up|ap)|triangle(down|up)|o(times|dot|plus)|uplus|vee|wedge)|o(t(tom)?|pf|wtie|x(h([DUdu])?|times|H([DUdu])?|d([LRlr])|u([LRlr])|plus|D([LRlr])|v([HLRhlr])?|U([LRlr])|V([HLRhlr])?|minus|box))|Not|dquo|u(ll(et)?|mp(e(q)?|E)?)|prime|e(caus(e)?|t(h|ween|a)|psi|rnou|mptyv)|karow|fr|l(ock|k(1([24])|34)|a(nk|ck(square|triangle(down|left|right)?|lozenge)))|a(ck(sim(eq)?|cong|prime|epsilon)|r(vee|wed(ge)?))|r(eve|vbar)|brk(tbrk)?))|(c(s(cr|u(p(e)?|b(e)?))|h(cy|i|eck(mark)?)|ylcty|c(irc|ups(sm)?|edil|a(ps|ron))|tdot|ir(scir|c(eq|le(d(R|circ|S|dash|ast)|arrow(left|right)))?|e|fnint|E|mid)?|o(n(int|g(dot)?)|p(y(sr)?|f|rod)|lon(e(q)?)?|m(p(fn|le(xes|ment))?|ma(t)?))|dot|u(darr([lr])|p(s|c([au]p)|or|dot|brcap)?|e(sc|pr)|vee|wed|larr(p)?|r(vearrow(left|right)|ly(eq(succ|prec)|vee|wedge)|arr(m)?|ren))|e(nt(erdot)?|dil|mptyv)|fr|w((?:con|)int)|lubs(uit)?|a(cute|p(s|c([au]p)|dot|and|brcup)?|r(on|et))|r(oss|arr))|C(scr|hi|c(irc|onint|edil|aron)|ircle(Minus|Times|Dot|Plus)|Hcy|o(n(tourIntegral|int|gruent)|unterClockwiseContourIntegral|p(f|roduct)|lon(e)?)|dot|up(Cap)?|OPY|e(nterDot|dilla)|fr|lo(seCurly((?:Double|)Quote)|ckwiseContourIntegral)|a(yleys|cute|p(italDifferentialD)?)|ross))|(d(s(c([ry])|trok|ol)|har([lr])|c(y|aron)|t(dot|ri(f)?)|i(sin|e|v(ide(ontimes)?|onx)?|am(s|ond(suit)?)?|gamma)|Har|z(cy|igrarr)|o(t(square|plus|eq(dot)?|minus)?|ublebarwedge|pf|wn(harpoon(left|right)|downarrows|arrow)|llar)|d(otseq|a(rr|gger))?|u(har|arr)|jcy|e(lta|g|mptyv)|f(isht|r)|wangle|lc(orn|rop)|a(sh(v)?|leth|rr|gger)|r(c(orn|rop)|bkarow)|b(karow|lac)|Arr)|D(s(cr|trok)|c(y|aron)|Scy|i(fferentialD|a(critical(Grave|Tilde|Do(t|ubleAcute)|Acute)|mond))|o(t(Dot|Equal)?|uble(Right(Tee|Arrow)|ContourIntegral|Do(t|wnArrow)|Up((?:Down|)Arrow)|VerticalBar|L(ong(RightArrow|Left((?:Right|)Arrow))|eft(RightArrow|Tee|Arrow)))|pf|wn(Right(TeeVector|Vector(Bar)?)|Breve|Tee(Arrow)?|arrow|Left(RightVector|TeeVector|Vector(Bar)?)|Arrow(Bar|UpArrow)?))|Zcy|el(ta)?|D(otrahd)?|Jcy|fr|a(shv|rr|gger)))|(e(s(cr|im|dot)|n(sp|g)|c(y|ir(c)?|olon|aron)|t([ah])|o(pf|gon)|dot|u(ro|ml)|p(si(v|lon)?|lus|ar(sl)?)|e|D(D??ot)|q(s(im|lant(less|gtr))|c(irc|olon)|u(iv(DD)?|est|als)|vparsl)|f(Dot|r)|l(s(dot)?|inters|l)?|a(ster|cute)|r(Dot|arr)|g(s(dot)?|rave)?|x(cl|ist|p(onentiale|ectation))|m(sp(1([34]))?|pty(set|v)?|acr))|E(s(cr|im)|c(y|irc|aron)|ta|o(pf|gon)|NG|dot|uml|TH|psilon|qu(ilibrium|al(Tilde)?)|fr|lement|acute|grave|x(ists|ponentialE)|m(pty((?:|Very)SmallSquare)|acr)))|(f(scr|nof|cy|ilig|o(pf|r(k(v)?|all))|jlig|partint|emale|f(ilig|l(l??ig)|r)|l(tns|lig|at)|allingdotseq|r(own|a(sl|c(1([2-68])|78|2([35])|3([458])|45|5([68])))))|F(scr|cy|illed((?:|Very)SmallSquare)|o(uriertrf|pf|rAll)|fr))|(G(scr|c(y|irc|edil)|t|opf|dot|T|Jcy|fr|amma(d)?|reater(Greater|SlantEqual|Tilde|Equal(Less)?|FullEqual|Less)|g|breve)|g(s(cr|im([el])?)|n(sim|e(q(q)?)?|E|ap(prox)?)|c(y|irc)|t(c(c|ir)|dot|quest|lPar|r(sim|dot|eq(q?less)|less|a(pprox|rr)))?|imel|opf|dot|jcy|e(s(cc|dot(o(l)?)?|l(es)?)?|q(slant|q)?|l)?|v(nE|ertneqq)|fr|E(l)?|l([Eaj])?|a(cute|p|mma(d)?)|rave|g(g)?|breve))|(h(s(cr|trok|lash)|y(phen|bull)|circ|o(ok((?:lef|righ)tarrow)|pf|arr|rbar|mtht)|e(llip|arts(uit)?|rcon)|ks([ew]arow)|fr|a(irsp|lf|r(dcy|r(cir|w)?)|milt)|bar|Arr)|H(s(cr|trok)|circ|ilbertSpace|o(pf|rizontalLine)|ump(DownHump|Equal)|fr|a(cek|t)|ARDcy))|(i(s(cr|in(s(v)?|dot|[Ev])?)|n(care|t(cal|prod|e(rcal|gers)|larhk)?|odot|fin(tie)?)?|c(y|irc)?|t(ilde)?|i(nfin|i(i??nt)|ota)?|o(cy|ta|pf|gon)|u(kcy|ml)|jlig|prod|e(cy|xcl)|quest|f([fr])|acute|grave|m(of|ped|a(cr|th|g(part|e|line))))|I(scr|n(t(e(rsection|gral))?|visible(Comma|Times))|c(y|irc)|tilde|o(ta|pf|gon)|dot|u(kcy|ml)|Ocy|Jlig|fr|Ecy|acute|grave|m(plies|a(cr|ginaryI))?))|(j(s(cr|ercy)|c(y|irc)|opf|ukcy|fr|math)|J(s(cr|ercy)|c(y|irc)|opf|ukcy|fr))|(k(scr|hcy|c(y|edil)|opf|jcy|fr|appa(v)?|green)|K(scr|c(y|edil)|Hcy|opf|Jcy|fr|appa))|(l(s(h|cr|trok|im([eg])?|q(uo(r)?|b)|aquo)|h(ar(d|u(l)?)|blk)|n(sim|e(q(q)?)?|E|ap(prox)?)|c(y|ub|e(d??il)|aron)|Barr|t(hree|c(c|ir)|imes|dot|quest|larr|r(i([ef])?|Par))?|Har|o(ng(left((?:|right)arrow)|rightarrow|mapsto)|times|z(enge|f)?|oparrow(left|right)|p(f|lus|ar)|w(ast|bar)|a(ng|rr)|brk)|d(sh|ca|quo(r)?|r((?:d|us)har))|ur((?:ds|u)har)|jcy|par(lt)?|e(s(s(sim|dot|eq(q?gtr)|approx|gtr)|cc|dot(o(r)?)?|g(es)?)?|q(slant|q)?|ft(harpoon(down|up)|threetimes|leftarrows|arrow(tail)?|right(squigarrow|harpoons|arrow(s)?))|g)?|v(nE|ertneqq)|f(isht|loor|r)|E(g)?|l(hard|corner|tri|arr)?|a(ng(d|le)?|cute|t(e(s)?|ail)?|p|emptyv|quo|rr(sim|hk|tl|pl|fs|lp|b(fs)?)?|gran|mbda)|r(har(d)?|corner|tri|arr|m)|g(E)?|m(idot|oust(ache)?)|b(arr|r(k(sl([du])|e)|ac([ek]))|brk)|A(tail|arr|rr))|L(s(h|cr|trok)|c(y|edil|aron)|t|o(ng(RightArrow|left((?:|right)arrow)|rightarrow|Left((?:Right|)Arrow))|pf|wer((?:Righ|Lef)tArrow))|T|e(ss(Greater|SlantEqual|Tilde|EqualGreater|FullEqual|Less)|ft(Right(Vector|Arrow)|Ceiling|T(ee(Vector|Arrow)?|riangle(Bar|Equal)?)|Do(ubleBracket|wn(TeeVector|Vector(Bar)?))|Up(TeeVector|DownVector|Vector(Bar)?)|Vector(Bar)?|arrow|rightarrow|Floor|A(ngleBracket|rrow(RightArrow|Bar)?)))|Jcy|fr|l(eftarrow)?|a(ng|cute|placetrf|rr|mbda)|midot))|(M(scr|cy|inusPlus|opf|u|e(diumSpace|llintrf)|fr|ap)|m(s(cr|tpos)|ho|nplus|c(y|omma)|i(nus(d(u)?|b)?|cro|d(cir|dot|ast)?)|o(dels|pf)|dash|u((?:lti|)map)?|p|easuredangle|DDot|fr|l(cp|dr)|a(cr|p(sto(down|up|left)?)?|l(t(ese)?|e)|rker)))|(n(s(hort(parallel|mid)|c(cue|[er])?|im(e(q)?)?|u(cc(eq)?|p(set(eq(q)?)?|[Ee])?|b(set(eq(q)?)?|[Ee])?)|par|qsu([bp]e)|mid)|Rightarrow|h(par|arr|Arr)|G(t(v)?|g)|c(y|ong(dot)?|up|edil|a(p|ron))|t(ilde|lg|riangle(left(eq)?|right(eq)?)|gl)|i(s(d)?|v)?|o(t(ni(v([abc]))?|in(dot|v([abc])|E)?)?|pf)|dash|u(m(sp|ero)?)?|jcy|p(olint|ar(sl|t|allel)?|r(cue|e(c(eq)?)?)?)|e(s(im|ear)|dot|quiv|ar(hk|r(ow)?)|xist(s)?|Arr)?|v(sim|infin|Harr|dash|Dash|l(t(rie)?|e|Arr)|ap|r(trie|Arr)|g([et]))|fr|w(near|ar(hk|r(ow)?)|Arr)|V([Dd]ash)|l(sim|t(ri(e)?)?|dr|e(s(s)?|q(slant|q)?|ft((?:|right)arrow))?|E|arr|Arr)|a(ng|cute|tur(al(s)?)?|p(id|os|prox|E)?|bla)|r(tri(e)?|ightarrow|arr([cw])?|Arr)|g(sim|t(r)?|e(s|q(slant|q)?)?|E)|mid|L(t(v)?|eft((?:|right)arrow)|l)|b(sp|ump(e)?))|N(scr|c(y|edil|aron)|tilde|o(nBreakingSpace|Break|t(R(ightTriangle(Bar|Equal)?|everseElement)|Greater(Greater|SlantEqual|Tilde|Equal|FullEqual|Less)?|S(u(cceeds(SlantEqual|Tilde|Equal)?|perset(Equal)?|bset(Equal)?)|quareSu(perset(Equal)?|bset(Equal)?))|Hump(DownHump|Equal)|Nested(GreaterGreater|LessLess)|C(ongruent|upCap)|Tilde(Tilde|Equal|FullEqual)?|DoubleVerticalBar|Precedes((?:Slant|)Equal)?|E(qual(Tilde)?|lement|xists)|VerticalBar|Le(ss(Greater|SlantEqual|Tilde|Equal|Less)?|ftTriangle(Bar|Equal)?))?|pf)|u|e(sted(GreaterGreater|LessLess)|wLine|gative(MediumSpace|Thi((?:n|ck)Space)|VeryThinSpace))|Jcy|fr|acute))|(o(s(cr|ol|lash)|h(m|bar)|c(y|ir(c)?)|ti(lde|mes(as)?)|S|int|opf|d(sold|iv|ot|ash|blac)|uml|p(erp|lus|ar)|elig|vbar|f(cir|r)|l(c(ir|ross)|t|ine|arr)|a(st|cute)|r(slope|igof|or|d(er(of)?|[fm])?|v|arr)?|g(t|on|rave)|m(i(nus|cron|d)|ega|acr))|O(s(cr|lash)|c(y|irc)|ti(lde|mes)|opf|dblac|uml|penCurly((?:Double|)Quote)|ver(B(ar|rac(e|ket))|Parenthesis)|fr|Elig|acute|r|grave|m(icron|ega|acr)))|(p(s(cr|i)|h(i(v)?|one|mmat)|cy|i(tchfork|v)?|o(intint|und|pf)|uncsp|er(cnt|tenk|iod|p|mil)|fr|l(us(sim|cir|two|d([ou])|e|acir|mn|b)?|an(ck(h)?|kv))|ar(s(im|l)|t|a(llel)?)?|r(sim|n(sim|E|ap)|cue|ime(s)?|o(d|p(to)?|f(surf|line|alar))|urel|e(c(sim|n(sim|eqq|approx)|curlyeq|eq|approx)?)?|E|ap)?|m)|P(s(cr|i)|hi|cy|i|o(incareplane|pf)|fr|lusMinus|artialD|r(ime|o(duct|portion(al)?)|ecedes(SlantEqual|Tilde|Equal)?)?))|(q(scr|int|opf|u(ot|est(eq)?|at(int|ernions))|prime|fr)|Q(scr|opf|UOT|fr))|(R(s(h|cr)|ho|c(y|edil|aron)|Barr|ight(Ceiling|T(ee(Vector|Arrow)?|riangle(Bar|Equal)?)|Do(ubleBracket|wn(TeeVector|Vector(Bar)?))|Up(TeeVector|DownVector|Vector(Bar)?)|Vector(Bar)?|arrow|Floor|A(ngleBracket|rrow(Bar|LeftArrow)?))|o(undImplies|pf)|uleDelayed|e(verse(UpEquilibrium|E(quilibrium|lement)))?|fr|EG|a(ng|cute|rr(tl)?)|rightarrow)|r(s(h|cr|q(uo(r)?|b)|aquo)|h(o(v)?|ar(d|u(l)?))|nmid|c(y|ub|e(d??il)|aron)|Barr|t(hree|imes|ri([ef]|ltri)?)|i(singdotseq|ng|ght(squigarrow|harpoon(down|up)|threetimes|left(harpoons|arrows)|arrow(tail)?|rightarrows))|Har|o(times|p(f|lus|ar)|a(ng|rr)|brk)|d(sh|ca|quo(r)?|ldhar)|uluhar|p(polint|ar(gt)?)|e(ct|al(s|ine|part)?|g)|f(isht|loor|r)|l(har|arr|m)|a(ng([de]|le)?|c(ute|e)|t(io(nals)?|ail)|dic|emptyv|quo|rr(sim|hk|c|tl|pl|fs|w|lp|ap|b(fs)?)?)|rarr|x|moust(ache)?|b(arr|r(k(sl([du])|e)|ac([ek]))|brk)|A(tail|arr|rr)))|(s(s(cr|tarf|etmn|mile)|h(y|c(hcy|y)|ort(parallel|mid)|arp)|c(sim|y|n(sim|E|ap)|cue|irc|polint|e(dil)?|E|a(p|ron))?|t(ar(f)?|r(ns|aight(phi|epsilon)))|i(gma([fv])?|m(ne|dot|plus|e(q)?|l(E)?|rarr|g(E)?)?)|zlig|o(pf|ftcy|l(b(ar)?)?)|dot([be])?|u(ng|cc(sim|n(sim|eqq|approx)|curlyeq|eq|approx)?|p(s(im|u([bp])|et(neq(q)?|eq(q)?)?)|hs(ol|ub)|1|n([Ee])|2|d(sub|ot)|3|plus|e(dot)?|E|larr|mult)?|m|b(s(im|u([bp])|et(neq(q)?|eq(q)?)?)|n([Ee])|dot|plus|e(dot)?|E|rarr|mult)?)|pa(des(uit)?|r)|e(swar|ct|tm(n|inus)|ar(hk|r(ow)?)|xt|mi|Arr)|q(su(p(set(eq)?|e)?|b(set(eq)?|e)?)|c(up(s)?|ap(s)?)|u(f|ar([ef]))?)|fr(own)?|w(nwar|ar(hk|r(ow)?)|Arr)|larr|acute|rarr|m(t(e(s)?)?|i(d|le)|eparsl|a(shp|llsetminus))|bquo)|S(scr|hort((?:Right|Down|Up|Left)Arrow)|c(y|irc|edil|aron)?|tar|igma|H(cy|CHcy)|opf|u(c(hThat|ceeds(SlantEqual|Tilde|Equal)?)|p(set|erset(Equal)?)?|m|b(set(Equal)?)?)|OFTcy|q(uare(Su(perset(Equal)?|bset(Equal)?)|Intersection|Union)?|rt)|fr|acute|mallCircle))|(t(s(hcy|c([ry])|trok)|h(i(nsp|ck(sim|approx))|orn|e(ta(sym|v)?|re(4|fore))|k(sim|ap))|c(y|edil|aron)|i(nt|lde|mes(d|b(ar)?)?)|o(sa|p(cir|f(ork)?|bot)?|ea)|dot|prime|elrec|fr|w(ixt|ohead((?:lef|righ)tarrow))|a(u|rget)|r(i(sb|time|dot|plus|e|angle(down|q|left(eq)?|right(eq)?)?|minus)|pezium|ade)|brk)|T(s(cr|trok)|RADE|h(i((?:n|ck)Space)|e(ta|refore))|c(y|edil|aron)|S(H??cy)|ilde(Tilde|Equal|FullEqual)?|HORN|opf|fr|a([bu])|ripleDot))|(u(scr|h(ar([lr])|blk)|c(y|irc)|t(ilde|dot|ri(f)?)|Har|o(pf|gon)|d(har|arr|blac)|u(arr|ml)|p(si(h|lon)?|harpoon(left|right)|downarrow|uparrows|lus|arrow)|f(isht|r)|wangle|l(c(orn(er)?|rop)|tri)|a(cute|rr)|r(c(orn(er)?|rop)|tri|ing)|grave|m(l|acr)|br(cy|eve)|Arr)|U(scr|n(ion(Plus)?|der(B(ar|rac(e|ket))|Parenthesis))|c(y|irc)|tilde|o(pf|gon)|dblac|uml|p(si(lon)?|downarrow|Tee(Arrow)?|per((?:Righ|Lef)tArrow)|DownArrow|Equilibrium|arrow|Arrow(Bar|DownArrow)?)|fr|a(cute|rr(ocir)?)|ring|grave|macr|br(cy|eve)))|(v(s(cr|u(pn([Ee])|bn([Ee])))|nsu([bp])|cy|Bar(v)?|zigzag|opf|dash|prop|e(e(eq|bar)?|llip|r(t|bar))|Dash|fr|ltri|a(ngrt|r(s(igma|u(psetneq(q)?|bsetneq(q)?))|nothing|t(heta|riangle(left|right))|p(hi|i|ropto)|epsilon|kappa|r(ho)?))|rtri|Arr)|V(scr|cy|opf|dash(l)?|e(e|r(yThinSpace|t(ical(Bar|Separator|Tilde|Line))?|bar))|Dash|vdash|fr|bar))|(w(scr|circ|opf|p|e(ierp|d(ge(q)?|bar))|fr|r(eath)?)|W(scr|circ|opf|edge|fr))|(X(scr|i|opf|fr)|x(s(cr|qcup)|h([Aa]rr)|nis|c(irc|up|ap)|i|o(time|dot|p(f|lus))|dtri|u(tri|plus)|vee|fr|wedge|l([Aa]rr)|r([Aa]rr)|map))|(y(scr|c(y|irc)|icy|opf|u(cy|ml)|en|fr|ac(y|ute))|Y(scr|c(y|irc)|opf|uml|Icy|Ucy|fr|acute|Acy))|(z(scr|hcy|c(y|aron)|igrarr|opf|dot|e(ta|etrf)|fr|w(n?j)|acute)|Z(scr|c(y|aron)|Hcy|opf|dot|e(ta|roWidthSpace)|fr|acute)))(;)",
          name: "constant.character.entity.named.$2.html"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.html"
            },
            "3": {
              name: "punctuation.definition.entity.html"
            }
          },
          match: "(&)#[0-9]+(;)",
          name: "constant.character.entity.numeric.decimal.html"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.html"
            },
            "3": {
              name: "punctuation.definition.entity.html"
            }
          },
          match: "(&)#[Xx]\\h+(;)",
          name: "constant.character.entity.numeric.hexadecimal.html"
        },
        {
          match: "&(?=[0-9A-Za-z]+;)",
          name: "invalid.illegal.ambiguous-ampersand.html"
        }
      ]
    },
    math: {
      patterns: [
        {
          begin: `(?i)(<)(math)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
          beginCaptures: {
            "0": {
              name: "meta.tag.structure.$2.start.html"
            },
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              patterns: [
                {
                  include: "#attribute"
                }
              ]
            },
            "5": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          end: "(?i)(</)(\\2)\\s*(>)",
          endCaptures: {
            "0": {
              name: "meta.tag.structure.$2.end.html"
            },
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.element.structure.$2.html",
          patterns: [
            {
              begin: "(?<!>)\\G",
              end: ">",
              endCaptures: {
                "0": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.tag.structure.start.html",
              patterns: [
                {
                  include: "#attribute"
                }
              ]
            },
            {
              include: "#tags"
            }
          ]
        }
      ],
      repository: {
        attribute: {
          patterns: [
            {
              begin: "(s(hift|ymmetric|cript(sizemultiplier|level|minsize)|t(ackalign|retchy)|ide|u([bp]scriptshift)|e(parator(s)?|lection)|rc)|h(eight|ref)|n(otation|umalign)|c(haralign|olumn(spa(n|cing)|width|lines|align)|lose|rossout)|i(n(dent(shift(first|last)?|target|align(first|last)?)|fixlinebreakstyle)|d)|o(pen|verflow)|d(i(splay(style)?|r)|e(nomalign|cimalpoint|pth))|position|e(dge|qual(columns|rows))|voffset|f(orm|ence|rame(spacing)?)|width|l(space|ine(thickness|leading|break(style|multchar)?)|o(ngdivstyle|cation)|ength|quote|argeop)|a(c(cent(under)?|tiontype)|l(t(text|img(-(height|valign|width))?)|ign(mentscope)?))|r(space|ow(spa(n|cing)|lines|align)|quote)|groupalign|x(link:href|mlns)|m(in(size|labelspacing)|ovablelimits|a(th(size|color|variant|background)|xsize))|bevelled)(?![-:\\w])",
              beginCaptures: {
                "0": {
                  name: "entity.other.attribute-name.html"
                }
              },
              end: "(?=\\s*+[^=\\s])",
              name: "meta.attribute.$1.html",
              patterns: [
                {
                  include: "#attribute-interior"
                }
              ]
            },
            {
              begin: `([^\\x00- "'/<=>\\x7F-\\x{9F}\uFDD0-\uFDEF\uFFFE\uFFFF\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\\x{4FFFE}\\x{4FFFF}\\x{5FFFE}\\x{5FFFF}\\x{6FFFE}\\x{6FFFF}\\x{7FFFE}\\x{7FFFF}\\x{8FFFE}\\x{8FFFF}\\x{9FFFE}\\x{9FFFF}\\x{AFFFE}\\x{AFFFF}\\x{BFFFE}\\x{BFFFF}\\x{CFFFE}\\x{CFFFF}\\x{DFFFE}\\x{DFFFF}\\x{EFFFE}\\x{EFFFF}\\x{FFFFE}\\x{FFFFF}\\x{10FFFE}\\x{10FFFF}]+)`,
              beginCaptures: {
                "0": {
                  name: "entity.other.attribute-name.html"
                }
              },
              end: "(?=\\s*+[^=\\s])",
              name: "meta.attribute.unrecognized.$1.html",
              patterns: [
                {
                  include: "#attribute-interior"
                }
              ]
            },
            {
              match: "[^>\\s]+",
              name: "invalid.illegal.character-not-allowed-here.html"
            }
          ]
        },
        tags: {
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#cdata"
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.structure.math.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(annotation|annotation-xml|semantics|menclose|merror|mfenced|mfrac|mpadded|mphantom|mroot|mrow|msqrt|mstyle|mmultiscripts|mover|mprescripts|msub|msubsup|msup|munder|munderover|none|mlabeledtr|mtable|mtd|mtr|mlongdiv|mscarries|mscarry|msgroup|msline|msrow|mstack|maction)(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.structure.math.$2.html"
            },
            {
              begin: `(?i)(<)(annotation|annotation-xml|semantics|menclose|merror|mfenced|mfrac|mpadded|mphantom|mroot|mrow|msqrt|mstyle|mmultiscripts|mover|mprescripts|msub|msubsup|msup|munder|munderover|none|mlabeledtr|mtable|mtd|mtr|mlongdiv|mscarries|mscarry|msgroup|msline|msrow|mstack|maction)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.structure.math.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)(\\2)\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.structure.math.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.structure.math.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.structure.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.inline.math.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(m(?:[inos]|space|text|aligngroup|alignmark))(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.inline.math.$2.html"
            },
            {
              begin: `(?i)(<)(m(?:[inos]|space|text|aligngroup|alignmark))(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.inline.math.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)(\\2)\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.inline.math.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.inline.math.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.inline.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.object.math.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(mglyph)(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.object.math.$2.html"
            },
            {
              begin: `(?i)(<)(mglyph)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.object.math.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)(\\2)\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.object.math.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.object.math.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.object.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.other.invalid.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.illegal.unrecognized-tag.html"
                },
                "4": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "6": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(([:\\w]+))(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.other.invalid.html"
            },
            {
              begin: `(?i)(<)((\\w[^>\\s]*))(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.other.invalid.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.illegal.unrecognized-tag.html"
                },
                "4": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "6": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)((\\2))\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.other.invalid.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.illegal.unrecognized-tag.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.other.invalid.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.other.invalid.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              include: "#tags-invalid"
            }
          ]
        }
      }
    },
    svg: {
      patterns: [
        {
          begin: `(?i)(<)(svg)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
          beginCaptures: {
            "0": {
              name: "meta.tag.structure.$2.start.html"
            },
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              patterns: [
                {
                  include: "#attribute"
                }
              ]
            },
            "5": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          end: "(?i)(</)(\\2)\\s*(>)",
          endCaptures: {
            "0": {
              name: "meta.tag.structure.$2.end.html"
            },
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.element.structure.$2.html",
          patterns: [
            {
              begin: "(?<!>)\\G",
              end: ">",
              endCaptures: {
                "0": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.tag.structure.start.html",
              patterns: [
                {
                  include: "#attribute"
                }
              ]
            },
            {
              include: "#tags"
            }
          ]
        }
      ],
      repository: {
        attribute: {
          patterns: [
            {
              begin: "(s(hape-rendering|ystemLanguage|cale|t(yle|itchTiles|op-(color|opacity)|dDeviation|em([hv])|artOffset|r(i(ng|kethrough-(thickness|position))|oke(-(opacity|dash(offset|array)|width|line(cap|join)|miterlimit))?))|urfaceScale|p(e(cular(Constant|Exponent)|ed)|acing|readMethod)|eed|lope)|h(oriz-(origin-x|adv-x)|eight|anging|ref(lang)?)|y([12]|ChannelSelector)?|n(umOctaves|ame)|c(y|o(ntentS((?:cript|tyle)Type)|lor(-(interpolation(-filters)?|profile|rendering))?)|ursor|l(ip(-(path|rule)|PathUnits)?|ass)|a(p-height|lcMode)|x)|t(ype|o|ext(-(decoration|anchor|rendering)|Length)|a(rget([XY])?|b(index|leValues))|ransform)|i(n(tercept|2)?|d(eographic)?|mage-rendering)|z(oomAndPan)?|o(p(erator|acity)|ver(flow|line-(thickness|position))|ffset|r(i(ent(ation)?|gin)|der))|d(y|i(splay|visor|ffuseConstant|rection)|ominant-baseline|ur|e(scent|celerate)|x)?|u(1|n(i(code(-(range|bidi))?|ts-per-em)|derline-(thickness|position))|2)|p(ing|oint(s(At([XYZ]))?|er-events)|a(nose-1|t(h(Length)?|tern(ContentUnits|Transform|Units))|int-order)|r(imitiveUnits|eserveA(spectRatio|lpha)))|e(n(d|able-background)|dgeMode|levation|x(ternalResourcesRequired|ponent))|v(i(sibility|ew(Box|Target))|-(hanging|ideographic|alphabetic|mathematical)|e(ctor-effect|r(sion|t-(origin-([xy])|adv-y)))|alues)|k([123]|e(y(Splines|Times|Points)|rn(ing|el(Matrix|UnitLength)))|4)?|f(y|il(ter(Res|Units)?|l(-(opacity|rule))?)|o(nt-(s(t(yle|retch)|ize(-adjust)?)|variant|family|weight)|rmat)|lood-(color|opacity)|r(om)?|x)|w(idth(s)?|ord-spacing|riting-mode)|l(i(ghting-color|mitingConeAngle)|ocal|e(ngthAdjust|tter-spacing)|ang)|a(scent|cc(umulate|ent-height)|ttribute(Name|Type)|zimuth|dditive|utoReverse|l(ignment-baseline|phabetic|lowReorder)|rabic-form|mplitude)|r(y|otate|e(s(tart|ult)|ndering-intent|peat(Count|Dur)|quired(Extensions|Features)|f([XY]|errerPolicy)|l)|adius|x)?|g([12]|lyph(Ref|-(name|orientation-(horizontal|vertical)))|radient(Transform|Units))|x([12]|ChannelSelector|-height|link:(show|href|t(ype|itle)|a(ctuate|rcrole)|role)|ml:(space|lang|base))?|m(in|ode|e(thod|dia)|a(sk((?:Content|)Units)?|thematical|rker(Height|-(start|end|mid)|Units|Width)|x))|b(y|ias|egin|ase(Profile|line-shift|Frequency)|box))(?![-:\\w])",
              beginCaptures: {
                "0": {
                  name: "entity.other.attribute-name.html"
                }
              },
              end: "(?=\\s*+[^=\\s])",
              name: "meta.attribute.$1.html",
              patterns: [
                {
                  include: "#attribute-interior"
                }
              ]
            },
            {
              begin: `([^\\x00- "'/<=>\\x7F-\\x{9F}\uFDD0-\uFDEF\uFFFE\uFFFF\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\\x{4FFFE}\\x{4FFFF}\\x{5FFFE}\\x{5FFFF}\\x{6FFFE}\\x{6FFFF}\\x{7FFFE}\\x{7FFFF}\\x{8FFFE}\\x{8FFFF}\\x{9FFFE}\\x{9FFFF}\\x{AFFFE}\\x{AFFFF}\\x{BFFFE}\\x{BFFFF}\\x{CFFFE}\\x{CFFFF}\\x{DFFFE}\\x{DFFFF}\\x{EFFFE}\\x{EFFFF}\\x{FFFFE}\\x{FFFFF}\\x{10FFFE}\\x{10FFFF}]+)`,
              beginCaptures: {
                "0": {
                  name: "entity.other.attribute-name.html"
                }
              },
              end: "(?=\\s*+[^=\\s])",
              name: "meta.attribute.unrecognized.$1.html",
              patterns: [
                {
                  include: "#attribute-interior"
                }
              ]
            },
            {
              match: "[^>\\s]+",
              name: "invalid.illegal.character-not-allowed-here.html"
            }
          ]
        },
        tags: {
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#cdata"
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.metadata.svg.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(color-profile|desc|metadata|script|style|title)(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.metadata.svg.$2.html"
            },
            {
              begin: `(?i)(<)(color-profile|desc|metadata|script|style|title)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.metadata.svg.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)(\\2)\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.metadata.svg.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.metadata.svg.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.metadata.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.structure.svg.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(animateMotion|clipPath|defs|feComponentTransfer|feDiffuseLighting|feMerge|feSpecularLighting|filter|g|hatch|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|pattern|radialGradient|switch|text|textPath)(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.structure.svg.$2.html"
            },
            {
              begin: `(?i)(<)(animateMotion|clipPath|defs|feComponentTransfer|feDiffuseLighting|feMerge|feSpecularLighting|filter|g|hatch|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|pattern|radialGradient|switch|text|textPath)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.structure.svg.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)(\\2)\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.structure.svg.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.structure.svg.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.structure.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.inline.svg.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(a|animate|discard|feBlend|feColorMatrix|feComposite|feConvolveMatrix|feDisplacementMap|feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur|feMergeNode|feMorphology|feOffset|fePointLight|feSpotLight|feTile|feTurbulence|hatchPath|mpath|set|solidcolor|stop|tspan)(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.inline.svg.$2.html"
            },
            {
              begin: `(?i)(<)(a|animate|discard|feBlend|feColorMatrix|feComposite|feConvolveMatrix|feDisplacementMap|feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur|feMergeNode|feMorphology|feOffset|fePointLight|feSpotLight|feTile|feTurbulence|hatchPath|mpath|set|solidcolor|stop|tspan)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.inline.svg.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)(\\2)\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.inline.svg.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.inline.svg.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.inline.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.object.svg.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(circle|ellipse|feImage|foreignObject|image|line|path|polygon|polyline|rect|symbol|use|view)(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.object.svg.$2.html"
            },
            {
              begin: `(?i)(<)(a|circle|ellipse|feImage|foreignObject|image|line|path|polygon|polyline|rect|symbol|use|view)(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.object.svg.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)(\\2)\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.object.svg.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.object.svg.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.object.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.other.svg.$2.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.deprecated.html"
                },
                "4": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "6": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)((altGlyph|altGlyphDef|altGlyphItem|animateColor|animateTransform|cursor|font|font-face|font-face-format|font-face-name|font-face-src|font-face-uri|glyph|glyphRef|hkern|missing-glyph|tref|vkern))(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.other.svg.$2.html"
            },
            {
              begin: `(?i)(<)((altGlyph|altGlyphDef|altGlyphItem|animateColor|animateTransform|cursor|font|font-face|font-face-format|font-face-name|font-face-src|font-face-uri|glyph|glyphRef|hkern|missing-glyph|tref|vkern))(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.other.svg.$2.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.deprecated.html"
                },
                "4": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "6": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)((\\2))\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.other.svg.$2.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.deprecated.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.other.svg.$2.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.other.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "meta.tag.other.invalid.void.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.illegal.unrecognized-tag.html"
                },
                "4": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "6": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              match: `(?i)(<)(([:\\w]+))(?=\\s|/?>)(([^"'>]|"[^"]*"|'[^']*')*)(/>)`,
              name: "meta.element.other.invalid.html"
            },
            {
              begin: `(?i)(<)((\\w[^>\\s]*))(?=\\s|/?>)(?:(([^"'>]|"[^"]*"|'[^']*')*)(>))?`,
              beginCaptures: {
                "0": {
                  name: "meta.tag.other.invalid.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.illegal.unrecognized-tag.html"
                },
                "4": {
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                "6": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              end: "(?i)(</)((\\2))\\s*(>)|(/>)|(?=</\\w+)",
              endCaptures: {
                "0": {
                  name: "meta.tag.other.invalid.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "invalid.illegal.unrecognized-tag.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                },
                "5": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.element.other.invalid.html",
              patterns: [
                {
                  begin: "(?<!>)\\G",
                  end: "(?=/>)|>",
                  endCaptures: {
                    "0": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  name: "meta.tag.other.invalid.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  include: "#tags"
                }
              ]
            },
            {
              include: "#tags-invalid"
            }
          ]
        }
      }
    },
    "tags-invalid": {
      patterns: [
        {
          begin: "(</?)((\\w[^>\\s]*))(?<!/)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.illegal.unrecognized-tag.html"
            }
          },
          end: "((?: ?/)?>)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.other.$2.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        }
      ]
    },
    "tags-valid": {
      patterns: [
        {
          begin: "(^[\\t ]+)?(?=<(?i:style)\\b(?!-))",
          beginCaptures: {
            "1": {
              name: "punctuation.whitespace.embedded.leading.html"
            }
          },
          end: "(?!\\G)([\\t ]*$\\n?)?",
          endCaptures: {
            "1": {
              name: "punctuation.whitespace.embedded.trailing.html"
            }
          },
          patterns: [
            {
              begin: "(?i)(<)(style)(?=\\s|/?>)",
              beginCaptures: {
                "0": {
                  name: "meta.tag.metadata.style.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                }
              },
              end: "(?i)((<)/)(style)\\s*(>)",
              endCaptures: {
                "0": {
                  name: "meta.tag.metadata.style.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "source.css-ignored-vscode"
                },
                "3": {
                  name: "entity.name.tag.html"
                },
                "4": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.embedded.block.html",
              patterns: [
                {
                  begin: "\\G",
                  captures: {
                    "1": {
                      name: "punctuation.definition.tag.end.html"
                    }
                  },
                  end: "(>)",
                  name: "meta.tag.metadata.style.start.html",
                  patterns: [
                    {
                      include: "#attribute"
                    }
                  ]
                },
                {
                  begin: "(?!\\G)",
                  end: "(?=</(?i:style))",
                  name: "source.css",
                  patterns: [
                    {
                      include: "source.css"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          begin: "(^[\\t ]+)?(?=<(?i:script)\\b(?!-))",
          beginCaptures: {
            "1": {
              name: "punctuation.whitespace.embedded.leading.html"
            }
          },
          end: "(?!\\G)([\\t ]*$\\n?)?",
          endCaptures: {
            "1": {
              name: "punctuation.whitespace.embedded.trailing.html"
            }
          },
          patterns: [
            {
              begin: "(<)((?i:script))\\b",
              beginCaptures: {
                "0": {
                  name: "meta.tag.metadata.script.start.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                }
              },
              end: "(/)((?i:script))(>)",
              endCaptures: {
                "0": {
                  name: "meta.tag.metadata.script.end.html"
                },
                "1": {
                  name: "punctuation.definition.tag.begin.html"
                },
                "2": {
                  name: "entity.name.tag.html"
                },
                "3": {
                  name: "punctuation.definition.tag.end.html"
                }
              },
              name: "meta.embedded.block.html",
              patterns: [
                {
                  begin: "\\G",
                  end: "(?=/)",
                  patterns: [
                    {
                      begin: "(>)",
                      beginCaptures: {
                        "0": {
                          name: "meta.tag.metadata.script.start.html"
                        },
                        "1": {
                          name: "punctuation.definition.tag.end.html"
                        }
                      },
                      end: "((<))(?=/(?i:script))",
                      endCaptures: {
                        "0": {
                          name: "meta.tag.metadata.script.end.html"
                        },
                        "1": {
                          name: "punctuation.definition.tag.begin.html"
                        },
                        "2": {
                          name: "source.js-ignored-vscode"
                        }
                      },
                      patterns: [
                        {
                          begin: "\\G",
                          end: "(?=</(?i:script))",
                          name: "source.js",
                          patterns: [
                            {
                              begin: "(^[\\t ]+)?(?=//)",
                              beginCaptures: {
                                "1": {
                                  name: "punctuation.whitespace.comment.leading.js"
                                }
                              },
                              end: "(?!\\G)",
                              patterns: [
                                {
                                  begin: "//",
                                  beginCaptures: {
                                    "0": {
                                      name: "punctuation.definition.comment.js"
                                    }
                                  },
                                  end: "(?=<\/script)|\\n",
                                  name: "comment.line.double-slash.js"
                                }
                              ]
                            },
                            {
                              begin: "/\\*",
                              captures: {
                                "0": {
                                  name: "punctuation.definition.comment.js"
                                }
                              },
                              end: "\\*/|(?=<\/script)",
                              name: "comment.block.js"
                            },
                            {
                              include: "source.js"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      begin: "\\G",
                      end: `(?i:(?=>|type(?=[=\\s])(?!\\s*=\\s*(''|""|(["']?)(text/(javascript(1\\.[0-5])?|x-javascript|jscript|livescript|(x-)?ecmascript|babel)|application/((?:(x-)?jav|(x-)?ecm)ascript)|module)["'>\\s]))))`,
                      name: "meta.tag.metadata.script.start.html",
                      patterns: [
                        {
                          include: "#attribute"
                        }
                      ]
                    },
                    {
                      begin: `(?i:(?=type\\s*=\\s*(["']?)text/(x-handlebars|(x-(handlebars-)?|ng-)?template|html)["'>\\s]))`,
                      end: "((<))(?=/(?i:script))",
                      endCaptures: {
                        "0": {
                          name: "meta.tag.metadata.script.end.html"
                        },
                        "1": {
                          name: "punctuation.definition.tag.begin.html"
                        },
                        "2": {
                          name: "text.html.basic"
                        }
                      },
                      patterns: [
                        {
                          begin: "\\G",
                          end: "(>)",
                          endCaptures: {
                            "1": {
                              name: "punctuation.definition.tag.end.html"
                            }
                          },
                          name: "meta.tag.metadata.script.start.html",
                          patterns: [
                            {
                              include: "#attribute"
                            }
                          ]
                        },
                        {
                          begin: "(?!\\G)",
                          end: "(?=</(?i:script))",
                          name: "text.html.basic",
                          patterns: [
                            {
                              include: "text.html.basic"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      begin: "(?=(?i:type))",
                      end: "(<)(?=/(?i:script))",
                      endCaptures: {
                        "0": {
                          name: "meta.tag.metadata.script.end.html"
                        },
                        "1": {
                          name: "punctuation.definition.tag.begin.html"
                        }
                      },
                      patterns: [
                        {
                          begin: "\\G",
                          end: "(>)",
                          endCaptures: {
                            "1": {
                              name: "punctuation.definition.tag.end.html"
                            }
                          },
                          name: "meta.tag.metadata.script.start.html",
                          patterns: [
                            {
                              include: "#attribute"
                            }
                          ]
                        },
                        {
                          begin: "(?!\\G)",
                          end: "(?=</(?i:script))",
                          name: "source.unknown"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          begin: "(?i)(<)(base|link|meta)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: "/?>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.metadata.$2.void.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)(noscript|title)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.metadata.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)(noscript|title)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.metadata.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)(col|hr|input)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: "/?>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.structure.$2.void.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)(address|article|aside|blockquote|body|button|caption|colgroup|datalist|dd|details|dialog|div|dl|dt|fieldset|figcaption|figure|footer|form|head|header|hgroup|html|h[1-6]|label|legend|li|main|map|menu|meter|nav|ol|optgroup|option|output|p|pre|progress|section|select|slot|summary|table|tbody|td|template|textarea|tfoot|th|thead|tr|ul)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.structure.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)(address|article|aside|blockquote|body|button|caption|colgroup|datalist|dd|details|dialog|div|dl|dt|fieldset|figcaption|figure|footer|form|head|header|hgroup|html|h[1-6]|label|legend|li|main|map|menu|meter|nav|ol|optgroup|option|output|p|pre|progress|section|select|slot|summary|table|tbody|td|template|textarea|tfoot|th|thead|tr|ul)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.structure.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)(area|br|wbr)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: "/?>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.inline.$2.void.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)(a|abbr|b|bdi|bdo|cite|code|data|del|dfn|em|i|ins|kbd|mark|q|rp|rt|ruby|s|samp|small|span|strong|sub|sup|time|u|var)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.inline.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)(a|abbr|b|bdi|bdo|cite|code|data|del|dfn|em|i|ins|kbd|mark|q|rp|rt|ruby|s|samp|small|span|strong|sub|sup|time|u|var)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.inline.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)(embed|img|param|source|track)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: "/?>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.object.$2.void.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)(audio|canvas|iframe|object|picture|video)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.object.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)(audio|canvas|iframe|object|picture|video)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.object.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)((basefont|isindex))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: "/?>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.metadata.$2.void.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)((center|frameset|noembed|noframes))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.structure.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)((center|frameset|noembed|noframes))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.structure.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)((acronym|big|blink|font|strike|tt|xmp))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.inline.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)((acronym|big|blink|font|strike|tt|xmp))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.inline.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)((frame))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: "/?>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.object.$2.void.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)((applet))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.object.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)((applet))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.deprecated.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.object.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(<)((dir|keygen|listing|menuitem|plaintext|spacer))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.illegal.no-longer-supported.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.other.$2.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(?i)(</)((dir|keygen|listing|menuitem|plaintext|spacer))(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            },
            "3": {
              name: "invalid.illegal.no-longer-supported.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.other.$2.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          include: "#math"
        },
        {
          include: "#svg"
        },
        {
          begin: "(<)([A-Za-z][.0-9A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\\x{EFFFF}]*-[-.0-9A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\\x{EFFFF}]*)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: "/?>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.custom.start.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        },
        {
          begin: "(</)([A-Za-z][.0-9A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\\x{EFFFF}]*-[-.0-9A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\\x{EFFFF}]*)(?=\\s|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.html"
            },
            "2": {
              name: "entity.name.tag.html"
            }
          },
          end: ">",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          name: "meta.tag.custom.end.html",
          patterns: [
            {
              include: "#attribute"
            }
          ]
        }
      ]
    },
    "xml-processing": {
      begin: "(<\\?)(xml)",
      captures: {
        "1": {
          name: "punctuation.definition.tag.html"
        },
        "2": {
          name: "entity.name.tag.html"
        }
      },
      end: "(\\?>)",
      name: "meta.tag.metadata.processing.xml.html",
      patterns: [
        {
          include: "#attribute"
        }
      ]
    }
  },
  scopeName: "text.html.basic"
};
var css_default = {
  displayName: "CSS",
  name: "css",
  patterns: [
    {
      include: "#comment-block"
    },
    {
      include: "#escapes"
    },
    {
      include: "#combinators"
    },
    {
      include: "#selector"
    },
    {
      include: "#at-rules"
    },
    {
      include: "#rule-list"
    }
  ],
  repository: {
    "at-rules": {
      patterns: [
        {
          begin: "\\A\\uFEFF?(?i:(?=\\s*@charset\\b))",
          end: ";|(?=$)",
          endCaptures: {
            "0": {
              name: "punctuation.terminator.rule.css"
            }
          },
          name: "meta.at-rule.charset.css",
          patterns: [
            {
              captures: {
                "1": {
                  name: "invalid.illegal.not-lowercase.charset.css"
                },
                "2": {
                  name: "invalid.illegal.leading-whitespace.charset.css"
                },
                "3": {
                  name: "invalid.illegal.no-whitespace.charset.css"
                },
                "4": {
                  name: "invalid.illegal.whitespace.charset.css"
                },
                "5": {
                  name: "invalid.illegal.not-double-quoted.charset.css"
                },
                "6": {
                  name: "invalid.illegal.unclosed-string.charset.css"
                },
                "7": {
                  name: "invalid.illegal.unexpected-characters.charset.css"
                }
              },
              match: '\\G((?!@charset)@\\w+)|\\G(\\s+)|(@charset\\S[^;]*)|(?<=@charset)( {2,}|\\t+)|(?<=@charset )([^";]+)|("[^"]+)$|(?<=")([^;]+)'
            },
            {
              captures: {
                "1": {
                  name: "keyword.control.at-rule.charset.css"
                },
                "2": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              match: "((@)charset)(?=\\s)"
            },
            {
              begin: '"',
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.css"
                }
              },
              end: '"|$',
              endCaptures: {
                "0": {
                  name: "punctuation.definition.string.end.css"
                }
              },
              name: "string.quoted.double.css",
              patterns: [
                {
                  begin: '(?:\\G|^)(?=[^"]+$)',
                  end: "$",
                  name: "invalid.illegal.unclosed.string.css"
                }
              ]
            }
          ]
        },
        {
          begin: `(?i)((@)import)(?:\\s+|$|(?=["']|/\\*))`,
          beginCaptures: {
            "1": {
              name: "keyword.control.at-rule.import.css"
            },
            "2": {
              name: "punctuation.definition.keyword.css"
            }
          },
          end: ";",
          endCaptures: {
            "0": {
              name: "punctuation.terminator.rule.css"
            }
          },
          name: "meta.at-rule.import.css",
          patterns: [
            {
              begin: "\\G\\s*(?=/\\*)",
              end: "(?<=\\*/)\\s*",
              patterns: [
                {
                  include: "#comment-block"
                }
              ]
            },
            {
              include: "#string"
            },
            {
              include: "#url"
            },
            {
              include: "#media-query-list"
            }
          ]
        },
        {
          begin: "(?i)((@)font-face)(?=\\s*|\\{|/\\*|$)",
          beginCaptures: {
            "1": {
              name: "keyword.control.at-rule.font-face.css"
            },
            "2": {
              name: "punctuation.definition.keyword.css"
            }
          },
          end: "(?!\\G)",
          name: "meta.at-rule.font-face.css",
          patterns: [
            {
              include: "#comment-block"
            },
            {
              include: "#escapes"
            },
            {
              include: "#rule-list"
            }
          ]
        },
        {
          begin: "(?i)(@)page(?=[:{\\s]|/\\*|$)",
          captures: {
            "0": {
              name: "keyword.control.at-rule.page.css"
            },
            "1": {
              name: "punctuation.definition.keyword.css"
            }
          },
          end: "(?=\\s*($|[:;{]))",
          name: "meta.at-rule.page.css",
          patterns: [
            {
              include: "#rule-list"
            }
          ]
        },
        {
          begin: "(?i)(?=@media([(\\s]|/\\*|$))",
          end: "(?<=})(?!\\G)",
          patterns: [
            {
              begin: "(?i)\\G(@)media",
              beginCaptures: {
                "0": {
                  name: "keyword.control.at-rule.media.css"
                },
                "1": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              end: "(?=\\s*[;{])",
              name: "meta.at-rule.media.header.css",
              patterns: [
                {
                  include: "#media-query-list"
                }
              ]
            },
            {
              begin: "\\{",
              beginCaptures: {
                "0": {
                  name: "punctuation.section.media.begin.bracket.curly.css"
                }
              },
              end: "}",
              endCaptures: {
                "0": {
                  name: "punctuation.section.media.end.bracket.curly.css"
                }
              },
              name: "meta.at-rule.media.body.css",
              patterns: [
                {
                  include: "$self"
                }
              ]
            }
          ]
        },
        {
          begin: `(?i)(?=@counter-style(["';{\\s]|/\\*|$))`,
          end: "(?<=})(?!\\G)",
          patterns: [
            {
              begin: "(?i)\\G(@)counter-style",
              beginCaptures: {
                "0": {
                  name: "keyword.control.at-rule.counter-style.css"
                },
                "1": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              end: "(?=\\s*\\{)",
              name: "meta.at-rule.counter-style.header.css",
              patterns: [
                {
                  include: "#comment-block"
                },
                {
                  include: "#escapes"
                },
                {
                  captures: {
                    "0": {
                      patterns: [
                        {
                          include: "#escapes"
                        }
                      ]
                    }
                  },
                  match: "[-A-Z_a-z[^\\x00-\\x7F]](?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*",
                  name: "variable.parameter.style-name.css"
                }
              ]
            },
            {
              begin: "\\{",
              beginCaptures: {
                "0": {
                  name: "punctuation.section.property-list.begin.bracket.curly.css"
                }
              },
              end: "}",
              endCaptures: {
                "0": {
                  name: "punctuation.section.property-list.end.bracket.curly.css"
                }
              },
              name: "meta.at-rule.counter-style.body.css",
              patterns: [
                {
                  include: "#comment-block"
                },
                {
                  include: "#escapes"
                },
                {
                  include: "#rule-list-innards"
                }
              ]
            }
          ]
        },
        {
          begin: `(?i)(?=@document(["';{\\s]|/\\*|$))`,
          end: "(?<=})(?!\\G)",
          patterns: [
            {
              begin: "(?i)\\G(@)document",
              beginCaptures: {
                "0": {
                  name: "keyword.control.at-rule.document.css"
                },
                "1": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              end: "(?=\\s*[;{])",
              name: "meta.at-rule.document.header.css",
              patterns: [
                {
                  begin: "(?i)(?<![-\\w])(url-prefix|domain|regexp)(\\()",
                  beginCaptures: {
                    "1": {
                      name: "support.function.document-rule.css"
                    },
                    "2": {
                      name: "punctuation.section.function.begin.bracket.round.css"
                    }
                  },
                  end: "\\)",
                  endCaptures: {
                    "0": {
                      name: "punctuation.section.function.end.bracket.round.css"
                    }
                  },
                  name: "meta.function.document-rule.css",
                  patterns: [
                    {
                      include: "#string"
                    },
                    {
                      include: "#comment-block"
                    },
                    {
                      include: "#escapes"
                    },
                    {
                      match: `[^"')\\s]+`,
                      name: "variable.parameter.document-rule.css"
                    }
                  ]
                },
                {
                  include: "#url"
                },
                {
                  include: "#commas"
                },
                {
                  include: "#comment-block"
                },
                {
                  include: "#escapes"
                }
              ]
            },
            {
              begin: "\\{",
              beginCaptures: {
                "0": {
                  name: "punctuation.section.document.begin.bracket.curly.css"
                }
              },
              end: "}",
              endCaptures: {
                "0": {
                  name: "punctuation.section.document.end.bracket.curly.css"
                }
              },
              name: "meta.at-rule.document.body.css",
              patterns: [
                {
                  include: "$self"
                }
              ]
            }
          ]
        },
        {
          begin: `(?i)(?=@(?:-(?:webkit|moz|o|ms)-)?keyframes(["';{\\s]|/\\*|$))`,
          end: "(?<=})(?!\\G)",
          patterns: [
            {
              begin: "(?i)\\G(@)(?:-(?:webkit|moz|o|ms)-)?keyframes",
              beginCaptures: {
                "0": {
                  name: "keyword.control.at-rule.keyframes.css"
                },
                "1": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              end: "(?=\\s*\\{)",
              name: "meta.at-rule.keyframes.header.css",
              patterns: [
                {
                  include: "#comment-block"
                },
                {
                  include: "#escapes"
                },
                {
                  captures: {
                    "0": {
                      patterns: [
                        {
                          include: "#escapes"
                        }
                      ]
                    }
                  },
                  match: "[-A-Z_a-z[^\\x00-\\x7F]](?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*",
                  name: "variable.parameter.keyframe-list.css"
                }
              ]
            },
            {
              begin: "\\{",
              beginCaptures: {
                "0": {
                  name: "punctuation.section.keyframes.begin.bracket.curly.css"
                }
              },
              end: "}",
              endCaptures: {
                "0": {
                  name: "punctuation.section.keyframes.end.bracket.curly.css"
                }
              },
              name: "meta.at-rule.keyframes.body.css",
              patterns: [
                {
                  include: "#comment-block"
                },
                {
                  include: "#escapes"
                },
                {
                  captures: {
                    "1": {
                      name: "entity.other.keyframe-offset.css"
                    },
                    "2": {
                      name: "entity.other.keyframe-offset.percentage.css"
                    }
                  },
                  match: "(?i)(?<![-\\w])(from|to)(?![-\\w])|([-+]?(?:\\d+(?:\\.\\d+)?|\\.\\d+)%)"
                },
                {
                  include: "#rule-list"
                }
              ]
            }
          ]
        },
        {
          begin: "(?i)(?=@supports([(\\s]|/\\*|$))",
          end: "(?<=})(?!\\G)|(?=;)",
          patterns: [
            {
              begin: "(?i)\\G(@)supports",
              beginCaptures: {
                "0": {
                  name: "keyword.control.at-rule.supports.css"
                },
                "1": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              end: "(?=\\s*[;{])",
              name: "meta.at-rule.supports.header.css",
              patterns: [
                {
                  include: "#feature-query-operators"
                },
                {
                  include: "#feature-query"
                },
                {
                  include: "#comment-block"
                },
                {
                  include: "#escapes"
                }
              ]
            },
            {
              begin: "\\{",
              beginCaptures: {
                "0": {
                  name: "punctuation.section.supports.begin.bracket.curly.css"
                }
              },
              end: "}",
              endCaptures: {
                "0": {
                  name: "punctuation.section.supports.end.bracket.curly.css"
                }
              },
              name: "meta.at-rule.supports.body.css",
              patterns: [
                {
                  include: "$self"
                }
              ]
            }
          ]
        },
        {
          begin: `(?i)((@)(-(ms|o)-)?viewport)(?=["';{\\s]|/\\*|$)`,
          beginCaptures: {
            "1": {
              name: "keyword.control.at-rule.viewport.css"
            },
            "2": {
              name: "punctuation.definition.keyword.css"
            }
          },
          end: "(?=\\s*[;@{])",
          name: "meta.at-rule.viewport.css",
          patterns: [
            {
              include: "#comment-block"
            },
            {
              include: "#escapes"
            }
          ]
        },
        {
          begin: `(?i)((@)font-feature-values)(?=["';{\\s]|/\\*|$)\\s*`,
          beginCaptures: {
            "1": {
              name: "keyword.control.at-rule.font-feature-values.css"
            },
            "2": {
              name: "punctuation.definition.keyword.css"
            }
          },
          contentName: "variable.parameter.font-name.css",
          end: "(?=\\s*[;@{])",
          name: "meta.at-rule.font-features.css",
          patterns: [
            {
              include: "#comment-block"
            },
            {
              include: "#escapes"
            }
          ]
        },
        {
          include: "#font-features"
        },
        {
          begin: `(?i)((@)namespace)(?=["';\\s]|/\\*|$)`,
          beginCaptures: {
            "1": {
              name: "keyword.control.at-rule.namespace.css"
            },
            "2": {
              name: "punctuation.definition.keyword.css"
            }
          },
          end: ";|(?=[@{])",
          endCaptures: {
            "0": {
              name: "punctuation.terminator.rule.css"
            }
          },
          name: "meta.at-rule.namespace.css",
          patterns: [
            {
              include: "#url"
            },
            {
              captures: {
                "1": {
                  patterns: [
                    {
                      include: "#comment-block"
                    }
                  ]
                },
                "2": {
                  name: "entity.name.function.namespace-prefix.css",
                  patterns: [
                    {
                      include: "#escapes"
                    }
                  ]
                }
              },
              match: "(?i)(?:\\G|^|(?<=\\s))(?=(?<=\\s|^)[-A-Z_a-z[^\\x00-\\x7F]]|\\s*/\\*(?:[^*]|\\*[^/])*\\*/)(.*?)([-A-Z_a-z[^\\x00-\\x7F]](?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*)"
            },
            {
              include: "#comment-block"
            },
            {
              include: "#escapes"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?i)(?=@[-\\w]+[^;]+;s*$)",
          end: "(?<=;)(?!\\G)",
          patterns: [
            {
              begin: "(?i)\\G(@)[-\\w]+",
              beginCaptures: {
                "0": {
                  name: "keyword.control.at-rule.css"
                },
                "1": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              end: ";",
              endCaptures: {
                "0": {
                  name: "punctuation.terminator.rule.css"
                }
              },
              name: "meta.at-rule.header.css"
            }
          ]
        },
        {
          begin: "(?i)(?=@[-\\w]+([({\\s]|/\\*|$))",
          end: "(?<=})(?!\\G)",
          patterns: [
            {
              begin: "(?i)\\G(@)[-\\w]+",
              beginCaptures: {
                "0": {
                  name: "keyword.control.at-rule.css"
                },
                "1": {
                  name: "punctuation.definition.keyword.css"
                }
              },
              end: "(?=\\s*[;{])",
              name: "meta.at-rule.header.css"
            },
            {
              begin: "\\{",
              beginCaptures: {
                "0": {
                  name: "punctuation.section.begin.bracket.curly.css"
                }
              },
              end: "}",
              endCaptures: {
                "0": {
                  name: "punctuation.section.end.bracket.curly.css"
                }
              },
              name: "meta.at-rule.body.css",
              patterns: [
                {
                  include: "$self"
                }
              ]
            }
          ]
        }
      ]
    },
    "color-keywords": {
      patterns: [
        {
          match: "(?i)(?<![-\\w])(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)(?![-\\w])",
          name: "support.constant.color.w3c-standard-color-name.css"
        },
        {
          match: "(?i)(?<![-\\w])(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|transparent|turquoise|violet|wheat|whitesmoke|yellowgreen)(?![-\\w])",
          name: "support.constant.color.w3c-extended-color-name.css"
        },
        {
          match: "(?i)(?<![-\\w])currentColor(?![-\\w])",
          name: "support.constant.color.current.css"
        },
        {
          match: "(?i)(?<![-\\w])(ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText)(?![-\\w])",
          name: "invalid.deprecated.color.system.css"
        }
      ]
    },
    combinators: {
      patterns: [
        {
          match: "/deep/|>>>",
          name: "invalid.deprecated.combinator.css"
        },
        {
          match: ">>|[+>~]",
          name: "keyword.operator.combinator.css"
        }
      ]
    },
    commas: {
      match: ",",
      name: "punctuation.separator.list.comma.css"
    },
    "comment-block": {
      begin: "/\\*",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.comment.begin.css"
        }
      },
      end: "\\*/",
      endCaptures: {
        "0": {
          name: "punctuation.definition.comment.end.css"
        }
      },
      name: "comment.block.css"
    },
    escapes: {
      patterns: [
        {
          match: "\\\\\\h{1,6}",
          name: "constant.character.escape.codepoint.css"
        },
        {
          begin: "\\\\$\\s*",
          end: "^(?<!\\G)",
          name: "constant.character.escape.newline.css"
        },
        {
          match: "\\\\.",
          name: "constant.character.escape.css"
        }
      ]
    },
    "feature-query": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.condition.begin.bracket.round.css"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "punctuation.definition.condition.end.bracket.round.css"
        }
      },
      name: "meta.feature-query.css",
      patterns: [
        {
          include: "#feature-query-operators"
        },
        {
          include: "#feature-query"
        }
      ]
    },
    "feature-query-operators": {
      patterns: [
        {
          match: "(?i)(?<=[()\\s]|^|\\*/)(and|not|or)(?=[()\\s]|/\\*|$)",
          name: "keyword.operator.logical.feature.$1.css"
        },
        {
          include: "#rule-list-innards"
        }
      ]
    },
    "font-features": {
      begin: `(?i)((@)(annotation|character-variant|ornaments|styleset|stylistic|swash))(?=["';@{\\s]|/\\*|$)`,
      beginCaptures: {
        "1": {
          name: "keyword.control.at-rule.${3:/downcase}.css"
        },
        "2": {
          name: "punctuation.definition.keyword.css"
        }
      },
      end: "(?<=})",
      name: "meta.at-rule.${3:/downcase}.css",
      patterns: [
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.section.property-list.begin.bracket.curly.css"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.section.property-list.end.bracket.curly.css"
            }
          },
          name: "meta.property-list.font-feature.css",
          patterns: [
            {
              captures: {
                "0": {
                  patterns: [
                    {
                      include: "#escapes"
                    }
                  ]
                }
              },
              match: "[-A-Z_a-z[^\\x00-\\x7F]](?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*",
              name: "variable.font-feature.css"
            },
            {
              include: "#rule-list-innards"
            }
          ]
        }
      ]
    },
    "functional-pseudo-classes": {
      patterns: [
        {
          begin: "(?i)((:)dir)(\\()",
          beginCaptures: {
            "1": {
              name: "entity.other.attribute-name.pseudo-class.css"
            },
            "2": {
              name: "punctuation.definition.entity.css"
            },
            "3": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          patterns: [
            {
              include: "#comment-block"
            },
            {
              include: "#escapes"
            },
            {
              match: "(?i)(?<![-\\w])(ltr|rtl)(?![-\\w])",
              name: "support.constant.text-direction.css"
            },
            {
              include: "#property-values"
            }
          ]
        },
        {
          begin: "(?i)((:)lang)(\\()",
          beginCaptures: {
            "1": {
              name: "entity.other.attribute-name.pseudo-class.css"
            },
            "2": {
              name: "punctuation.definition.entity.css"
            },
            "3": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          patterns: [
            {
              match: "(?<=[(,\\s])[A-Za-z]+(-[0-9A-Za-z]*|\\\\(?:\\h{1,6}|.))*(?=[),\\s])",
              name: "support.constant.language-range.css"
            },
            {
              begin: '"',
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.css"
                }
              },
              end: '"',
              endCaptures: {
                "0": {
                  name: "punctuation.definition.string.end.css"
                }
              },
              name: "string.quoted.double.css",
              patterns: [
                {
                  include: "#escapes"
                },
                {
                  match: '(?<=["\\s])[*A-Za-z]+(-[*0-9A-Za-z]*)*(?=["\\s])',
                  name: "support.constant.language-range.css"
                }
              ]
            },
            {
              begin: "'",
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.css"
                }
              },
              end: "'",
              endCaptures: {
                "0": {
                  name: "punctuation.definition.string.end.css"
                }
              },
              name: "string.quoted.single.css",
              patterns: [
                {
                  include: "#escapes"
                },
                {
                  match: "(?<=['\\s])[*A-Za-z]+(-[*0-9A-Za-z]*)*(?=['\\s])",
                  name: "support.constant.language-range.css"
                }
              ]
            },
            {
              include: "#commas"
            }
          ]
        },
        {
          begin: "(?i)((:)(?:not|has|matches|where|is))(\\()",
          beginCaptures: {
            "1": {
              name: "entity.other.attribute-name.pseudo-class.css"
            },
            "2": {
              name: "punctuation.definition.entity.css"
            },
            "3": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          patterns: [
            {
              include: "#selector-innards"
            }
          ]
        },
        {
          begin: "(?i)((:)nth-(?:last-)?(?:child|of-type))(\\()",
          beginCaptures: {
            "1": {
              name: "entity.other.attribute-name.pseudo-class.css"
            },
            "2": {
              name: "punctuation.definition.entity.css"
            },
            "3": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          patterns: [
            {
              match: "(?i)[-+]?(\\d+n?|n)(\\s*[-+]\\s*\\d+)?",
              name: "constant.numeric.css"
            },
            {
              match: "(?i)even|odd",
              name: "support.constant.parity.css"
            }
          ]
        }
      ]
    },
    functions: {
      patterns: [
        {
          begin: "(?i)(?<![-\\w])(calc)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.calc.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.calc.css",
          patterns: [
            {
              match: "[*/]|(?<=\\s|^)[-+](?=\\s|$)",
              name: "keyword.operator.arithmetic.css"
            },
            {
              include: "#property-values"
            }
          ]
        },
        {
          begin: "(?i)(?<![-\\w])(rgba?|hsla?|hwb|lab|oklab|lch|oklch|color)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.misc.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.color.css",
          patterns: [
            {
              include: "#property-values"
            }
          ]
        },
        {
          begin: "(?i)(?<![-\\w])((?:-(?:webkit-|moz-|o-))?(?:repeating-)?(?:linear|radial|conic)-gradient)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.gradient.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.gradient.css",
          patterns: [
            {
              match: "(?i)(?<![-\\w])(from|to|at|in|hue)(?![-\\w])",
              name: "keyword.operator.gradient.css"
            },
            {
              include: "#property-values"
            }
          ]
        },
        {
          begin: "(?i)(?<![-\\w])(-webkit-gradient)(\\()",
          beginCaptures: {
            "1": {
              name: "invalid.deprecated.gradient.function.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.gradient.invalid.deprecated.gradient.css",
          patterns: [
            {
              begin: "(?i)(?<![-\\w])(from|to|color-stop)(\\()",
              beginCaptures: {
                "1": {
                  name: "invalid.deprecated.function.css"
                },
                "2": {
                  name: "punctuation.section.function.begin.bracket.round.css"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "punctuation.section.function.end.bracket.round.css"
                }
              },
              patterns: [
                {
                  include: "#property-values"
                }
              ]
            },
            {
              include: "#property-values"
            }
          ]
        },
        {
          begin: "(?i)(?<![-\\w])(annotation|attr|blur|brightness|character-variant|clamp|contrast|counters?|cross-fade|drop-shadow|element|fit-content|format|grayscale|hue-rotate|color-mix|image-set|invert|local|max|min|minmax|opacity|ornaments|repeat|saturate|sepia|styleset|stylistic|swash|symbols|cos|sin|tan|acos|asin|atan2??|hypot|sqrt|pow|log|exp|abs|sign)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.misc.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.misc.css",
          patterns: [
            {
              match: `(?i)(?<=[",\\s]|\\*/|^)\\d+x(?=["'),\\s]|/\\*|$)`,
              name: "constant.numeric.other.density.css"
            },
            {
              include: "#property-values"
            },
            {
              match: `[^"'),\\s]+`,
              name: "variable.parameter.misc.css"
            }
          ]
        },
        {
          begin: "(?i)(?<![-\\w])(circle|ellipse|inset|polygon|rect)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.shape.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.shape.css",
          patterns: [
            {
              match: "(?i)(?<=\\s|^|\\*/)(at|round)(?=\\s|/\\*|$)",
              name: "keyword.operator.shape.css"
            },
            {
              include: "#property-values"
            }
          ]
        },
        {
          begin: "(?i)(?<![-\\w])(cubic-bezier|steps)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.timing-function.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.timing-function.css",
          patterns: [
            {
              match: "(?i)(?<![-\\w])(start|end)(?=\\s*\\)|$)",
              name: "support.constant.step-direction.css"
            },
            {
              include: "#property-values"
            }
          ]
        },
        {
          begin: "(?i)(?<![-\\w])((?:translate|scale|rotate)(?:[XYZ]|3D)?|matrix(?:3D)?|skew[XY]?|perspective)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.transform.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          patterns: [
            {
              include: "#property-values"
            }
          ]
        },
        {
          include: "#url"
        },
        {
          begin: "(?i)(?<![-\\w])(var)(\\()",
          beginCaptures: {
            "1": {
              name: "support.function.misc.css"
            },
            "2": {
              name: "punctuation.section.function.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.section.function.end.bracket.round.css"
            }
          },
          name: "meta.function.variable.css",
          patterns: [
            {
              match: "--[-A-Z_a-z[^\\x00-\\x7F]](?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*",
              name: "variable.argument.css"
            },
            {
              include: "#property-values"
            }
          ]
        }
      ]
    },
    "media-feature-keywords": {
      match: "(?i)(?<=^|[:\\s]|\\*/)(?:portrait|landscape|progressive|interlace|fullscreen|standalone|minimal-ui|browser|hover)(?=[)\\s]|$)",
      name: "support.constant.property-value.css"
    },
    "media-features": {
      captures: {
        "1": {
          name: "support.type.property-name.media.css"
        },
        "2": {
          name: "support.type.property-name.media.css"
        },
        "3": {
          name: "support.type.vendored.property-name.media.css"
        }
      },
      match: "(?i)(?<=^|[(\\s]|\\*/)(?:((?:m(?:in-|ax-))?(?:height|width|aspect-ratio|color|color-index|monochrome|resolution)|grid|scan|orientation|display-mode|hover)|((?:m(?:in-|ax-))?device-(?:height|width|aspect-ratio))|((?:[-_](?:webkit|apple|khtml|epub|moz|ms|o|xv|ah|rim|atsc|hp|tc|wap|ro)|(?:mso|prince))-[-\\w]+(?=\\s*(?:/\\*(?:[^*]|\\*[^/])*\\*/)?\\s*[):])))(?=\\s|$|[):<=>]|/\\*)"
    },
    "media-query": {
      begin: "\\G",
      end: "(?=\\s*[;{])",
      patterns: [
        {
          include: "#comment-block"
        },
        {
          include: "#escapes"
        },
        {
          include: "#media-types"
        },
        {
          match: "(?i)(?<=\\s|^|,|\\*/)(only|not)(?=[{\\s]|/\\*|$)",
          name: "keyword.operator.logical.$1.media.css"
        },
        {
          match: "(?i)(?<=\\s|^|\\*/|\\))and(?=\\s|/\\*|$)",
          name: "keyword.operator.logical.and.media.css"
        },
        {
          match: ",(?:(?:\\s*,)+|(?=\\s*[);{]))",
          name: "invalid.illegal.comma.css"
        },
        {
          include: "#commas"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.parameters.begin.bracket.round.css"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.parameters.end.bracket.round.css"
            }
          },
          patterns: [
            {
              include: "#media-features"
            },
            {
              include: "#media-feature-keywords"
            },
            {
              match: ":",
              name: "punctuation.separator.key-value.css"
            },
            {
              match: ">=|<=|[<=>]",
              name: "keyword.operator.comparison.css"
            },
            {
              captures: {
                "1": {
                  name: "constant.numeric.css"
                },
                "2": {
                  name: "keyword.operator.arithmetic.css"
                },
                "3": {
                  name: "constant.numeric.css"
                }
              },
              match: "(\\d+)\\s*(/)\\s*(\\d+)",
              name: "meta.ratio.css"
            },
            {
              include: "#numeric-values"
            },
            {
              include: "#comment-block"
            }
          ]
        }
      ]
    },
    "media-query-list": {
      begin: "(?=\\s*[^;{])",
      end: "(?=\\s*[;{])",
      patterns: [
        {
          include: "#media-query"
        }
      ]
    },
    "media-types": {
      captures: {
        "1": {
          name: "support.constant.media.css"
        },
        "2": {
          name: "invalid.deprecated.constant.media.css"
        }
      },
      match: "(?i)(?<=^|[,\\s]|\\*/)(?:(all|print|screen|speech)|(aural|braille|embossed|handheld|projection|tty|tv))(?=$|[,;{\\s]|/\\*)"
    },
    "numeric-values": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.constant.css"
            }
          },
          match: "(#)(?:\\h{3,4}|\\h{6}|\\h{8})\\b",
          name: "constant.other.color.rgb-value.hex.css"
        },
        {
          captures: {
            "1": {
              name: "keyword.other.unit.percentage.css"
            },
            "2": {
              name: "keyword.other.unit.${2:/downcase}.css"
            }
          },
          match: "(?i)(?<![-\\w])[-+]?(?:[0-9]+(?:\\.[0-9]+)?|\\.[0-9]+)(?:(?<=[0-9])E[-+]?[0-9]+)?(?:(%)|(deg|grad|rad|turn|Hz|kHz|ch|cm|em|ex|fr|in|mm|mozmm|pc|pt|px|q|rem|rch|rex|rlh|ic|ric|rcap|vh|vw|vb|vi|svh|svw|svb|svi|dvh|dvw|dvb|dvi|lvh|lvw|lvb|lvi|vmax|vmin|cqw|cqi|cqh|cqb|cqmin|cqmax|dpi|dpcm|dppx|s|ms)\\b)?",
          name: "constant.numeric.css"
        }
      ]
    },
    "property-keywords": {
      patterns: [
        {
          match: "(?i)(?<![-\\w])(above|absolute|active|add|additive|after-edge|alias|all|all-petite-caps|all-scroll|all-small-caps|alpha|alphabetic|alternate|alternate-reverse|always|antialiased|auto|auto-fill|auto-fit|auto-pos|available|avoid|avoid-column|avoid-page|avoid-region|backwards|balance|baseline|before-edge|below|bevel|bidi-override|blink|block|block-axis|block-start|block-end|bold|bolder|border|border-box|both|bottom|bottom-outside|break-all|break-word|bullets|butt|capitalize|caption|cell|center|central|char|circle|clip|clone|close-quote|closest-corner|closest-side|col-resize|collapse|color|color-burn|color-dodge|column|column-reverse|common-ligatures|compact|condensed|contain|content|content-box|contents|context-menu|contextual|copy|cover|crisp-edges|crispEdges|crosshair|cyclic|dark|darken|dashed|decimal|default|dense|diagonal-fractions|difference|digits|disabled|disc|discretionary-ligatures|distribute|distribute-all-lines|distribute-letter|distribute-space|dot|dotted|double|double-circle|downleft|downright|e-resize|each-line|ease|ease-in|ease-in-out|ease-out|economy|ellipse|ellipsis|embed|end|evenodd|ew-resize|exact|exclude|exclusion|expanded|extends|extra-condensed|extra-expanded|fallback|farthest-corner|farthest-side|fill|fill-available|fill-box|filled|fit-content|fixed|flat|flex|flex-end|flex-start|flip|flow-root|forwards|freeze|from-image|full-width|geometricPrecision|georgian|grab|grabbing|grayscale|grid|groove|hand|hanging|hard-light|help|hidden|hide|historical-forms|historical-ligatures|horizontal|horizontal-tb|hue|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|infinite|inherit|initial|inline|inline-axis|inline-block|inline-end|inline-flex|inline-grid|inline-list-item|inline-start|inline-table|inset|inside|inter-character|inter-ideograph|inter-word|intersect|invert|isolate|isolate-override|italic|jis04|jis78|jis83|jis90|justify|justify-all|kannada|keep-all|landscape|larger??|left|light|lighten|lighter|line|line-edge|line-through|linear|linearRGB|lining-nums|list-item|local|loose|lowercase|lr|lr-tb|ltr|luminance|luminosity|main-size|mandatory|manipulation|manual|margin-box|match-parent|match-source|mathematical|max-content|medium|menu|message-box|middle|min-content|miter|mixed|move|multiply|n-resize|narrower|ne-resize|nearest-neighbor|nesw-resize|newspaper|no-change|no-clip|no-close-quote|no-common-ligatures|no-contextual|no-discretionary-ligatures|no-drop|no-historical-ligatures|no-open-quote|no-repeat|none|nonzero|normal|not-allowed|nowrap|ns-resize|numbers|numeric|nw-resize|nwse-resize|oblique|oldstyle-nums|open|open-quote|optimizeLegibility|optimizeQuality|optimizeSpeed|optional|ordinal|outset|outside|over|overlay|overline|padding|padding-box|page|painted|pan-down|pan-left|pan-right|pan-up|pan-x|pan-y|paused|petite-caps|pixelated|plaintext|pointer|portrait|pre|pre-line|pre-wrap|preserve-3d|progress|progressive|proportional-nums|proportional-width|proximity|radial|recto|region|relative|remove|repeat|repeat-[xy]|reset-size|reverse|revert|ridge|right|rl|rl-tb|round|row|row-resize|row-reverse|row-severse|rtl|ruby|ruby-base|ruby-base-container|ruby-text|ruby-text-container|run-in|running|s-resize|saturation|scale-down|screen|scroll|scroll-position|se-resize|semi-condensed|semi-expanded|separate|sesame|show|sideways|sideways-left|sideways-lr|sideways-right|sideways-rl|simplified|slashed-zero|slice|small|small-caps|small-caption|smaller|smooth|soft-light|solid|space|space-around|space-between|space-evenly|spell-out|square|sRGB|stacked-fractions|start|static|status-bar|swap|step-end|step-start|sticky|stretch|strict|stroke|stroke-box|style|sub|subgrid|subpixel-antialiased|subtract|super|sw-resize|symbolic|table|table-caption|table-cell|table-column|table-column-group|table-footer-group|table-header-group|table-row|table-row-group|tabular-nums|tb|tb-rl|text|text-after-edge|text-before-edge|text-bottom|text-top|thick|thin|titling-caps|top|top-outside|touch|traditional|transparent|triangle|ultra-condensed|ultra-expanded|under|underline|unicase|unset|upleft|uppercase|upright|use-glyph-orientation|use-script|verso|vertical|vertical-ideographic|vertical-lr|vertical-rl|vertical-text|view-box|visible|visibleFill|visiblePainted|visibleStroke|w-resize|wait|wavy|weight|whitespace|wider|words|wrap|wrap-reverse|x|x-large|x-small|xx-large|xx-small|y|zero|zoom-in|zoom-out)(?![-\\w])",
          name: "support.constant.property-value.css"
        },
        {
          match: "(?i)(?<![-\\w])(arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|cjk-ideographic|decimal|decimal-leading-zero|devanagari|disc|disclosure-closed|disclosure-open|ethiopic-halehame-am|ethiopic-halehame-ti-e[rt]|ethiopic-numeric|georgian|gujarati|gurmukhi|hangul|hangul-consonant|hebrew|hiragana|hiragana-iroha|japanese-formal|japanese-informal|kannada|katakana|katakana-iroha|khmer|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian|upper-latin|upper-roman|urdu)(?![-\\w])",
          name: "support.constant.property-value.list-style-type.css"
        },
        {
          match: "(?<![-\\w])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[-A-Za-z]+",
          name: "support.constant.vendored.property-value.css"
        },
        {
          match: "(?<![-\\w])(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system-ui|system|tahoma|times|trebuchet|ui-monospace|ui-rounded|ui-sans-serif|ui-serif|utopia|verdana|webdings|sans-serif|serif|monospace)(?![-\\w])",
          name: "support.constant.font-name.css"
        }
      ]
    },
    "property-names": {
      patterns: [
        {
          match: "(?i)(?<![-\\w])(?:accent-color|additive-symbols|align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|aspect-ratio|backdrop-filter|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-position-[xy]|background-repeat|background-size|bleed|block-size|border|border-block-end|border-block-end-color|border-block-end-style|border-block-end-width|border-block-start|border-block-start-color|border-block-start-style|border-block-start-width|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-end-end-radius|border-end-start-radius|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-inline-end|border-inline-end-color|border-inline-end-style|border-inline-end-width|border-inline-start|border-inline-start-color|border-inline-start-style|border-inline-start-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-start-end-radius|border-start-start-radius|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|break-after|break-before|break-inside|caption-side|caret-color|clear|clip|clip-path|clip-rule|color|color-adjust|color-interpolation-filters|color-scheme|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|contain|container|container-name|container-type|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|enable-background|fallback|fill|fill-opacity|fill-rule|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|flood-color|flood-opacity|font|font-display|font-family|font-feature-settings|font-kerning|font-language-override|font-optical-sizing|font-size|font-size-adjust|font-stretch|font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-variation-settings|font-weight|gap|glyph-orientation-horizontal|glyph-orientation-vertical|grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start|grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows|hanging-punctuation|height|hyphens|image-orientation|image-rendering|image-resolution|ime-mode|initial-letter|initial-letter-align|inline-size|inset|inset-block|inset-block-end|inset-block-start|inset-inline|inset-inline-end|inset-inline-start|isolation|justify-content|justify-items|justify-self|kerning|left|letter-spacing|lighting-color|line-break|line-clamp|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-block|margin-block-end|margin-block-start|margin-bottom|margin-inline|margin-inline-end|margin-inline-start|margin-left|margin-right|margin-top|marker-end|marker-mid|marker-start|marks|mask|mask-border|mask-border-mode|mask-border-outset|mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-block-size|max-height|max-inline-size|max-lines|max-width|max-zoom|min-block-size|min-height|min-inline-size|min-width|min-zoom|mix-blend-mode|negative|object-fit|object-position|offset|offset-anchor|offset-distance|offset-path|offset-position|offset-rotation|opacity|order|orientation|orphans|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-anchor|overflow-block|overflow-inline|overflow-wrap|overflow-[xy]|overscroll-behavior|overscroll-behavior-block|overscroll-behavior-inline|overscroll-behavior-[xy]|pad|padding|padding-block|padding-block-end|padding-block-start|padding-bottom|padding-inline|padding-inline-end|padding-inline-start|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside|paint-order|perspective|perspective-origin|place-content|place-items|place-self|pointer-events|position|prefix|quotes|range|resize|right|rotate|row-gap|ruby-align|ruby-merge|ruby-position|scale|scroll-behavior|scroll-margin|scroll-margin-block|scroll-margin-block-end|scroll-margin-block-start|scroll-margin-bottom|scroll-margin-inline|scroll-margin-inline-end|scroll-margin-inline-start|scroll-margin-left|scroll-margin-right|scroll-margin-top|scroll-padding|scroll-padding-block|scroll-padding-block-end|scroll-padding-block-start|scroll-padding-bottom|scroll-padding-inline|scroll-padding-inline-end|scroll-padding-inline-start|scroll-padding-left|scroll-padding-right|scroll-padding-top|scroll-snap-align|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-stop|scroll-snap-type|scrollbar-color|scrollbar-gutter|scrollbar-width|shape-image-threshold|shape-margin|shape-outside|shape-rendering|size|speak-as|src|stop-color|stop-opacity|stroke|stroke-dasharray|stroke-dashoffset|stroke-linecap|stroke-linejoin|stroke-miterlimit|stroke-opacity|stroke-width|suffix|symbols|system|tab-size|table-layout|text-align|text-align-last|text-anchor|text-combine-upright|text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-skip-ink|text-decoration-style|text-decoration-thickness|text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation|text-overflow|text-rendering|text-shadow|text-size-adjust|text-transform|text-underline-offset|text-underline-position|top|touch-action|transform|transform-box|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|translate|unicode-bidi|unicode-range|user-select|user-zoom|vertical-align|visibility|white-space|widows|width|will-change|word-break|word-spacing|word-wrap|writing-mode|z-index|zoom|alignment-baseline|baseline-shift|clip-rule|color-interpolation|color-interpolation-filters|color-profile|color-rendering|cx|cy|dominant-baseline|enable-background|fill|fill-opacity|fill-rule|flood-color|flood-opacity|glyph-orientation-horizontal|glyph-orientation-vertical|height|kerning|lighting-color|marker-end|marker-mid|marker-start|rx??|ry|shape-rendering|stop-color|stop-opacity|stroke|stroke-dasharray|stroke-dashoffset|stroke-linecap|stroke-linejoin|stroke-miterlimit|stroke-opacity|stroke-width|text-anchor|width|[xy]|adjust|after|align|align-last|alignment|alignment-adjust|appearance|attachment|azimuth|background-break|balance|baseline|before|bidi|binding|bookmark|bookmark-label|bookmark-level|bookmark-target|border-length|bottom-color|bottom-left-radius|bottom-right-radius|bottom-style|bottom-width|box|box-align|box-direction|box-flex|box-flex-group|box-lines|box-ordinal-group|box-orient|box-pack|break|character|collapse|column|column-break-after|column-break-before|count|counter|crop|cue|cue-after|cue-before|decoration|decoration-break|delay|display-model|display-role|down|drop|drop-initial-after-adjust|drop-initial-after-align|drop-initial-before-adjust|drop-initial-before-align|drop-initial-size|drop-initial-value|duration|elevation|emphasis|family|fit|fit-position|flex-group|float-offset|gap|grid-columns|grid-rows|hanging-punctuation|header|hyphenate|hyphenate-after|hyphenate-before|hyphenate-character|hyphenate-lines|hyphenate-resource|icon|image|increment|indent|index|initial-after-adjust|initial-after-align|initial-before-adjust|initial-before-align|initial-size|initial-value|inline-box-align|iteration-count|justify|label|left-color|left-style|left-width|length|level|line|line-stacking|line-stacking-ruby|line-stacking-shift|line-stacking-strategy|lines|list|mark|mark-after|mark-before|marks|marquee|marquee-direction|marquee-play-count|marquee-speed|marquee-style|max|min|model|move-to|name|nav|nav-down|nav-index|nav-left|nav-right|nav-up|new|numeral|offset|ordinal-group|orient|origin|overflow-style|overhang|pack|page|page-policy|pause|pause-after|pause-before|phonemes|pitch|pitch-range|play-count|play-during|play-state|point|presentation|presentation-level|profile|property|punctuation|punctuation-trim|radius|rate|rendering-intent|repeat|replace|reset|resolution|resource|respond-to|rest|rest-after|rest-before|richness|right-color|right-style|right-width|role|rotation|rotation-point|rows|ruby|ruby-overhang|ruby-span|rule|rule-color|rule-style|rule-width|shadow|size|size-adjust|sizing|space|space-collapse|spacing|span|speak|speak-header|speak-numeral|speak-punctuation|speech|speech-rate|speed|stacking|stacking-ruby|stacking-shift|stacking-strategy|stress|stretch|string-set|style|style-image|style-position|style-type|target|target-name|target-new|target-position|text|text-height|text-justify|text-outline|text-replace|text-wrap|timing-function|top-color|top-left-radius|top-right-radius|top-style|top-width|trim|unicode|up|user-select|variant|voice|voice-balance|voice-duration|voice-family|voice-pitch|voice-pitch-range|voice-rate|voice-stress|voice-volume|volume|weight|white|white-space-collapse|word|wrap)(?![-\\w])",
          name: "support.type.property-name.css"
        },
        {
          match: "(?<![-\\w])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[-A-Za-z]+",
          name: "support.type.vendored.property-name.css"
        }
      ]
    },
    "property-values": {
      patterns: [
        {
          include: "#commas"
        },
        {
          include: "#comment-block"
        },
        {
          include: "#escapes"
        },
        {
          include: "#functions"
        },
        {
          include: "#property-keywords"
        },
        {
          include: "#unicode-range"
        },
        {
          include: "#numeric-values"
        },
        {
          include: "#color-keywords"
        },
        {
          include: "#string"
        },
        {
          match: "!\\s*important(?![-\\w])",
          name: "keyword.other.important.css"
        }
      ]
    },
    "pseudo-classes": {
      captures: {
        "1": {
          name: "punctuation.definition.entity.css"
        },
        "2": {
          name: "invalid.illegal.colon.css"
        }
      },
      match: "(?i)(:)(:*)(?:active|any-link|checked|default|disabled|empty|enabled|first|(?:first|last|only)-(?:child|of-type)|focus|focus-visible|focus-within|fullscreen|host|hover|in-range|indeterminate|invalid|left|link|optional|out-of-range|read-only|read-write|required|right|root|scope|target|unresolved|valid|visited)(?![-\\w]|\\s*[;}])",
      name: "entity.other.attribute-name.pseudo-class.css"
    },
    "pseudo-elements": {
      captures: {
        "1": {
          name: "punctuation.definition.entity.css"
        },
        "2": {
          name: "punctuation.definition.entity.css"
        }
      },
      match: "(?i)(?:(::?)(?:after|before|first-letter|first-line|(?:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[-a-z]+)|(::)(?:backdrop|content|grammar-error|marker|placeholder|selection|shadow|spelling-error))(?![-\\w]|\\s*[;}])",
      name: "entity.other.attribute-name.pseudo-element.css"
    },
    "rule-list": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.section.property-list.begin.bracket.curly.css"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.section.property-list.end.bracket.curly.css"
        }
      },
      name: "meta.property-list.css",
      patterns: [
        {
          include: "#rule-list-innards"
        }
      ]
    },
    "rule-list-innards": {
      patterns: [
        {
          include: "#comment-block"
        },
        {
          include: "#escapes"
        },
        {
          include: "#font-features"
        },
        {
          match: "(?<![-\\w])--[-A-Z_a-z[^\\x00-\\x7F]](?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*",
          name: "variable.css"
        },
        {
          begin: "(?<![-A-Za-z])(?=[-A-Za-z])",
          end: "$|(?![-A-Za-z])",
          name: "meta.property-name.css",
          patterns: [
            {
              include: "#property-names"
            }
          ]
        },
        {
          begin: "(:)\\s*",
          beginCaptures: {
            "1": {
              name: "punctuation.separator.key-value.css"
            }
          },
          contentName: "meta.property-value.css",
          end: "\\s*(;)|\\s*(?=[)}])",
          endCaptures: {
            "1": {
              name: "punctuation.terminator.rule.css"
            }
          },
          patterns: [
            {
              include: "#comment-block"
            },
            {
              include: "#property-values"
            }
          ]
        },
        {
          match: ";",
          name: "punctuation.terminator.rule.css"
        }
      ]
    },
    selector: {
      begin: "(?=\\|?(?:[-#*.:A-\\[_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.)))",
      end: "(?=\\s*[)/@{])",
      name: "meta.selector.css",
      patterns: [
        {
          include: "#selector-innards"
        }
      ]
    },
    "selector-innards": {
      patterns: [
        {
          include: "#comment-block"
        },
        {
          include: "#commas"
        },
        {
          include: "#escapes"
        },
        {
          include: "#combinators"
        },
        {
          captures: {
            "1": {
              name: "entity.other.namespace-prefix.css"
            },
            "2": {
              name: "punctuation.separator.css"
            }
          },
          match: "(?:^|(?<=[(,;}\\s]))(?![-*\\w]+\\|(?![-#*.:A-\\[_a-z[^\\x00-\\x7F]]))([-A-Z_a-z[^\\x00-\\x7F]](?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*|\\*)?(\\|)"
        },
        {
          include: "#tag-names"
        },
        {
          match: "\\*",
          name: "entity.name.tag.wildcard.css"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.css"
            },
            "2": {
              patterns: [
                {
                  include: "#escapes"
                }
              ]
            }
          },
          match: '(?<![-@\\w])([#.])((?:-?[0-9]|-(?=$|[#)+,.:>\\[{|~\\s]|/\\*)|(?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*(?:[]!"%-(*;<?@^`|}]|/(?!\\*))+)(?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))*)',
          name: "invalid.illegal.bad-identifier.css"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.css"
            },
            "2": {
              patterns: [
                {
                  include: "#escapes"
                }
              ]
            }
          },
          match: "(\\.)((?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))+)(?=$|[#)+,.:>\\[{|~\\s]|/\\*)",
          name: "entity.other.attribute-name.class.css"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.css"
            },
            "2": {
              patterns: [
                {
                  include: "#escapes"
                }
              ]
            }
          },
          match: "(#)(-?(?![0-9])(?:[-0-9A-Z_a-z[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))+)(?=$|[#)+,.:>\\[{|~\\s]|/\\*)",
          name: "entity.other.attribute-name.id.css"
        },
        {
          begin: "\\[",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.entity.begin.bracket.square.css"
            }
          },
          end: "]",
          endCaptures: {
            "0": {
              name: "punctuation.definition.entity.end.bracket.square.css"
            }
          },
          name: "meta.attribute-selector.css",
          patterns: [
            {
              include: "#comment-block"
            },
            {
              include: "#string"
            },
            {
              captures: {
                "1": {
                  name: "storage.modifier.ignore-case.css"
                }
              },
              match: `(?<=["'\\s]|^|\\*/)\\s*([Ii])\\s*(?=[]\\s]|/\\*|$)`
            },
            {
              captures: {
                "1": {
                  name: "string.unquoted.attribute-value.css",
                  patterns: [
                    {
                      include: "#escapes"
                    }
                  ]
                }
              },
              match: `(?<==)\\s*((?!/\\*)(?:[^]"'\\\\\\s]|\\\\.)+)`
            },
            {
              include: "#escapes"
            },
            {
              match: "[$*^|~]?=",
              name: "keyword.operator.pattern.css"
            },
            {
              match: "\\|",
              name: "punctuation.separator.css"
            },
            {
              captures: {
                "1": {
                  name: "entity.other.namespace-prefix.css",
                  patterns: [
                    {
                      include: "#escapes"
                    }
                  ]
                }
              },
              match: "(-?(?!\\d)(?:[-\\w[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))+|\\*)(?=\\|(?![=\\s]|$|])(?:-?(?!\\d)|[-\\\\\\w[^\\x00-\\x7F]]))"
            },
            {
              captures: {
                "1": {
                  name: "entity.other.attribute-name.css",
                  patterns: [
                    {
                      include: "#escapes"
                    }
                  ]
                }
              },
              match: "(-?(?!\\d)(?>[-\\w[^\\x00-\\x7F]]|\\\\(?:\\h{1,6}|.))+)\\s*(?=[]$*=^|~]|/\\*)"
            }
          ]
        },
        {
          include: "#pseudo-classes"
        },
        {
          include: "#pseudo-elements"
        },
        {
          include: "#functional-pseudo-classes"
        },
        {
          match: "(?<![-@\\w])(?=[a-z]\\w*-)(?:(?![A-Z])[-\\w])+(?![-(\\w])",
          name: "entity.name.tag.custom.css"
        }
      ]
    },
    string: {
      patterns: [
        {
          begin: '"',
          beginCaptures: {
            "0": {
              name: "punctuation.definition.string.begin.css"
            }
          },
          end: '"|(?<!\\\\)(?=$|\\n)',
          endCaptures: {
            "0": {
              name: "punctuation.definition.string.end.css"
            }
          },
          name: "string.quoted.double.css",
          patterns: [
            {
              begin: '(?:\\G|^)(?=(?:[^"\\\\]|\\\\.)+$)',
              end: "$",
              name: "invalid.illegal.unclosed.string.css",
              patterns: [
                {
                  include: "#escapes"
                }
              ]
            },
            {
              include: "#escapes"
            }
          ]
        },
        {
          begin: "'",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.string.begin.css"
            }
          },
          end: "'|(?<!\\\\)(?=$|\\n)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.string.end.css"
            }
          },
          name: "string.quoted.single.css",
          patterns: [
            {
              begin: "(?:\\G|^)(?=(?:[^'\\\\]|\\\\.)+$)",
              end: "$",
              name: "invalid.illegal.unclosed.string.css",
              patterns: [
                {
                  include: "#escapes"
                }
              ]
            },
            {
              include: "#escapes"
            }
          ]
        }
      ]
    },
    "tag-names": {
      match: "(?i)(?<![-:\\w])(?:a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|bgsound|big|blink|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|content|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|element|em|embed|fieldset|figcaption|figure|font|footer|form|frame|frameset|h[1-6]|head|header|hgroup|hr|html|i|iframe|image|img|input|ins|isindex|kbd|keygen|label|legend|li|link|listing|main|map|mark|marquee|math|menu|menuitem|meta|meter|multicol|nav|nextid|nobr|noembed|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|plaintext|pre|progress|q|rb|rp|rtc??|ruby|s|samp|script|section|select|shadow|slot|small|source|spacer|span|strike|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|ul??|var|video|wbr|xmp|altGlyph|altGlyphDef|altGlyphItem|animate|animateColor|animateMotion|animateTransform|circle|clipPath|color-profile|cursor|defs|desc|discard|ellipse|feBlend|feColorMatrix|feComponentTransfer|feComposite|feConvolveMatrix|feDiffuseLighting|feDisplacementMap|feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur|feImage|feMerge|feMergeNode|feMorphology|feOffset|fePointLight|feSpecularLighting|feSpotLight|feTile|feTurbulence|filter|font-face|font-face-format|font-face-name|font-face-src|font-face-uri|foreignObject|g|glyph|glyphRef|hatch|hatchpath|hkern|line|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|metadata|missing-glyph|mpath|path|pattern|polygon|polyline|radialGradient|rect|set|solidcolor|stop|svg|switch|symbol|text|textPath|tref|tspan|use|view|vkern|annotation|annotation-xml|maction|maligngroup|malignmark|math|menclose|merror|mfenced|mfrac|mglyph|mi|mlabeledtr|mlongdiv|mmultiscripts|mn|mo|mover|mpadded|mphantom|mroot|mrow|ms|mscarries|mscarry|msgroup|msline|mspace|msqrt|msrow|mstack|mstyle|msub|msubsup|msup|mtable|mtd|mtext|mtr|munder|munderover|semantics)(?=[#)+,.:>\\[{|~\\s]|/\\*|$)",
      name: "entity.name.tag.css"
    },
    "unicode-range": {
      captures: {
        "0": {
          name: "constant.other.unicode-range.css"
        },
        "1": {
          name: "punctuation.separator.dash.unicode-range.css"
        }
      },
      match: "(?<![-\\w])[Uu]\\+[?\\h]{1,6}(?:(-)\\h{1,6})?(?![-\\w])"
    },
    url: {
      begin: "(?i)(?<![-@\\w])(url)(\\()",
      beginCaptures: {
        "1": {
          name: "support.function.url.css"
        },
        "2": {
          name: "punctuation.section.function.begin.bracket.round.css"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "punctuation.section.function.end.bracket.round.css"
        }
      },
      name: "meta.function.url.css",
      patterns: [
        {
          match: `[^"')\\s]+`,
          name: "variable.parameter.url.css"
        },
        {
          include: "#string"
        },
        {
          include: "#comment-block"
        },
        {
          include: "#escapes"
        }
      ]
    }
  },
  scopeName: "source.css"
};
var javascript_default = {
  displayName: "JavaScript",
  name: "javascript",
  patterns: [
    {
      include: "#directives"
    },
    {
      include: "#statements"
    },
    {
      include: "#shebang"
    }
  ],
  repository: {
    "access-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.js"
    },
    "after-operator-block-as-object-literal": {
      begin: "(?<!\\+\\+|--)(?<=[!(+,:=>?\\[]|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^yield|[^$._[:alnum:]]yield|^throw|[^$._[:alnum:]]throw|^in|[^$._[:alnum:]]in|^of|[^$._[:alnum:]]of|^typeof|[^$._[:alnum:]]typeof|&&|\\|\\||\\*)\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.block.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      name: "meta.objectliteral.js",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.js"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.js"
        }
      },
      patterns: [
        {
          include: "#binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.js"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.js"
        }
      },
      patterns: [
        {
          include: "#binding-element-const"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-literal": {
      begin: "\\s*(\\[)",
      beginCaptures: {
        "1": {
          name: "meta.brace.square.js"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.js"
        }
      },
      name: "meta.array.literal.js",
      patterns: [
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "arrow-function": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.async.js"
            },
            "2": {
              name: "variable.parameter.js"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async)\\s+)?([$_[:alpha:]][$_[:alnum:]]*)\\s*(?==>)",
          name: "meta.arrow.js"
        },
        {
          begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async))?((?<![]!)}])\\s*(?=((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js"
            }
          },
          end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
          name: "meta.arrow.js",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            },
            {
              include: "#function-parameters"
            },
            {
              include: "#arrow-return-type"
            },
            {
              include: "#possibly-arrow-return-type"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.js"
            }
          },
          end: "((?<=[}\\S])(?<!=>)|((?!\\{)(?=\\S)))(?!/[*/])",
          name: "meta.arrow.js",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#decl-block"
            },
            {
              include: "#expression"
            }
          ]
        }
      ]
    },
    "arrow-return-type": {
      begin: "(?<=\\))\\s*(:)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.annotation.js"
        }
      },
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      name: "meta.return.type.arrow.js",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "arrow-return-type-body": {
      patterns: [
        {
          begin: "(?<=:)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "async-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(async)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.async.js"
    },
    "binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#array-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#array-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "boolean-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))true(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.true.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))false(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.false.js"
        }
      ]
    },
    brackets: {
      patterns: [
        {
          begin: "\\{",
          end: "}|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        },
        {
          begin: "\\[",
          end: "]|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    cast: {
      patterns: [
        {
          include: "#jsx"
        }
      ]
    },
    "class-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(class)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "storage.modifier.js"
        },
        "4": {
          name: "storage.type.class.js"
        }
      },
      end: "(?<=})",
      name: "meta.class.js",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-declaration-or-expression-patterns": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.class.js"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    "class-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(class)\\b(?=\\s+|[<{]|/[*/])",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js"
        },
        "2": {
          name: "storage.type.class.js"
        }
      },
      end: "(?<=})",
      name: "meta.class.js",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-or-interface-body": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#decorator"
        },
        {
          begin: "(?<=:)\\s*",
          end: "(?=[-\\])+,:;}\\s]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#string"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#access-modifier"
        },
        {
          include: "#property-accessor"
        },
        {
          include: "#async-modifier"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        }
      ]
    },
    "class-or-interface-heritage": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(extends|implements)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js"
        }
      },
      end: "(?=\\{)",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.js"
            },
            "2": {
              name: "punctuation.accessor.js"
            },
            "3": {
              name: "punctuation.accessor.optional.js"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))(?=\\s*[$_[:alpha:]][$_[:alnum:]]*(\\s*\\??\\.\\s*[$_[:alpha:]][$_[:alnum:]]*)*\\s*)"
        },
        {
          captures: {
            "1": {
              name: "entity.other.inherited-class.js"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    comment: {
      patterns: [
        {
          begin: "/\\*\\*(?!/)",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.comment.js"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.js"
            }
          },
          name: "comment.block.documentation.js",
          patterns: [
            {
              include: "#docblock"
            }
          ]
        },
        {
          begin: "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.comment.js"
            },
            "2": {
              name: "storage.type.internaldeclaration.js"
            },
            "3": {
              name: "punctuation.decorator.internaldeclaration.js"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.js"
            }
          },
          name: "comment.block.js"
        },
        {
          begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
          beginCaptures: {
            "1": {
              name: "punctuation.whitespace.comment.leading.js"
            },
            "2": {
              name: "comment.line.double-slash.js"
            },
            "3": {
              name: "punctuation.definition.comment.js"
            },
            "4": {
              name: "storage.type.internaldeclaration.js"
            },
            "5": {
              name: "punctuation.decorator.internaldeclaration.js"
            }
          },
          contentName: "comment.line.double-slash.js",
          end: "(?=$)"
        }
      ]
    },
    "control-statement": {
      patterns: [
        {
          include: "#switch-statement"
        },
        {
          include: "#for-loop"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(catch|finally|throw|try)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.trycatch.js"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.loop.js"
            },
            "2": {
              name: "entity.name.label.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|goto)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|do|goto|while)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.loop.js"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(return)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "0": {
              name: "keyword.control.flow.js"
            }
          },
          end: "(?=[;}]|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default|switch)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.switch.js"
        },
        {
          include: "#if-statement"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(else|if)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.conditional.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(with)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.with.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(package)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(debugger)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.other.debugger.js"
        }
      ]
    },
    "decl-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      name: "meta.block.js",
      patterns: [
        {
          include: "#statements"
        }
      ]
    },
    declaration: {
      patterns: [
        {
          include: "#decorator"
        },
        {
          include: "#var-expr"
        },
        {
          include: "#function-declaration"
        },
        {
          include: "#class-declaration"
        },
        {
          include: "#interface-declaration"
        },
        {
          include: "#enum-declaration"
        },
        {
          include: "#namespace-declaration"
        },
        {
          include: "#type-alias-declaration"
        },
        {
          include: "#import-equals-declaration"
        },
        {
          include: "#import-declaration"
        },
        {
          include: "#export-declaration"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(declare|export)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.js"
        }
      ]
    },
    decorator: {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))@",
      beginCaptures: {
        "0": {
          name: "punctuation.decorator.js"
        }
      },
      end: "(?=\\s)",
      name: "meta.decorator.js",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "destructuring-const": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.js",
          patterns: [
            {
              include: "#object-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.js",
          patterns: [
            {
              include: "#array-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-parameter": {
      patterns: [
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\{)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.js"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.object.js"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.object.js"
            }
          },
          name: "meta.parameter.object-binding-pattern.js",
          patterns: [
            {
              include: "#parameter-object-binding-element"
            }
          ]
        },
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\[)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.js"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.array.js"
            }
          },
          end: "]",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.array.js"
            }
          },
          name: "meta.paramter.array-binding-pattern.js",
          patterns: [
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "destructuring-parameter-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "variable.parameter.js"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.js",
          patterns: [
            {
              include: "#object-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.js",
          patterns: [
            {
              include: "#array-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-variable-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "meta.definition.variable.js variable.other.readwrite.js"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable-rest-const": {
      captures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "meta.definition.variable.js variable.other.constant.js"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    directives: {
      begin: "^(///)\\s*(?=<(reference|amd-dependency|amd-module)(\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\s*=\\s*(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))+\\s*/>\\s*$)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.comment.js"
        }
      },
      end: "(?=$)",
      name: "comment.line.triple-slash.directive.js",
      patterns: [
        {
          begin: "(<)(reference|amd-dependency|amd-module)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.directive.js"
            },
            "2": {
              name: "entity.name.tag.directive.js"
            }
          },
          end: "/>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.directive.js"
            }
          },
          name: "meta.tag.js",
          patterns: [
            {
              match: "path|types|no-default-lib|lib|name|resolution-mode",
              name: "entity.other.attribute-name.directive.js"
            },
            {
              match: "=",
              name: "keyword.operator.assignment.js"
            },
            {
              include: "#string"
            }
          ]
        }
      ]
    },
    docblock: {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.access-type.jsdoc"
            }
          },
          match: "((@)a(?:ccess|pi))\\s+(p(?:rivate|rotected|ublic))\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "punctuation.definition.bracket.angle.begin.jsdoc"
            },
            "5": {
              name: "constant.other.email.link.underline.jsdoc"
            },
            "6": {
              name: "punctuation.definition.bracket.angle.end.jsdoc"
            }
          },
          match: "((@)author)\\s+([^*/<>@\\s](?:[^*/<>@]|\\*[^/])*)(?:\\s*(<)([^>\\s]+)(>))?"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "keyword.operator.control.jsdoc"
            },
            "5": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)borrows)\\s+((?:[^*/@\\s]|\\*[^/])+)\\s+(as)\\s+((?:[^*/@\\s]|\\*[^/])+)"
        },
        {
          begin: "((@)example)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=@|\\*/)",
          name: "meta.example.jsdoc",
          patterns: [
            {
              match: "^\\s\\*\\s+"
            },
            {
              begin: "\\G(<)caption(>)",
              beginCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              },
              contentName: "constant.other.description.jsdoc",
              end: "(</)caption(>)|(?=\\*/)",
              endCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              }
            },
            {
              captures: {
                "0": {
                  name: "source.embedded.js"
                }
              },
              match: "[^*@\\s](?:[^*]|\\*[^/])*"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.symbol-type.jsdoc"
            }
          },
          match: "((@)kind)\\s+(class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.link.underline.jsdoc"
            },
            "4": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)see)\\s+(?:((?=https?://)(?:[^*\\s]|\\*[^/])+)|((?!https?://|(?:\\[[^]\\[]*])?\\{@(?:link|linkcode|linkplain|tutorial)\\b)(?:[^*/@\\s]|\\*[^/])+))"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)template)\\s+([$A-Z_a-z][]$.\\[\\w]*(?:\\s*,\\s*[$A-Z_a-z][]$.\\[\\w]*)*)"
        },
        {
          begin: "((@)template)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:arg|argument|const|constant|member|namespace|param|var))\\s+([$A-Z_a-z][]$.\\[\\w]*)"
        },
        {
          begin: "((@)typedef)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "(?:[^*/@\\s]|\\*[^/])+",
              name: "entity.name.type.instance.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            },
            {
              captures: {
                "1": {
                  name: "punctuation.definition.optional-value.begin.bracket.square.jsdoc"
                },
                "2": {
                  name: "keyword.operator.assignment.jsdoc"
                },
                "3": {
                  name: "source.embedded.js"
                },
                "4": {
                  name: "punctuation.definition.optional-value.end.bracket.square.jsdoc"
                },
                "5": {
                  name: "invalid.illegal.syntax.jsdoc"
                }
              },
              match: `(\\[)\\s*[$\\w]+(?:(?:\\[])?\\.[$\\w]+)*(?:\\s*(=)\\s*((?>"(?:\\*(?!/)|\\\\(?!")|[^*\\\\])*?"|'(?:\\*(?!/)|\\\\(?!')|[^*\\\\])*?'|\\[(?:\\*(?!/)|[^*])*?]|(?:\\*(?!/)|\\s(?!\\s*])|\\[.*?(?:]|(?=\\*/))|[^]*\\[\\s])*)*))?\\s*(?:(])((?:[^*\\s]|\\*[^/\\s])+)?|(?=\\*/))`,
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:define|enum|exception|export|extends|lends|implements|modifies|namespace|private|protected|returns?|satisfies|suppress|this|throws|type|yields?))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)(?:alias|augments|callback|constructs|emits|event|fires|exports?|extends|external|function|func|host|lends|listens|interface|memberof!?|method|module|mixes|mixin|name|requires|see|this|typedef|uses))\\s+((?:[^*@{}\\s]|\\*[^/])+)"
        },
        {
          begin: `((@)(?:default(?:value)?|license|version))\\s+((["']))`,
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            },
            "4": {
              name: "punctuation.definition.string.begin.jsdoc"
            }
          },
          contentName: "variable.other.jsdoc",
          end: "(\\3)|(?=$|\\*/)",
          endCaptures: {
            "0": {
              name: "variable.other.jsdoc"
            },
            "1": {
              name: "punctuation.definition.string.end.jsdoc"
            }
          }
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:default(?:value)?|license|tutorial|variation|version))\\s+([^*\\s]+)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "(@)(?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception|exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func|function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc|inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method|mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects|override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce|yields?)\\b",
          name: "storage.type.class.jsdoc"
        },
        {
          include: "#inline-tags"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "((@)[$_[:alpha:]][$_[:alnum:]]*)(?=\\s+)"
        }
      ]
    },
    "enum-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:\\b(const)\\s+)?\\b(enum)\\s+([$_[:alpha:]][$_[:alnum:]]*)",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "storage.modifier.js"
        },
        "4": {
          name: "storage.type.enum.js"
        },
        "5": {
          name: "entity.name.type.enum.js"
        }
      },
      end: "(?<=})",
      name: "meta.enum.declaration.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.js"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.block.js"
            }
          },
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "([$_[:alpha:]][$_[:alnum:]]*)",
              beginCaptures: {
                "0": {
                  name: "variable.other.enummember.js"
                }
              },
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              begin: "(?=(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+])))",
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#string"
                },
                {
                  include: "#array-literal"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "export-declaration": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.export.js"
            },
            "2": {
              name: "keyword.control.as.js"
            },
            "3": {
              name: "storage.type.namespace.js"
            },
            "4": {
              name: "entity.name.type.module.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)\\s+(as)\\s+(namespace)\\s+([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?(?:\\s*(=)|\\s+(default)(?=\\s+))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js"
            },
            "2": {
              name: "keyword.control.type.js"
            },
            "3": {
              name: "keyword.operator.assignment.js"
            },
            "4": {
              name: "keyword.control.default.js"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.default.js",
          patterns: [
            {
              include: "#interface-declaration"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?\\b(?!(\\$)|(\\s*:))((?=\\s*[*{])|((?=\\s*[$_[:alpha:]][$_[:alnum:]]*([,\\s]))(?!\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js"
            },
            "2": {
              name: "keyword.control.type.js"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.js",
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        }
      ]
    },
    expression: {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-inside-possibly-arrow-parens": {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "keyword.operator.rest.js"
            },
            "3": {
              name: "entity.name.function.js variable.language.this.js"
            },
            "4": {
              name: "entity.name.function.js"
            },
            "5": {
              name: "keyword.operator.optional.js"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "keyword.operator.rest.js"
            },
            "3": {
              name: "variable.parameter.js variable.language.this.js"
            },
            "4": {
              name: "variable.parameter.js"
            },
            "5": {
              name: "keyword.operator.optional.js"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*[,:]|$)"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.js"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-operators": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(await)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.flow.js"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?=\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*\\*)",
          beginCaptures: {
            "1": {
              name: "keyword.control.flow.js"
            }
          },
          end: "\\*",
          endCaptures: {
            "0": {
              name: "keyword.generator.asterisk.js"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.control.flow.js"
            },
            "2": {
              name: "keyword.generator.asterisk.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s*(\\*))?"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))delete(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.delete.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))in(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.in.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))of(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.of.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.instanceof.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.new.js"
        },
        {
          include: "#typeof-operator"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))void(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.void.js"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.js"
            },
            "2": {
              name: "storage.modifier.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*($|[]),:;}]))"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.js"
            },
            "2": {
              name: "keyword.control.satisfies.js"
            }
          },
          end: "(?=^|[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisfies)\\s+)|(\\s+<))",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.spread.js"
        },
        {
          match: "(?:\\*|(?<!\\()/|[-%+])=",
          name: "keyword.operator.assignment.compound.js"
        },
        {
          match: "(?:[\\&^]|<<|>>>??|\\|)=",
          name: "keyword.operator.assignment.compound.bitwise.js"
        },
        {
          match: "<<|>>>?",
          name: "keyword.operator.bitwise.shift.js"
        },
        {
          match: "[!=]==?",
          name: "keyword.operator.comparison.js"
        },
        {
          match: "<=|>=|<>|[<>]",
          name: "keyword.operator.relational.js"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.logical.js"
            },
            "2": {
              name: "keyword.operator.assignment.compound.js"
            },
            "3": {
              name: "keyword.operator.arithmetic.js"
            }
          },
          match: "(?<=[$_[:alnum:]])(!)\\s*(?:(/=)|(/)(?![*/]))"
        },
        {
          match: "!|&&|\\|\\||\\?\\?",
          name: "keyword.operator.logical.js"
        },
        {
          match: "[\\&^|~]",
          name: "keyword.operator.bitwise.js"
        },
        {
          match: "=",
          name: "keyword.operator.assignment.js"
        },
        {
          match: "--",
          name: "keyword.operator.decrement.js"
        },
        {
          match: "\\+\\+",
          name: "keyword.operator.increment.js"
        },
        {
          match: "[-%*+/]",
          name: "keyword.operator.arithmetic.js"
        },
        {
          begin: "(?<=[]$)_[:alnum:]])\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)+(?:(/=)|(/)(?![*/])))",
          end: "(/=)|(/)(?!\\*([^*]|(\\*[^/]))*\\*/)",
          endCaptures: {
            "1": {
              name: "keyword.operator.assignment.compound.js"
            },
            "2": {
              name: "keyword.operator.arithmetic.js"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.assignment.compound.js"
            },
            "2": {
              name: "keyword.operator.arithmetic.js"
            }
          },
          match: "(?<=[]$)_[:alnum:]])\\s*(?:(/=)|(/)(?![*/]))"
        }
      ]
    },
    expressionPunctuations: {
      patterns: [
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-accessor"
        }
      ]
    },
    expressionWithoutIdentifiers: {
      patterns: [
        {
          include: "#jsx"
        },
        {
          include: "#string"
        },
        {
          include: "#regex"
        },
        {
          include: "#comment"
        },
        {
          include: "#function-expression"
        },
        {
          include: "#class-expression"
        },
        {
          include: "#arrow-function"
        },
        {
          include: "#paren-expression-possibly-arrow"
        },
        {
          include: "#cast"
        },
        {
          include: "#ternary-expression"
        },
        {
          include: "#new-expr"
        },
        {
          include: "#instanceof-expr"
        },
        {
          include: "#object-literal"
        },
        {
          include: "#expression-operators"
        },
        {
          include: "#function-call"
        },
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#paren-expression"
        }
      ]
    },
    "field-declaration": {
      begin: "(?<!\\()(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s+)?(?=\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=}]|$))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js"
        }
      },
      end: "(?=[,;}]|$|^((?!\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=]|$))))|(?<=})",
      name: "meta.field.declaration.js",
      patterns: [
        {
          include: "#variable-initializer"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "meta.definition.property.js entity.name.function.js"
            },
            "2": {
              name: "keyword.operator.optional.js"
            },
            "3": {
              name: "keyword.operator.definiteassignment.js"
            }
          },
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)(?:(\\?)|(!))?(?=\\s*\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          match: "#?[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.property.js variable.object.property.js"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.js"
        },
        {
          match: "!",
          name: "keyword.operator.definiteassignment.js"
        }
      ]
    },
    "for-loop": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))for(?=((\\s+|(\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*))await)?\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)?(\\())",
      beginCaptures: {
        "0": {
          name: "keyword.control.loop.js"
        }
      },
      end: "(?<=\\))",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "await",
          name: "keyword.control.loop.js"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.js"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js"
            }
          },
          patterns: [
            {
              include: "#var-expr"
            },
            {
              include: "#expression"
            },
            {
              include: "#punctuation-semicolon"
            }
          ]
        }
      ]
    },
    "function-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#function-parameters"
        },
        {
          include: "#return-type"
        },
        {
          include: "#type-function-return-type"
        },
        {
          include: "#decl-block"
        },
        {
          match: "\\*",
          name: "keyword.generator.asterisk.js"
        }
      ]
    },
    "function-call": {
      patterns: [
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          end: "(?<=\\))(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
              name: "meta.function-call.js",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          end: "(?<=>)(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*[(\\[{]\\s*)$)",
              name: "meta.function-call.js",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "function-call-optionals": {
      patterns: [
        {
          match: "\\?\\.",
          name: "meta.function-call.js punctuation.accessor.optional.js"
        },
        {
          match: "!",
          name: "meta.function-call.js keyword.operator.definiteassignment.js"
        }
      ]
    },
    "function-call-target": {
      patterns: [
        {
          include: "#support-function-call-identifiers"
        },
        {
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.function.js"
        }
      ]
    },
    "function-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "storage.modifier.async.js"
        },
        "4": {
          name: "storage.type.function.js"
        },
        "5": {
          name: "keyword.generator.asterisk.js"
        },
        "6": {
          name: "meta.definition.function.js entity.name.function.js"
        }
      },
      end: "(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|(?<=})",
      name: "meta.function.js",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.js"
        },
        "2": {
          name: "storage.type.function.js"
        },
        "3": {
          name: "keyword.generator.asterisk.js"
        },
        "4": {
          name: "meta.definition.function.js entity.name.function.js"
        }
      },
      end: "(?=;)|(?<=})",
      name: "meta.function.expression.js",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-name": {
      match: "[$_[:alpha:]][$_[:alnum:]]*",
      name: "meta.definition.function.js entity.name.function.js"
    },
    "function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.parameters.begin.js"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "punctuation.definition.parameters.end.js"
        }
      },
      name: "meta.parameters.js",
      patterns: [
        {
          include: "#function-parameters-body"
        }
      ]
    },
    "function-parameters-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          include: "#parameter-name"
        },
        {
          include: "#parameter-type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.js"
        }
      ]
    },
    identifiers: {
      patterns: [
        {
          include: "#object-identifiers"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js"
            },
            "2": {
              name: "punctuation.accessor.optional.js"
            },
            "3": {
              name: "entity.name.function.js"
            }
          },
          match: "(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*)?([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js"
            },
            "2": {
              name: "punctuation.accessor.optional.js"
            },
            "3": {
              name: "variable.other.constant.property.js"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js"
            },
            "2": {
              name: "punctuation.accessor.optional.js"
            },
            "3": {
              name: "variable.other.property.js"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          match: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])",
          name: "variable.other.constant.js"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "variable.other.readwrite.js"
        }
      ]
    },
    "if-statement": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bif\\s*(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))\\s*(?!\\{))",
          end: "(?=;|$|})",
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(if)\\s*(\\()",
              beginCaptures: {
                "1": {
                  name: "keyword.control.conditional.js"
                },
                "2": {
                  name: "meta.brace.round.js"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.js"
                }
              },
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(?<=\\))\\s*/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.js"
                }
              },
              end: "(/)([dgimsuvy]*)",
              endCaptures: {
                "1": {
                  name: "punctuation.definition.string.end.js"
                },
                "2": {
                  name: "keyword.other.js"
                }
              },
              name: "string.regexp.js",
              patterns: [
                {
                  include: "#regexp"
                }
              ]
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    "import-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type)(?!\\s+from))?(?!\\s*[(:])(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "keyword.control.import.js"
        },
        "4": {
          name: "keyword.control.type.js"
        }
      },
      end: "(?<!(?:^|[^$._[:alnum:]])import)(?=;|$|^)",
      name: "meta.import.js",
      patterns: [
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          begin: `(?<=(?:^|[^$._[:alnum:]])import)(?!\\s*["'])`,
          end: "\\bfrom\\b",
          endCaptures: {
            "0": {
              name: "keyword.control.from.js"
            }
          },
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        },
        {
          include: "#import-export-declaration"
        }
      ]
    },
    "import-equals-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(require)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js"
            },
            "2": {
              name: "storage.modifier.js"
            },
            "3": {
              name: "keyword.control.import.js"
            },
            "4": {
              name: "keyword.control.type.js"
            },
            "5": {
              name: "variable.other.readwrite.alias.js"
            },
            "6": {
              name: "keyword.operator.assignment.js"
            },
            "7": {
              name: "keyword.control.require.js"
            },
            "8": {
              name: "meta.brace.round.js"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js"
            }
          },
          name: "meta.import-equals.external.js",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(?!require\\b)",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js"
            },
            "2": {
              name: "storage.modifier.js"
            },
            "3": {
              name: "keyword.control.import.js"
            },
            "4": {
              name: "keyword.control.type.js"
            },
            "5": {
              name: "variable.other.readwrite.alias.js"
            },
            "6": {
              name: "keyword.operator.assignment.js"
            }
          },
          end: "(?=;|$|^)",
          name: "meta.import-equals.internal.js",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#comment"
            },
            {
              captures: {
                "1": {
                  name: "entity.name.type.module.js"
                },
                "2": {
                  name: "punctuation.accessor.js"
                },
                "3": {
                  name: "punctuation.accessor.optional.js"
                }
              },
              match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
            },
            {
              match: "([$_[:alpha:]][$_[:alnum:]]*)",
              name: "variable.other.readwrite.js"
            }
          ]
        }
      ]
    },
    "import-export-assert-clause": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(with)|(assert))\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.control.with.js"
        },
        "2": {
          name: "keyword.control.assert.js"
        },
        "3": {
          name: "punctuation.definition.block.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object-literal.key.js"
        },
        {
          match: ":",
          name: "punctuation.separator.key-value.js"
        }
      ]
    },
    "import-export-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      name: "meta.block.js",
      patterns: [
        {
          include: "#import-export-clause"
        }
      ]
    },
    "import-export-clause": {
      patterns: [
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.js"
            },
            "12": {
              name: "keyword.control.as.js"
            },
            "13": {
              name: "keyword.control.default.js"
            },
            "14": {
              name: "variable.other.readwrite.alias.js"
            },
            "15": {
              name: "string.quoted.alias.js"
            },
            "2": {
              name: "keyword.control.default.js"
            },
            "3": {
              name: "constant.language.import-export-all.js"
            },
            "4": {
              name: "variable.other.readwrite.js"
            },
            "5": {
              name: "string.quoted.alias.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(type)\\s+)?(?:\\b(default)|(\\*)|\\b([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))\\s+(as)\\s+(?:(default(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "\\*",
          name: "constant.language.import-export-all.js"
        },
        {
          match: "\\b(default)\\b",
          name: "keyword.control.default.js"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.js"
            },
            "2": {
              name: "variable.other.readwrite.alias.js"
            },
            "3": {
              name: "string.quoted.alias.js"
            }
          },
          match: "(?:\\b(type)\\s+)?(?:([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        }
      ]
    },
    "import-export-declaration": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#import-export-block"
        },
        {
          match: "\\bfrom\\b",
          name: "keyword.control.from.js"
        },
        {
          include: "#import-export-assert-clause"
        },
        {
          include: "#import-export-clause"
        }
      ]
    },
    "indexer-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=:)",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js"
        },
        "2": {
          name: "meta.brace.square.js"
        },
        "3": {
          name: "variable.parameter.js"
        }
      },
      end: "(])\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.js"
        },
        "2": {
          name: "keyword.operator.optional.js"
        }
      },
      name: "meta.indexer.declaration.js",
      patterns: [
        {
          include: "#type-annotation"
        }
      ]
    },
    "indexer-mapped-type-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([-+])?(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s+(in)\\s+",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.modifier.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "meta.brace.square.js"
        },
        "4": {
          name: "entity.name.type.js"
        },
        "5": {
          name: "keyword.operator.expression.in.js"
        }
      },
      end: "(])([-+])?\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.js"
        },
        "2": {
          name: "keyword.operator.type.modifier.js"
        },
        "3": {
          name: "keyword.operator.optional.js"
        }
      },
      name: "meta.indexer.mappedtype.declaration.js",
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.as.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+"
        },
        {
          include: "#type"
        }
      ]
    },
    "inline-tags": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.bracket.square.begin.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.square.end.jsdoc"
            }
          },
          match: "(\\[)[^]]+(])(?=\\{@(?:link|linkcode|linkplain|tutorial))",
          name: "constant.other.description.jsdoc"
        },
        {
          begin: "(\\{)((@)(?:link(?:code|plain)?|tutorial))\\s*",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            },
            "2": {
              name: "storage.type.class.jsdoc"
            },
            "3": {
              name: "punctuation.definition.inline.tag.jsdoc"
            }
          },
          end: "}|(?=\\*/)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          name: "entity.name.type.instance.jsdoc",
          patterns: [
            {
              captures: {
                "1": {
                  name: "variable.other.link.underline.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?=https?://)(?:[^*|}\\s]|\\*/)+)(\\|)?"
            },
            {
              captures: {
                "1": {
                  name: "variable.other.description.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?:[^*@{|}\\s]|\\*[^/])+)(\\|)?"
            }
          ]
        }
      ]
    },
    "instanceof-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(instanceof)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.expression.instanceof.js"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|([!=]==?)|(([\\&^|~]\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s+instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "interface-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(interface)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "storage.modifier.js"
        },
        "4": {
          name: "storage.type.interface.js"
        }
      },
      end: "(?<=})",
      name: "meta.interface.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.interface.js"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    jsdoctype: {
      patterns: [
        {
          begin: "\\G(\\{)",
          beginCaptures: {
            "0": {
              name: "entity.name.type.instance.jsdoc"
            },
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            }
          },
          contentName: "entity.name.type.instance.jsdoc",
          end: "((}))\\s*|(?=\\*/)",
          endCaptures: {
            "1": {
              name: "entity.name.type.instance.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    jsx: {
      patterns: [
        {
          include: "#jsx-tag-without-attributes-in-expression"
        },
        {
          include: "#jsx-tag-in-expression"
        }
      ]
    },
    "jsx-children": {
      patterns: [
        {
          include: "#jsx-tag-without-attributes"
        },
        {
          include: "#jsx-tag"
        },
        {
          include: "#jsx-evaluated-code"
        },
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-entities": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.js"
            },
            "3": {
              name: "punctuation.definition.entity.js"
            }
          },
          match: "(&)([0-9A-Za-z]+|#[0-9]+|#x\\h+)(;)",
          name: "constant.character.entity.js"
        }
      ]
    },
    "jsx-evaluated-code": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.section.embedded.begin.js"
        }
      },
      contentName: "meta.embedded.expression.js",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.section.embedded.end.js"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "jsx-string-double-quoted": {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js"
        }
      },
      end: '"',
      endCaptures: {
        "0": {
          name: "punctuation.definition.string.end.js"
        }
      },
      name: "string.quoted.double.js",
      patterns: [
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-string-single-quoted": {
      begin: "'",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js"
        }
      },
      end: "'",
      endCaptures: {
        "0": {
          name: "punctuation.definition.string.end.js"
        }
      },
      name: "string.quoted.single.js",
      patterns: [
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-tag": {
      begin: "(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      end: "(/>)|(</)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.tag.end.js"
        },
        "2": {
          name: "punctuation.definition.tag.begin.js"
        },
        "3": {
          name: "entity.name.tag.namespace.js"
        },
        "4": {
          name: "punctuation.separator.namespace.js"
        },
        "5": {
          name: "entity.name.tag.js"
        },
        "6": {
          name: "support.class.component.js"
        },
        "7": {
          name: "punctuation.definition.tag.end.js"
        }
      },
      name: "meta.tag.js",
      patterns: [
        {
          begin: "(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.js"
            },
            "2": {
              name: "entity.name.tag.namespace.js"
            },
            "3": {
              name: "punctuation.separator.namespace.js"
            },
            "4": {
              name: "entity.name.tag.js"
            },
            "5": {
              name: "support.class.component.js"
            }
          },
          end: "(?=/?>)",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-arguments"
            },
            {
              include: "#jsx-tag-attributes"
            }
          ]
        },
        {
          begin: "(>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.end.js"
            }
          },
          contentName: "meta.jsx.children.js",
          end: "(?=</)",
          patterns: [
            {
              include: "#jsx-children"
            }
          ]
        }
      ]
    },
    "jsx-tag-attribute-assignment": {
      match: `=(?=\\s*(?:["'{]|/\\*|//|\\n))`,
      name: "keyword.operator.assignment.js"
    },
    "jsx-tag-attribute-name": {
      captures: {
        "1": {
          name: "entity.other.attribute-name.namespace.js"
        },
        "2": {
          name: "punctuation.separator.namespace.js"
        },
        "3": {
          name: "entity.other.attribute-name.js"
        }
      },
      match: "\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(:))?([$_[:alpha:]][-$_[:alnum:]]*)(?=[=\\s]|/?>|/\\*|//)"
    },
    "jsx-tag-attributes": {
      begin: "\\s+",
      end: "(?=/?>)",
      name: "meta.tag.attributes.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#jsx-tag-attribute-name"
        },
        {
          include: "#jsx-tag-attribute-assignment"
        },
        {
          include: "#jsx-string-double-quoted"
        },
        {
          include: "#jsx-string-single-quoted"
        },
        {
          include: "#jsx-evaluated-code"
        },
        {
          include: "#jsx-tag-attributes-illegal"
        }
      ]
    },
    "jsx-tag-attributes-illegal": {
      match: "\\S+",
      name: "invalid.illegal.attribute.js"
    },
    "jsx-tag-in-expression": {
      begin: "(?<!\\+\\+|--)(?<=[(*,:=>?\\[{]|&&|\\|\\||\\?|\\*/|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^default|[^$._[:alnum:]]default|^yield|[^$._[:alnum:]]yield|^)\\s*(?!<\\s*[$_[:alpha:]][$_[:alnum:]]*((\\s+extends\\s+[^=>])|,))(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      end: "(?!(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      patterns: [
        {
          include: "#jsx-tag"
        }
      ]
    },
    "jsx-tag-without-attributes": {
      begin: "(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.js"
        },
        "2": {
          name: "entity.name.tag.namespace.js"
        },
        "3": {
          name: "punctuation.separator.namespace.js"
        },
        "4": {
          name: "entity.name.tag.js"
        },
        "5": {
          name: "support.class.component.js"
        },
        "6": {
          name: "punctuation.definition.tag.end.js"
        }
      },
      contentName: "meta.jsx.children.js",
      end: "(</)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.js"
        },
        "2": {
          name: "entity.name.tag.namespace.js"
        },
        "3": {
          name: "punctuation.separator.namespace.js"
        },
        "4": {
          name: "entity.name.tag.js"
        },
        "5": {
          name: "support.class.component.js"
        },
        "6": {
          name: "punctuation.definition.tag.end.js"
        }
      },
      name: "meta.tag.without-attributes.js",
      patterns: [
        {
          include: "#jsx-children"
        }
      ]
    },
    "jsx-tag-without-attributes-in-expression": {
      begin: "(?<!\\+\\+|--)(?<=[(*,:=>?\\[{]|&&|\\|\\||\\?|\\*/|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^default|[^$._[:alnum:]]default|^yield|[^$._[:alnum:]]yield|^)\\s*(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>))",
      end: "(?!(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>))",
      patterns: [
        {
          include: "#jsx-tag-without-attributes"
        }
      ]
    },
    label: {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)(?=\\s*\\{)",
          beginCaptures: {
            "1": {
              name: "entity.name.label.js"
            },
            "2": {
              name: "punctuation.separator.label.js"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#decl-block"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.js"
            },
            "2": {
              name: "punctuation.separator.label.js"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)"
        }
      ]
    },
    literal: {
      patterns: [
        {
          include: "#numeric-literal"
        },
        {
          include: "#boolean-literal"
        },
        {
          include: "#null-literal"
        },
        {
          include: "#undefined-literal"
        },
        {
          include: "#numericConstant-literal"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#this-literal"
        },
        {
          include: "#super-literal"
        }
      ]
    },
    "method-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?\\s*\\b(constructor)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "storage.modifier.js"
            },
            "3": {
              name: "storage.modifier.js"
            },
            "4": {
              name: "storage.modifier.async.js"
            },
            "5": {
              name: "storage.type.js"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.js",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\s*\\b(new)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))|(?:(\\*)\\s*)?)(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "storage.modifier.js"
            },
            "3": {
              name: "storage.modifier.js"
            },
            "4": {
              name: "storage.modifier.async.js"
            },
            "5": {
              name: "keyword.operator.new.js"
            },
            "6": {
              name: "keyword.generator.asterisk.js"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.js",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "storage.modifier.js"
            },
            "3": {
              name: "storage.modifier.js"
            },
            "4": {
              name: "storage.modifier.async.js"
            },
            "5": {
              name: "storage.type.property.js"
            },
            "6": {
              name: "keyword.generator.asterisk.js"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.js",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        }
      ]
    },
    "method-declaration-name": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??)\\s*[(<])",
      end: "(?=[(<])",
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.method.js entity.name.function.js"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.js"
        }
      ]
    },
    "namespace-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(namespace|module)\\s+(?=[\"$'_`[:alpha:]])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "storage.type.namespace.js"
        }
      },
      end: "(?<=})|(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.namespace.declaration.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.type.module.js"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "new-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.new.js"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      name: "new.expr.js",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "null-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))null(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.null.js"
    },
    "numeric-literal": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.js"
            }
          },
          match: "\\b(?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$)",
          name: "constant.numeric.hex.js"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.js"
            }
          },
          match: "\\b(?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.binary.js"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.js"
            }
          },
          match: "\\b(?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.octal.js"
        },
        {
          captures: {
            "0": {
              name: "constant.numeric.decimal.js"
            },
            "1": {
              name: "meta.delimiter.decimal.period.js"
            },
            "10": {
              name: "meta.delimiter.decimal.period.js"
            },
            "11": {
              name: "storage.type.numeric.bigint.js"
            },
            "12": {
              name: "meta.delimiter.decimal.period.js"
            },
            "13": {
              name: "storage.type.numeric.bigint.js"
            },
            "14": {
              name: "storage.type.numeric.bigint.js"
            },
            "2": {
              name: "storage.type.numeric.bigint.js"
            },
            "3": {
              name: "meta.delimiter.decimal.period.js"
            },
            "4": {
              name: "storage.type.numeric.bigint.js"
            },
            "5": {
              name: "meta.delimiter.decimal.period.js"
            },
            "6": {
              name: "storage.type.numeric.bigint.js"
            },
            "7": {
              name: "storage.type.numeric.bigint.js"
            },
            "8": {
              name: "meta.delimiter.decimal.period.js"
            },
            "9": {
              name: "storage.type.numeric.bigint.js"
            }
          },
          match: "(?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)"
        }
      ]
    },
    "numericConstant-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))NaN(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.nan.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Infinity(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.infinity.js"
        }
      ]
    },
    "object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element"
            }
          ]
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element-const"
            }
          ]
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-propertyName": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
      end: "(:)",
      endCaptures: {
        "0": {
          name: "punctuation.destructuring.js"
        }
      },
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "variable.object.property.js"
        }
      ]
    },
    "object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.js"
        }
      },
      patterns: [
        {
          include: "#object-binding-element"
        }
      ]
    },
    "object-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.js"
        }
      },
      patterns: [
        {
          include: "#object-binding-element-const"
        }
      ]
    },
    "object-identifiers": {
      patterns: [
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*\\??\\.\\s*prototype\\b(?!\\$))",
          name: "support.class.js"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js"
            },
            "2": {
              name: "punctuation.accessor.optional.js"
            },
            "3": {
              name: "variable.other.constant.object.property.js"
            },
            "4": {
              name: "variable.other.object.property.js"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(#?\\p{upper}[$_\\d[:upper:]]*)|(#?[$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          captures: {
            "1": {
              name: "variable.other.constant.object.js"
            },
            "2": {
              name: "variable.other.object.js"
            }
          },
          match: "(?:(\\p{upper}[$_\\d[:upper:]]*)|([$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        }
      ]
    },
    "object-literal": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      name: "meta.objectliteral.js",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "object-literal-method-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.js"
        },
        "2": {
          name: "storage.type.property.js"
        },
        "3": {
          name: "keyword.generator.asterisk.js"
        }
      },
      end: "(?=[,;}])|(?<=})",
      name: "meta.method.declaration.js",
      patterns: [
        {
          include: "#method-declaration-name"
        },
        {
          include: "#function-body"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js"
            },
            "2": {
              name: "storage.type.property.js"
            },
            "3": {
              name: "keyword.generator.asterisk.js"
            }
          },
          end: "(?=[(<])",
          patterns: [
            {
              include: "#method-declaration-name"
            }
          ]
        }
      ]
    },
    "object-member": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#object-literal-method-declaration"
        },
        {
          begin: "(?=\\[)",
          end: "(?=:)|((?<=])(?=\\s*[(<]))",
          name: "meta.object.member.js meta.object-literal.key.js",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#array-literal"
            }
          ]
        },
        {
          begin: "(?=[\"'`])",
          end: "(?=:)|((?<=[\"'`])(?=((\\s*[(,<}])|(\\s+(as|satisifies)\\s+))))",
          name: "meta.object.member.js meta.object-literal.key.js",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?=\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)))",
          end: "(?=:)|(?=\\s*([(,<}])|(\\s+as|satisifies\\s+))",
          name: "meta.object.member.js meta.object-literal.key.js",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#numeric-literal"
            }
          ]
        },
        {
          begin: "(?<=[]\"'`])(?=\\s*[(<])",
          end: "(?=[,;}])|(?<=})",
          name: "meta.method.declaration.js",
          patterns: [
            {
              include: "#function-body"
            }
          ]
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.js"
            },
            "1": {
              name: "constant.numeric.decimal.js"
            }
          },
          match: "(?![$_[:alpha:]])(\\d+)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.js"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.js"
            },
            "1": {
              name: "entity.name.function.js"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:(\\s*/\\*([^*]|(\\*[^/]))*\\*/)*\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))",
          name: "meta.object.member.js"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.js"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.js"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.js"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.js",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "variable.other.readwrite.js"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.js"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.js"
            },
            "2": {
              name: "storage.modifier.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*([,}]|$))",
          name: "meta.object.member.js"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.js"
            },
            "2": {
              name: "keyword.control.satisfies.js"
            }
          },
          end: "(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|^|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisifies)\\s+))",
          name: "meta.object.member.js",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(?=[$_[:alpha:]][$_[:alnum:]]*\\s*=)",
          end: "(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.js",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: ":",
          beginCaptures: {
            "0": {
              name: "meta.object-literal.key.js punctuation.separator.key-value.js"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.js",
          patterns: [
            {
              begin: "(?<=:)\\s*(async)?(?=\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.js"
                }
              },
              end: "(?<=\\))",
              patterns: [
                {
                  include: "#type-parameters"
                },
                {
                  begin: "\\(",
                  beginCaptures: {
                    "0": {
                      name: "meta.brace.round.js"
                    }
                  },
                  end: "\\)",
                  endCaptures: {
                    "0": {
                      name: "meta.brace.round.js"
                    }
                  },
                  patterns: [
                    {
                      include: "#expression-inside-possibly-arrow-parens"
                    }
                  ]
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.js"
                },
                "2": {
                  name: "meta.brace.round.js"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.js"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(?=<\\s*$)",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.js"
                }
              },
              end: "(?<=>)",
              patterns: [
                {
                  include: "#type-parameters"
                }
              ]
            },
            {
              begin: "(?<=>)\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "meta.brace.round.js"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.js"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              include: "#possibly-arrow-return-type"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "parameter-array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.js"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.js"
        }
      },
      patterns: [
        {
          include: "#parameter-binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#parameter-array-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "parameter-name": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "keyword.operator.rest.js"
            },
            "3": {
              name: "entity.name.function.js variable.language.this.js"
            },
            "4": {
              name: "entity.name.function.js"
            },
            "5": {
              name: "keyword.operator.optional.js"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "keyword.operator.rest.js"
            },
            "3": {
              name: "variable.parameter.js variable.language.this.js"
            },
            "4": {
              name: "variable.parameter.js"
            },
            "5": {
              name: "keyword.operator.optional.js"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)"
        }
      ]
    },
    "parameter-object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.js"
        }
      },
      patterns: [
        {
          include: "#parameter-object-binding-element"
        }
      ]
    },
    "parameter-type-annotation": {
      patterns: [
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js"
            }
          },
          end: "(?=[),])|(?==[^>])",
          name: "meta.type.annotation.js",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "paren-expression": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.js"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.js"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "paren-expression-possibly-arrow": {
      patterns: [
        {
          begin: "(?<=[(,=])\\s*(async)?(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          begin: "(?<=[(,=]|=>|^return|[^$._[:alnum:]]return)\\s*(async)?(?=\\s*((((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()|(<)|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)))\\s*$)",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          include: "#possibly-arrow-return-type"
        }
      ]
    },
    "paren-expression-possibly-arrow-with-typeparameters": {
      patterns: [
        {
          include: "#type-parameters"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.js"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js"
            }
          },
          patterns: [
            {
              include: "#expression-inside-possibly-arrow-parens"
            }
          ]
        }
      ]
    },
    "possibly-arrow-return-type": {
      begin: "(?<=\\)|^)\\s*(:)(?=\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*=>)",
      beginCaptures: {
        "1": {
          name: "meta.arrow.js meta.return.type.arrow.js keyword.operator.type.annotation.js"
        }
      },
      contentName: "meta.arrow.js meta.return.type.arrow.js",
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "property-accessor": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(accessor|get|set)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.type.property.js"
    },
    "punctuation-accessor": {
      captures: {
        "1": {
          name: "punctuation.accessor.js"
        },
        "2": {
          name: "punctuation.accessor.optional.js"
        }
      },
      match: "(\\.)|(\\?\\.(?!\\s*\\d))"
    },
    "punctuation-comma": {
      match: ",",
      name: "punctuation.separator.comma.js"
    },
    "punctuation-semicolon": {
      match: ";",
      name: "punctuation.terminator.statement.js"
    },
    "qstring-double": {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js"
        }
      },
      end: '(")|([^\\n\\\\])$',
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.js"
        },
        "2": {
          name: "invalid.illegal.newline.js"
        }
      },
      name: "string.quoted.double.js",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    "qstring-single": {
      begin: "'",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js"
        }
      },
      end: "(')|([^\\n\\\\])$",
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.js"
        },
        "2": {
          name: "invalid.illegal.newline.js"
        }
      },
      name: "string.quoted.single.js",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    regex: {
      patterns: [
        {
          begin: "(?<!\\+\\+|--|})(?<=[!(+,:=?\\[]|^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case|=>|&&|\\|\\||\\*/)\\s*(/)(?![*/])(?=(?:[^()/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)+]|\\(([^)\\\\]|\\\\.)+\\))+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.string.begin.js"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.js"
            },
            "2": {
              name: "keyword.other.js"
            }
          },
          name: "string.regexp.js",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "((?<![]$)_[:alnum:]]|\\+\\+|--|}|\\*/)|((?<=^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case))\\s*)/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.string.begin.js"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.js"
            },
            "2": {
              name: "keyword.other.js"
            }
          },
          name: "string.regexp.js",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        }
      ]
    },
    "regex-character-class": {
      patterns: [
        {
          match: "\\\\[DSWdfnrstvw]|\\.",
          name: "constant.other.character-class.regexp"
        },
        {
          match: "\\\\([0-7]{3}|x\\h{2}|u\\h{4})",
          name: "constant.character.numeric.regexp"
        },
        {
          match: "\\\\c[A-Z]",
          name: "constant.character.control.regexp"
        },
        {
          match: "\\\\.",
          name: "constant.character.escape.backslash.regexp"
        }
      ]
    },
    regexp: {
      patterns: [
        {
          match: "\\\\[Bb]|[$^]",
          name: "keyword.control.anchor.regexp"
        },
        {
          captures: {
            "0": {
              name: "keyword.other.back-reference.regexp"
            },
            "1": {
              name: "variable.other.regexp"
            }
          },
          match: "\\\\(?:[1-9]\\d*|k<([$A-Z_a-z][$\\w]*)>)"
        },
        {
          match: "[*+?]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)}\\??",
          name: "keyword.operator.quantifier.regexp"
        },
        {
          match: "\\|",
          name: "keyword.operator.or.regexp"
        },
        {
          begin: "(\\()((\\?=)|(\\?!)|(\\?<=)|(\\?<!))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            },
            "2": {
              name: "punctuation.definition.group.assertion.regexp"
            },
            "3": {
              name: "meta.assertion.look-ahead.regexp"
            },
            "4": {
              name: "meta.assertion.negative-look-ahead.regexp"
            },
            "5": {
              name: "meta.assertion.look-behind.regexp"
            },
            "6": {
              name: "meta.assertion.negative-look-behind.regexp"
            }
          },
          end: "(\\))",
          endCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.assertion.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "\\((?:(\\?:)|\\?<([$A-Z_a-z][$\\w]*)>)?",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            },
            "1": {
              name: "punctuation.definition.group.no-capture.regexp"
            },
            "2": {
              name: "variable.other.regexp"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "(\\[)(\\^)?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            },
            "2": {
              name: "keyword.operator.negation.regexp"
            }
          },
          end: "(])",
          endCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            }
          },
          name: "constant.other.character-class.set.regexp",
          patterns: [
            {
              captures: {
                "1": {
                  name: "constant.character.numeric.regexp"
                },
                "2": {
                  name: "constant.character.control.regexp"
                },
                "3": {
                  name: "constant.character.escape.backslash.regexp"
                },
                "4": {
                  name: "constant.character.numeric.regexp"
                },
                "5": {
                  name: "constant.character.control.regexp"
                },
                "6": {
                  name: "constant.character.escape.backslash.regexp"
                }
              },
              match: "(?:.|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))-(?:[^]\\\\]|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))",
              name: "constant.other.character-class.range.regexp"
            },
            {
              include: "#regex-character-class"
            }
          ]
        },
        {
          include: "#regex-character-class"
        }
      ]
    },
    "return-type": {
      patterns: [
        {
          begin: "(?<=\\))\\s*(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js"
            }
          },
          end: "(?<![\\&:|])(?=$|^|[,;{}]|//)",
          name: "meta.return.type.js",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        },
        {
          begin: "(?<=\\))\\s*(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js"
            }
          },
          end: "(?<![\\&:|])((?=[,;{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.return.type.js",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        }
      ]
    },
    "return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<=[\\&:|])(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    shebang: {
      captures: {
        "1": {
          name: "punctuation.definition.comment.js"
        }
      },
      match: "\\A(#!).*(?=$)",
      name: "comment.line.shebang.js"
    },
    "single-line-comment-consuming-line-ending": {
      begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
      beginCaptures: {
        "1": {
          name: "punctuation.whitespace.comment.leading.js"
        },
        "2": {
          name: "comment.line.double-slash.js"
        },
        "3": {
          name: "punctuation.definition.comment.js"
        },
        "4": {
          name: "storage.type.internaldeclaration.js"
        },
        "5": {
          name: "punctuation.decorator.internaldeclaration.js"
        }
      },
      contentName: "comment.line.double-slash.js",
      end: "(?=^)"
    },
    statements: {
      patterns: [
        {
          include: "#declaration"
        },
        {
          include: "#control-statement"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#label"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    string: {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template"
        }
      ]
    },
    "string-character-escape": {
      match: "\\\\(x\\h{2}|u\\h{4}|u\\{\\h+}|[012][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)",
      name: "constant.character.escape.js"
    },
    "super-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))super\\b(?!\\$)",
      name: "variable.language.super.js"
    },
    "support-function-call-identifiers": {
      patterns: [
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#object-identifiers"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\(\\s*[\"'`])",
          name: "keyword.operator.expression.import.js"
        }
      ]
    },
    "support-objects": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(arguments)\\b(?!\\$)",
          name: "variable.language.arguments.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(Promise)\\b(?!\\$)",
          name: "support.class.promise.js"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.import.js"
            },
            "2": {
              name: "punctuation.accessor.js"
            },
            "3": {
              name: "punctuation.accessor.optional.js"
            },
            "4": {
              name: "support.variable.property.importmeta.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(import)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(meta)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.new.js"
            },
            "2": {
              name: "punctuation.accessor.js"
            },
            "3": {
              name: "punctuation.accessor.optional.js"
            },
            "4": {
              name: "support.variable.property.target.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(target)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js"
            },
            "2": {
              name: "punctuation.accessor.optional.js"
            },
            "3": {
              name: "support.variable.property.js"
            },
            "4": {
              name: "support.constant.js"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(constructor|length|prototype|__proto__)\\b(?!\\$|\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\()|(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\b(?!\\$))"
        },
        {
          captures: {
            "1": {
              name: "support.type.object.module.js"
            },
            "2": {
              name: "support.type.object.module.js"
            },
            "3": {
              name: "punctuation.accessor.js"
            },
            "4": {
              name: "punctuation.accessor.optional.js"
            },
            "5": {
              name: "support.type.object.module.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(exports)|(module)(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))(exports|id|filename|loaded|parent|children))?)\\b(?!\\$)"
        }
      ]
    },
    "switch-statement": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bswitch\\s*\\()",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      name: "switch-statement.expr.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(switch)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.switch.js"
            },
            "2": {
              name: "meta.brace.round.js"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js"
            }
          },
          name: "switch-expression.expr.js",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.js"
            }
          },
          end: "(?=})",
          name: "switch-block.expr.js",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default(?=:))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
              beginCaptures: {
                "1": {
                  name: "keyword.control.switch.js"
                }
              },
              end: "(?=:)",
              name: "case-clause.expr.js",
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(:)\\s*(\\{)",
              beginCaptures: {
                "1": {
                  name: "case-clause.expr.js punctuation.definition.section.case-statement.js"
                },
                "2": {
                  name: "meta.block.js punctuation.definition.block.js"
                }
              },
              contentName: "meta.block.js",
              end: "}",
              endCaptures: {
                "0": {
                  name: "meta.block.js punctuation.definition.block.js"
                }
              },
              patterns: [
                {
                  include: "#statements"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "case-clause.expr.js punctuation.definition.section.case-statement.js"
                }
              },
              match: "(:)"
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    template: {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.js"
            },
            "2": {
              name: "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          contentName: "string.template.js",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          patterns: [
            {
              include: "#template-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-call": {
      patterns: [
        {
          begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*)(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
          end: "(?=`)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
              patterns: [
                {
                  include: "#support-function-call-identifiers"
                },
                {
                  match: "([$_[:alpha:]][$_[:alnum:]]*)",
                  name: "entity.name.function.tagged-template.js"
                }
              ]
            },
            {
              include: "#type-arguments"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?\\s*(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.js"
            }
          },
          end: "(?=`)",
          patterns: [
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "template-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.js"
        }
      },
      contentName: "meta.embedded.line.js",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.js"
        }
      },
      name: "meta.template.expression.js",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "template-type": {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.js"
            },
            "2": {
              name: "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          contentName: "string.template.js",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          patterns: [
            {
              include: "#template-type-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-type-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.js"
        }
      },
      contentName: "meta.embedded.line.js",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.js"
        }
      },
      name: "meta.template.expression.js",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "ternary-expression": {
      begin: "(?!\\?\\.\\s*\\D)(\\?)(?!\\?)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.ternary.js"
        }
      },
      end: "\\s*(:)",
      endCaptures: {
        "1": {
          name: "keyword.operator.ternary.js"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "this-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))this\\b(?!\\$)",
      name: "variable.language.this.js"
    },
    type: {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#type-primitive"
        },
        {
          include: "#type-builtin-literals"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#type-tuple"
        },
        {
          include: "#type-object"
        },
        {
          include: "#type-operators"
        },
        {
          include: "#type-conditional"
        },
        {
          include: "#type-fn-type-parameters"
        },
        {
          include: "#type-paren-or-function-parameters"
        },
        {
          include: "#type-function-return-type"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*"
        },
        {
          include: "#type-name"
        }
      ]
    },
    "type-alias-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(type)\\b\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js"
        },
        "2": {
          name: "storage.modifier.js"
        },
        "3": {
          name: "storage.type.type.js"
        },
        "4": {
          name: "entity.name.type.alias.js"
        }
      },
      end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.type.declaration.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          begin: "(=)\\s*(intrinsic)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js"
            },
            "2": {
              name: "keyword.control.intrinsic.js"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(=)\\s*",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-annotation": {
      patterns: [
        {
          begin: "(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js"
            }
          },
          end: "(?<![\\&:|])(?!\\s*[\\&|]\\s+)((?=^|[]),;}]|//)|(?==[^>])|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.js",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js"
            }
          },
          end: "(?<![\\&:|])((?=[]),;}]|//)|(?==[^>])|(?=^\\s*$)|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.js",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-arguments": {
      begin: "<",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.begin.js"
        }
      },
      end: ">",
      endCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.end.js"
        }
      },
      name: "meta.type.parameters.js",
      patterns: [
        {
          include: "#type-arguments-body"
        }
      ]
    },
    "type-arguments-body": {
      patterns: [
        {
          captures: {
            "0": {
              name: "keyword.operator.type.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(_)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "type-builtin-literals": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(this|true|false|undefined|null|object)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.builtin.js"
    },
    "type-conditional": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js"
            }
          },
          end: "(?<=:)",
          patterns: [
            {
              begin: "\\?",
              beginCaptures: {
                "0": {
                  name: "keyword.operator.ternary.js"
                }
              },
              end: ":",
              endCaptures: {
                "0": {
                  name: "keyword.operator.ternary.js"
                }
              },
              patterns: [
                {
                  include: "#type"
                }
              ]
            },
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-fn-type-parameters": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b(?=\\s*<)",
          beginCaptures: {
            "1": {
              name: "meta.type.constructor.js storage.modifier.js"
            },
            "2": {
              name: "meta.type.constructor.js keyword.control.new.js"
            }
          },
          end: "(?<=>)",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b\\s*(?=\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "keyword.control.new.js"
            }
          },
          end: "(?<=\\))",
          name: "meta.type.constructor.js",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        },
        {
          begin: "((?=\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>))))))",
          end: "(?<=\\))",
          name: "meta.type.function.js",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        }
      ]
    },
    "type-function-return-type": {
      patterns: [
        {
          begin: "(=>)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "storage.type.function.arrow.js"
            }
          },
          end: "(?<!=>)(?<![\\&|])(?=[]),:;=>?{}]|//|$)",
          name: "meta.type.function.return.js",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.js"
            }
          },
          end: "(?<!=>)(?<![\\&|])((?=[]),:;=>?{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.type.function.return.js",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        }
      ]
    },
    "type-function-return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<==>)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-infer": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.expression.infer.js"
            },
            "2": {
              name: "entity.name.type.js"
            },
            "3": {
              name: "keyword.operator.expression.extends.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(infer)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s+(extends)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))?",
          name: "meta.type.infer.js"
        }
      ]
    },
    "type-name": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(<)",
          captures: {
            "1": {
              name: "entity.name.type.module.js"
            },
            "2": {
              name: "punctuation.accessor.js"
            },
            "3": {
              name: "punctuation.accessor.optional.js"
            },
            "4": {
              name: "meta.type.parameters.js punctuation.definition.typeparameters.begin.js"
            }
          },
          contentName: "meta.type.parameters.js",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.js punctuation.definition.typeparameters.end.js"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(<)",
          beginCaptures: {
            "1": {
              name: "entity.name.type.js"
            },
            "2": {
              name: "meta.type.parameters.js punctuation.definition.typeparameters.begin.js"
            }
          },
          contentName: "meta.type.parameters.js",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.js punctuation.definition.typeparameters.end.js"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.js"
            },
            "2": {
              name: "punctuation.accessor.js"
            },
            "3": {
              name: "punctuation.accessor.optional.js"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "entity.name.type.js"
        }
      ]
    },
    "type-object": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js"
        }
      },
      name: "meta.object.type.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#indexer-mapped-type-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#type-annotation"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.js"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-operators": {
      patterns: [
        {
          include: "#typeof-operator"
        },
        {
          include: "#type-infer"
        },
        {
          begin: "([\\&|])(?=\\s*\\{)",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.js"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          begin: "[\\&|]",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.js"
            }
          },
          end: "(?=\\S)"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))keyof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.keyof.js"
        },
        {
          match: "([:?])",
          name: "keyword.operator.ternary.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\()",
          name: "keyword.operator.expression.import.js"
        }
      ]
    },
    "type-parameters": {
      begin: "(<)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.begin.js"
        }
      },
      end: "(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.end.js"
        }
      },
      name: "meta.type.parameters.js",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends|in|out|const)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.js"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "(=)(?!>)",
          name: "keyword.operator.assignment.js"
        }
      ]
    },
    "type-paren-or-function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.js"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.js"
        }
      },
      name: "meta.type.paren.cover.js",
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "keyword.operator.rest.js"
            },
            "3": {
              name: "entity.name.function.js variable.language.this.js"
            },
            "4": {
              name: "entity.name.function.js"
            },
            "5": {
              name: "keyword.operator.optional.js"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=\\s*(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js"
            },
            "2": {
              name: "keyword.operator.rest.js"
            },
            "3": {
              name: "variable.parameter.js variable.language.this.js"
            },
            "4": {
              name: "variable.parameter.js"
            },
            "5": {
              name: "keyword.operator.optional.js"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=:)"
        },
        {
          include: "#type-annotation"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.js"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-predicate-operator": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.js"
            },
            "2": {
              name: "variable.parameter.js variable.language.this.js"
            },
            "3": {
              name: "variable.parameter.js"
            },
            "4": {
              name: "keyword.operator.expression.is.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(asserts)\\s+)?(?!asserts)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s(is)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.js"
            },
            "2": {
              name: "variable.parameter.js variable.language.this.js"
            },
            "3": {
              name: "variable.parameter.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(asserts)\\s+(?!is)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))asserts(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.type.asserts.js"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))is(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.is.js"
        }
      ]
    },
    "type-primitive": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.primitive.js"
    },
    "type-string": {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template-type"
        }
      ]
    },
    "type-tuple": {
      begin: "\\[",
      beginCaptures: {
        "0": {
          name: "meta.brace.square.js"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.js"
        }
      },
      name: "meta.type.tuple.js",
      patterns: [
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.rest.js"
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.js"
            },
            "2": {
              name: "keyword.operator.optional.js"
            },
            "3": {
              name: "punctuation.separator.label.js"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([$_[:alpha:]][$_[:alnum:]]*)\\s*(\\?)?\\s*(:)"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "typeof-operator": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))typeof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "0": {
          name: "keyword.operator.expression.typeof.js"
        }
      },
      end: "(?=[]\\&),:;=>?{|}]|(extends\\s+)|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      patterns: [
        {
          include: "#type-arguments"
        },
        {
          include: "#expression"
        }
      ]
    },
    "undefined-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))undefined(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.undefined.js"
    },
    "var-expr": {
      patterns: [
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!^let|[^$._[:alnum:]]let|^var|[^$._[:alnum:]]var)(?=\\s*$)))",
          name: "meta.var.expr.js",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.js"
                },
                "2": {
                  name: "storage.modifier.js"
                },
                "3": {
                  name: "storage.type.js"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-variable"
            },
            {
              include: "#var-single-variable"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.js"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-variable"
                },
                {
                  include: "#var-single-variable"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js"
            },
            "2": {
              name: "storage.modifier.js"
            },
            "3": {
              name: "storage.type.js"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]])const)(?=\\s*$)))",
          name: "meta.var.expr.js",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.js"
                },
                "2": {
                  name: "storage.modifier.js"
                },
                "3": {
                  name: "storage.type.js"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-const"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.js"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-const"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js"
            },
            "2": {
              name: "storage.modifier.js"
            },
            "3": {
              name: "storage.type.js"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]]|^await\\s+|[^$._[:alnum:]]await\\s+)using)(?=\\s*$)))",
          name: "meta.var.expr.js",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.js"
                },
                "2": {
                  name: "storage.modifier.js"
                },
                "3": {
                  name: "storage.type.js"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*((?!\\S)|(?=//))",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.js"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "var-single-const": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js variable.other.constant.js entity.name.function.js"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js variable.other.constant.js"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js entity.name.function.js"
            },
            "2": {
              name: "keyword.operator.definiteassignment.js"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js variable.other.constant.js"
            },
            "2": {
              name: "keyword.operator.definiteassignment.js"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js variable.other.readwrite.js"
            },
            "2": {
              name: "keyword.operator.definiteassignment.js"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable-type-annotation": {
      patterns: [
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    "variable-initializer": {
      patterns: [
        {
          begin: "(?<![!=])(=)(?!=)(?=\\s*\\S)(?!\\s*.*=>\\s*$)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js"
            }
          },
          end: "(?=$|^|[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![!=])(=)(?!=)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js"
            }
          },
          end: "(?=[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))|(?=^\\s*$)|(?<![-\\&*+/|])(?<=\\S)(?<!=)(?=\\s*$)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        }
      ]
    }
  },
  scopeName: "source.js"
};
var typescript_default = {
  displayName: "TypeScript",
  name: "typescript",
  patterns: [
    {
      include: "#directives"
    },
    {
      include: "#statements"
    },
    {
      include: "#shebang"
    }
  ],
  repository: {
    "access-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.ts"
    },
    "after-operator-block-as-object-literal": {
      begin: "(?<!\\+\\+|--)(?<=[!(+,:=>?\\[]|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^yield|[^$._[:alnum:]]yield|^throw|[^$._[:alnum:]]throw|^in|[^$._[:alnum:]]in|^of|[^$._[:alnum:]]of|^typeof|[^$._[:alnum:]]typeof|&&|\\|\\||\\*)\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.block.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      name: "meta.objectliteral.ts",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.ts"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.ts"
        }
      },
      patterns: [
        {
          include: "#binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.ts"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.ts"
        }
      },
      patterns: [
        {
          include: "#binding-element-const"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-literal": {
      begin: "\\s*(\\[)",
      beginCaptures: {
        "1": {
          name: "meta.brace.square.ts"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.ts"
        }
      },
      name: "meta.array.literal.ts",
      patterns: [
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "arrow-function": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.async.ts"
            },
            "2": {
              name: "variable.parameter.ts"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async)\\s+)?([$_[:alpha:]][$_[:alnum:]]*)\\s*(?==>)",
          name: "meta.arrow.ts"
        },
        {
          begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async))?((?<![]!)}])\\s*(?=((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.ts"
            }
          },
          end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
          name: "meta.arrow.ts",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            },
            {
              include: "#function-parameters"
            },
            {
              include: "#arrow-return-type"
            },
            {
              include: "#possibly-arrow-return-type"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.ts"
            }
          },
          end: "((?<=[}\\S])(?<!=>)|((?!\\{)(?=\\S)))(?!/[*/])",
          name: "meta.arrow.ts",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#decl-block"
            },
            {
              include: "#expression"
            }
          ]
        }
      ]
    },
    "arrow-return-type": {
      begin: "(?<=\\))\\s*(:)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.annotation.ts"
        }
      },
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      name: "meta.return.type.arrow.ts",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "arrow-return-type-body": {
      patterns: [
        {
          begin: "(?<=:)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "async-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(async)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.async.ts"
    },
    "binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#array-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#array-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "boolean-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))true(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.true.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))false(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.false.ts"
        }
      ]
    },
    brackets: {
      patterns: [
        {
          begin: "\\{",
          end: "}|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        },
        {
          begin: "\\[",
          end: "]|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    cast: {
      patterns: [
        {
          captures: {
            "1": {
              name: "meta.brace.angle.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "meta.brace.angle.ts"
            }
          },
          match: "\\s*(<)\\s*(const)\\s*(>)",
          name: "cast.expr.ts"
        },
        {
          begin: "(?<!\\+\\+|--)(?<=^return|[^$._[:alnum:]]return|^throw|[^$._[:alnum:]]throw|^yield|[^$._[:alnum:]]yield|^await|[^$._[:alnum:]]await|^default|[^$._[:alnum:]]default|[\\&(*,:=>?^|]|[^$_[:alnum:]](?:\\+\\+|--)|[^+]\\+|[^-]-)\\s*(<)(?!<?=)(?!\\s*$)",
          beginCaptures: {
            "1": {
              name: "meta.brace.angle.ts"
            }
          },
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.brace.angle.ts"
            }
          },
          name: "cast.expr.ts",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(?<=^)\\s*(<)(?=[$_[:alpha:]][$_[:alnum:]]*\\s*>)",
          beginCaptures: {
            "1": {
              name: "meta.brace.angle.ts"
            }
          },
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.brace.angle.ts"
            }
          },
          name: "cast.expr.ts",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "class-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(class)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "storage.modifier.ts"
        },
        "4": {
          name: "storage.type.class.ts"
        }
      },
      end: "(?<=})",
      name: "meta.class.ts",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-declaration-or-expression-patterns": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.class.ts"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    "class-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(class)\\b(?=\\s+|[<{]|/[*/])",
      beginCaptures: {
        "1": {
          name: "storage.modifier.ts"
        },
        "2": {
          name: "storage.type.class.ts"
        }
      },
      end: "(?<=})",
      name: "meta.class.ts",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-or-interface-body": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#decorator"
        },
        {
          begin: "(?<=:)\\s*",
          end: "(?=[-\\])+,:;}\\s]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#string"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#access-modifier"
        },
        {
          include: "#property-accessor"
        },
        {
          include: "#async-modifier"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        }
      ]
    },
    "class-or-interface-heritage": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(extends|implements)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.ts"
        }
      },
      end: "(?=\\{)",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.ts"
            },
            "2": {
              name: "punctuation.accessor.ts"
            },
            "3": {
              name: "punctuation.accessor.optional.ts"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))(?=\\s*[$_[:alpha:]][$_[:alnum:]]*(\\s*\\??\\.\\s*[$_[:alpha:]][$_[:alnum:]]*)*\\s*)"
        },
        {
          captures: {
            "1": {
              name: "entity.other.inherited-class.ts"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    comment: {
      patterns: [
        {
          begin: "/\\*\\*(?!/)",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.comment.ts"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.ts"
            }
          },
          name: "comment.block.documentation.ts",
          patterns: [
            {
              include: "#docblock"
            }
          ]
        },
        {
          begin: "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.comment.ts"
            },
            "2": {
              name: "storage.type.internaldeclaration.ts"
            },
            "3": {
              name: "punctuation.decorator.internaldeclaration.ts"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.ts"
            }
          },
          name: "comment.block.ts"
        },
        {
          begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
          beginCaptures: {
            "1": {
              name: "punctuation.whitespace.comment.leading.ts"
            },
            "2": {
              name: "comment.line.double-slash.ts"
            },
            "3": {
              name: "punctuation.definition.comment.ts"
            },
            "4": {
              name: "storage.type.internaldeclaration.ts"
            },
            "5": {
              name: "punctuation.decorator.internaldeclaration.ts"
            }
          },
          contentName: "comment.line.double-slash.ts",
          end: "(?=$)"
        }
      ]
    },
    "control-statement": {
      patterns: [
        {
          include: "#switch-statement"
        },
        {
          include: "#for-loop"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(catch|finally|throw|try)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.trycatch.ts"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.loop.ts"
            },
            "2": {
              name: "entity.name.label.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|goto)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|do|goto|while)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.loop.ts"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(return)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "0": {
              name: "keyword.control.flow.ts"
            }
          },
          end: "(?=[;}]|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default|switch)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.switch.ts"
        },
        {
          include: "#if-statement"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(else|if)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.conditional.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(with)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.with.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(package)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(debugger)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.other.debugger.ts"
        }
      ]
    },
    "decl-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      name: "meta.block.ts",
      patterns: [
        {
          include: "#statements"
        }
      ]
    },
    declaration: {
      patterns: [
        {
          include: "#decorator"
        },
        {
          include: "#var-expr"
        },
        {
          include: "#function-declaration"
        },
        {
          include: "#class-declaration"
        },
        {
          include: "#interface-declaration"
        },
        {
          include: "#enum-declaration"
        },
        {
          include: "#namespace-declaration"
        },
        {
          include: "#type-alias-declaration"
        },
        {
          include: "#import-equals-declaration"
        },
        {
          include: "#import-declaration"
        },
        {
          include: "#export-declaration"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(declare|export)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.ts"
        }
      ]
    },
    decorator: {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))@",
      beginCaptures: {
        "0": {
          name: "punctuation.decorator.ts"
        }
      },
      end: "(?=\\s)",
      name: "meta.decorator.ts",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "destructuring-const": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.ts",
          patterns: [
            {
              include: "#object-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.ts",
          patterns: [
            {
              include: "#array-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-parameter": {
      patterns: [
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\{)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.ts"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.object.ts"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.object.ts"
            }
          },
          name: "meta.parameter.object-binding-pattern.ts",
          patterns: [
            {
              include: "#parameter-object-binding-element"
            }
          ]
        },
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\[)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.ts"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.array.ts"
            }
          },
          end: "]",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.array.ts"
            }
          },
          name: "meta.paramter.array-binding-pattern.ts",
          patterns: [
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "destructuring-parameter-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "variable.parameter.ts"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.ts",
          patterns: [
            {
              include: "#object-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.ts",
          patterns: [
            {
              include: "#array-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-variable-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "meta.definition.variable.ts variable.other.readwrite.ts"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable-rest-const": {
      captures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "meta.definition.variable.ts variable.other.constant.ts"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    directives: {
      begin: "^(///)\\s*(?=<(reference|amd-dependency|amd-module)(\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\s*=\\s*(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))+\\s*/>\\s*$)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.comment.ts"
        }
      },
      end: "(?=$)",
      name: "comment.line.triple-slash.directive.ts",
      patterns: [
        {
          begin: "(<)(reference|amd-dependency|amd-module)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.directive.ts"
            },
            "2": {
              name: "entity.name.tag.directive.ts"
            }
          },
          end: "/>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.directive.ts"
            }
          },
          name: "meta.tag.ts",
          patterns: [
            {
              match: "path|types|no-default-lib|lib|name|resolution-mode",
              name: "entity.other.attribute-name.directive.ts"
            },
            {
              match: "=",
              name: "keyword.operator.assignment.ts"
            },
            {
              include: "#string"
            }
          ]
        }
      ]
    },
    docblock: {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.access-type.jsdoc"
            }
          },
          match: "((@)a(?:ccess|pi))\\s+(p(?:rivate|rotected|ublic))\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "punctuation.definition.bracket.angle.begin.jsdoc"
            },
            "5": {
              name: "constant.other.email.link.underline.jsdoc"
            },
            "6": {
              name: "punctuation.definition.bracket.angle.end.jsdoc"
            }
          },
          match: "((@)author)\\s+([^*/<>@\\s](?:[^*/<>@]|\\*[^/])*)(?:\\s*(<)([^>\\s]+)(>))?"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "keyword.operator.control.jsdoc"
            },
            "5": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)borrows)\\s+((?:[^*/@\\s]|\\*[^/])+)\\s+(as)\\s+((?:[^*/@\\s]|\\*[^/])+)"
        },
        {
          begin: "((@)example)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=@|\\*/)",
          name: "meta.example.jsdoc",
          patterns: [
            {
              match: "^\\s\\*\\s+"
            },
            {
              begin: "\\G(<)caption(>)",
              beginCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              },
              contentName: "constant.other.description.jsdoc",
              end: "(</)caption(>)|(?=\\*/)",
              endCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              }
            },
            {
              captures: {
                "0": {
                  name: "source.embedded.ts"
                }
              },
              match: "[^*@\\s](?:[^*]|\\*[^/])*"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.symbol-type.jsdoc"
            }
          },
          match: "((@)kind)\\s+(class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.link.underline.jsdoc"
            },
            "4": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)see)\\s+(?:((?=https?://)(?:[^*\\s]|\\*[^/])+)|((?!https?://|(?:\\[[^]\\[]*])?\\{@(?:link|linkcode|linkplain|tutorial)\\b)(?:[^*/@\\s]|\\*[^/])+))"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)template)\\s+([$A-Z_a-z][]$.\\[\\w]*(?:\\s*,\\s*[$A-Z_a-z][]$.\\[\\w]*)*)"
        },
        {
          begin: "((@)template)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:arg|argument|const|constant|member|namespace|param|var))\\s+([$A-Z_a-z][]$.\\[\\w]*)"
        },
        {
          begin: "((@)typedef)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "(?:[^*/@\\s]|\\*[^/])+",
              name: "entity.name.type.instance.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            },
            {
              captures: {
                "1": {
                  name: "punctuation.definition.optional-value.begin.bracket.square.jsdoc"
                },
                "2": {
                  name: "keyword.operator.assignment.jsdoc"
                },
                "3": {
                  name: "source.embedded.ts"
                },
                "4": {
                  name: "punctuation.definition.optional-value.end.bracket.square.jsdoc"
                },
                "5": {
                  name: "invalid.illegal.syntax.jsdoc"
                }
              },
              match: `(\\[)\\s*[$\\w]+(?:(?:\\[])?\\.[$\\w]+)*(?:\\s*(=)\\s*((?>"(?:\\*(?!/)|\\\\(?!")|[^*\\\\])*?"|'(?:\\*(?!/)|\\\\(?!')|[^*\\\\])*?'|\\[(?:\\*(?!/)|[^*])*?]|(?:\\*(?!/)|\\s(?!\\s*])|\\[.*?(?:]|(?=\\*/))|[^]*\\[\\s])*)*))?\\s*(?:(])((?:[^*\\s]|\\*[^/\\s])+)?|(?=\\*/))`,
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:define|enum|exception|export|extends|lends|implements|modifies|namespace|private|protected|returns?|satisfies|suppress|this|throws|type|yields?))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)(?:alias|augments|callback|constructs|emits|event|fires|exports?|extends|external|function|func|host|lends|listens|interface|memberof!?|method|module|mixes|mixin|name|requires|see|this|typedef|uses))\\s+((?:[^*@{}\\s]|\\*[^/])+)"
        },
        {
          begin: `((@)(?:default(?:value)?|license|version))\\s+((["']))`,
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            },
            "4": {
              name: "punctuation.definition.string.begin.jsdoc"
            }
          },
          contentName: "variable.other.jsdoc",
          end: "(\\3)|(?=$|\\*/)",
          endCaptures: {
            "0": {
              name: "variable.other.jsdoc"
            },
            "1": {
              name: "punctuation.definition.string.end.jsdoc"
            }
          }
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:default(?:value)?|license|tutorial|variation|version))\\s+([^*\\s]+)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "(@)(?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception|exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func|function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc|inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method|mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects|override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce|yields?)\\b",
          name: "storage.type.class.jsdoc"
        },
        {
          include: "#inline-tags"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "((@)[$_[:alpha:]][$_[:alnum:]]*)(?=\\s+)"
        }
      ]
    },
    "enum-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:\\b(const)\\s+)?\\b(enum)\\s+([$_[:alpha:]][$_[:alnum:]]*)",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "storage.modifier.ts"
        },
        "4": {
          name: "storage.type.enum.ts"
        },
        "5": {
          name: "entity.name.type.enum.ts"
        }
      },
      end: "(?<=})",
      name: "meta.enum.declaration.ts",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.ts"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.block.ts"
            }
          },
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "([$_[:alpha:]][$_[:alnum:]]*)",
              beginCaptures: {
                "0": {
                  name: "variable.other.enummember.ts"
                }
              },
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              begin: "(?=(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+])))",
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#string"
                },
                {
                  include: "#array-literal"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "export-declaration": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.export.ts"
            },
            "2": {
              name: "keyword.control.as.ts"
            },
            "3": {
              name: "storage.type.namespace.ts"
            },
            "4": {
              name: "entity.name.type.module.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)\\s+(as)\\s+(namespace)\\s+([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?(?:\\s*(=)|\\s+(default)(?=\\s+))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.ts"
            },
            "2": {
              name: "keyword.control.type.ts"
            },
            "3": {
              name: "keyword.operator.assignment.ts"
            },
            "4": {
              name: "keyword.control.default.ts"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.default.ts",
          patterns: [
            {
              include: "#interface-declaration"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?\\b(?!(\\$)|(\\s*:))((?=\\s*[*{])|((?=\\s*[$_[:alpha:]][$_[:alnum:]]*([,\\s]))(?!\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.ts"
            },
            "2": {
              name: "keyword.control.type.ts"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.ts",
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        }
      ]
    },
    expression: {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-inside-possibly-arrow-parens": {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "keyword.operator.rest.ts"
            },
            "3": {
              name: "entity.name.function.ts variable.language.this.ts"
            },
            "4": {
              name: "entity.name.function.ts"
            },
            "5": {
              name: "keyword.operator.optional.ts"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "keyword.operator.rest.ts"
            },
            "3": {
              name: "variable.parameter.ts variable.language.this.ts"
            },
            "4": {
              name: "variable.parameter.ts"
            },
            "5": {
              name: "keyword.operator.optional.ts"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*[,:]|$)"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.ts"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-operators": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(await)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.flow.ts"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?=\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*\\*)",
          beginCaptures: {
            "1": {
              name: "keyword.control.flow.ts"
            }
          },
          end: "\\*",
          endCaptures: {
            "0": {
              name: "keyword.generator.asterisk.ts"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.control.flow.ts"
            },
            "2": {
              name: "keyword.generator.asterisk.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s*(\\*))?"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))delete(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.delete.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))in(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.in.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))of(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.of.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.instanceof.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.new.ts"
        },
        {
          include: "#typeof-operator"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))void(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.void.ts"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*($|[]),:;}]))"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.ts"
            },
            "2": {
              name: "keyword.control.satisfies.ts"
            }
          },
          end: "(?=^|[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisfies)\\s+)|(\\s+<))",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.spread.ts"
        },
        {
          match: "(?:\\*|(?<!\\()/|[-%+])=",
          name: "keyword.operator.assignment.compound.ts"
        },
        {
          match: "(?:[\\&^]|<<|>>>??|\\|)=",
          name: "keyword.operator.assignment.compound.bitwise.ts"
        },
        {
          match: "<<|>>>?",
          name: "keyword.operator.bitwise.shift.ts"
        },
        {
          match: "[!=]==?",
          name: "keyword.operator.comparison.ts"
        },
        {
          match: "<=|>=|<>|[<>]",
          name: "keyword.operator.relational.ts"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.logical.ts"
            },
            "2": {
              name: "keyword.operator.assignment.compound.ts"
            },
            "3": {
              name: "keyword.operator.arithmetic.ts"
            }
          },
          match: "(?<=[$_[:alnum:]])(!)\\s*(?:(/=)|(/)(?![*/]))"
        },
        {
          match: "!|&&|\\|\\||\\?\\?",
          name: "keyword.operator.logical.ts"
        },
        {
          match: "[\\&^|~]",
          name: "keyword.operator.bitwise.ts"
        },
        {
          match: "=",
          name: "keyword.operator.assignment.ts"
        },
        {
          match: "--",
          name: "keyword.operator.decrement.ts"
        },
        {
          match: "\\+\\+",
          name: "keyword.operator.increment.ts"
        },
        {
          match: "[-%*+/]",
          name: "keyword.operator.arithmetic.ts"
        },
        {
          begin: "(?<=[]$)_[:alnum:]])\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)+(?:(/=)|(/)(?![*/])))",
          end: "(/=)|(/)(?!\\*([^*]|(\\*[^/]))*\\*/)",
          endCaptures: {
            "1": {
              name: "keyword.operator.assignment.compound.ts"
            },
            "2": {
              name: "keyword.operator.arithmetic.ts"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.assignment.compound.ts"
            },
            "2": {
              name: "keyword.operator.arithmetic.ts"
            }
          },
          match: "(?<=[]$)_[:alnum:]])\\s*(?:(/=)|(/)(?![*/]))"
        }
      ]
    },
    expressionPunctuations: {
      patterns: [
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-accessor"
        }
      ]
    },
    expressionWithoutIdentifiers: {
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#regex"
        },
        {
          include: "#comment"
        },
        {
          include: "#function-expression"
        },
        {
          include: "#class-expression"
        },
        {
          include: "#arrow-function"
        },
        {
          include: "#paren-expression-possibly-arrow"
        },
        {
          include: "#cast"
        },
        {
          include: "#ternary-expression"
        },
        {
          include: "#new-expr"
        },
        {
          include: "#instanceof-expr"
        },
        {
          include: "#object-literal"
        },
        {
          include: "#expression-operators"
        },
        {
          include: "#function-call"
        },
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#paren-expression"
        }
      ]
    },
    "field-declaration": {
      begin: "(?<!\\()(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s+)?(?=\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=}]|$))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.ts"
        }
      },
      end: "(?=[,;}]|$|^((?!\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=]|$))))|(?<=})",
      name: "meta.field.declaration.ts",
      patterns: [
        {
          include: "#variable-initializer"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "meta.definition.property.ts entity.name.function.ts"
            },
            "2": {
              name: "keyword.operator.optional.ts"
            },
            "3": {
              name: "keyword.operator.definiteassignment.ts"
            }
          },
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)(?:(\\?)|(!))?(?=\\s*\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          match: "#?[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.property.ts variable.object.property.ts"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.ts"
        },
        {
          match: "!",
          name: "keyword.operator.definiteassignment.ts"
        }
      ]
    },
    "for-loop": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))for(?=((\\s+|(\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*))await)?\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)?(\\())",
      beginCaptures: {
        "0": {
          name: "keyword.control.loop.ts"
        }
      },
      end: "(?<=\\))",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "await",
          name: "keyword.control.loop.ts"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.ts"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.ts"
            }
          },
          patterns: [
            {
              include: "#var-expr"
            },
            {
              include: "#expression"
            },
            {
              include: "#punctuation-semicolon"
            }
          ]
        }
      ]
    },
    "function-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#function-parameters"
        },
        {
          include: "#return-type"
        },
        {
          include: "#type-function-return-type"
        },
        {
          include: "#decl-block"
        },
        {
          match: "\\*",
          name: "keyword.generator.asterisk.ts"
        }
      ]
    },
    "function-call": {
      patterns: [
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          end: "(?<=\\))(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
              name: "meta.function-call.ts",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          end: "(?<=>)(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*[(\\[{]\\s*)$)",
              name: "meta.function-call.ts",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "function-call-optionals": {
      patterns: [
        {
          match: "\\?\\.",
          name: "meta.function-call.ts punctuation.accessor.optional.ts"
        },
        {
          match: "!",
          name: "meta.function-call.ts keyword.operator.definiteassignment.ts"
        }
      ]
    },
    "function-call-target": {
      patterns: [
        {
          include: "#support-function-call-identifiers"
        },
        {
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.function.ts"
        }
      ]
    },
    "function-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "storage.modifier.async.ts"
        },
        "4": {
          name: "storage.type.function.ts"
        },
        "5": {
          name: "keyword.generator.asterisk.ts"
        },
        "6": {
          name: "meta.definition.function.ts entity.name.function.ts"
        }
      },
      end: "(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|(?<=})",
      name: "meta.function.ts",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.ts"
        },
        "2": {
          name: "storage.type.function.ts"
        },
        "3": {
          name: "keyword.generator.asterisk.ts"
        },
        "4": {
          name: "meta.definition.function.ts entity.name.function.ts"
        }
      },
      end: "(?=;)|(?<=})",
      name: "meta.function.expression.ts",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-name": {
      match: "[$_[:alpha:]][$_[:alnum:]]*",
      name: "meta.definition.function.ts entity.name.function.ts"
    },
    "function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.parameters.begin.ts"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "punctuation.definition.parameters.end.ts"
        }
      },
      name: "meta.parameters.ts",
      patterns: [
        {
          include: "#function-parameters-body"
        }
      ]
    },
    "function-parameters-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          include: "#parameter-name"
        },
        {
          include: "#parameter-type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.ts"
        }
      ]
    },
    identifiers: {
      patterns: [
        {
          include: "#object-identifiers"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.ts"
            },
            "2": {
              name: "punctuation.accessor.optional.ts"
            },
            "3": {
              name: "entity.name.function.ts"
            }
          },
          match: "(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*)?([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.ts"
            },
            "2": {
              name: "punctuation.accessor.optional.ts"
            },
            "3": {
              name: "variable.other.constant.property.ts"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.ts"
            },
            "2": {
              name: "punctuation.accessor.optional.ts"
            },
            "3": {
              name: "variable.other.property.ts"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          match: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])",
          name: "variable.other.constant.ts"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "variable.other.readwrite.ts"
        }
      ]
    },
    "if-statement": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bif\\s*(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))\\s*(?!\\{))",
          end: "(?=;|$|})",
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(if)\\s*(\\()",
              beginCaptures: {
                "1": {
                  name: "keyword.control.conditional.ts"
                },
                "2": {
                  name: "meta.brace.round.ts"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.ts"
                }
              },
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(?<=\\))\\s*/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.ts"
                }
              },
              end: "(/)([dgimsuvy]*)",
              endCaptures: {
                "1": {
                  name: "punctuation.definition.string.end.ts"
                },
                "2": {
                  name: "keyword.other.ts"
                }
              },
              name: "string.regexp.ts",
              patterns: [
                {
                  include: "#regexp"
                }
              ]
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    "import-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type)(?!\\s+from))?(?!\\s*[(:])(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "keyword.control.import.ts"
        },
        "4": {
          name: "keyword.control.type.ts"
        }
      },
      end: "(?<!(?:^|[^$._[:alnum:]])import)(?=;|$|^)",
      name: "meta.import.ts",
      patterns: [
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          begin: `(?<=(?:^|[^$._[:alnum:]])import)(?!\\s*["'])`,
          end: "\\bfrom\\b",
          endCaptures: {
            "0": {
              name: "keyword.control.from.ts"
            }
          },
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        },
        {
          include: "#import-export-declaration"
        }
      ]
    },
    "import-equals-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(require)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "keyword.control.import.ts"
            },
            "4": {
              name: "keyword.control.type.ts"
            },
            "5": {
              name: "variable.other.readwrite.alias.ts"
            },
            "6": {
              name: "keyword.operator.assignment.ts"
            },
            "7": {
              name: "keyword.control.require.ts"
            },
            "8": {
              name: "meta.brace.round.ts"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.ts"
            }
          },
          name: "meta.import-equals.external.ts",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(?!require\\b)",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "keyword.control.import.ts"
            },
            "4": {
              name: "keyword.control.type.ts"
            },
            "5": {
              name: "variable.other.readwrite.alias.ts"
            },
            "6": {
              name: "keyword.operator.assignment.ts"
            }
          },
          end: "(?=;|$|^)",
          name: "meta.import-equals.internal.ts",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#comment"
            },
            {
              captures: {
                "1": {
                  name: "entity.name.type.module.ts"
                },
                "2": {
                  name: "punctuation.accessor.ts"
                },
                "3": {
                  name: "punctuation.accessor.optional.ts"
                }
              },
              match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
            },
            {
              match: "([$_[:alpha:]][$_[:alnum:]]*)",
              name: "variable.other.readwrite.ts"
            }
          ]
        }
      ]
    },
    "import-export-assert-clause": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(with)|(assert))\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.control.with.ts"
        },
        "2": {
          name: "keyword.control.assert.ts"
        },
        "3": {
          name: "punctuation.definition.block.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object-literal.key.ts"
        },
        {
          match: ":",
          name: "punctuation.separator.key-value.ts"
        }
      ]
    },
    "import-export-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      name: "meta.block.ts",
      patterns: [
        {
          include: "#import-export-clause"
        }
      ]
    },
    "import-export-clause": {
      patterns: [
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.ts"
            },
            "12": {
              name: "keyword.control.as.ts"
            },
            "13": {
              name: "keyword.control.default.ts"
            },
            "14": {
              name: "variable.other.readwrite.alias.ts"
            },
            "15": {
              name: "string.quoted.alias.ts"
            },
            "2": {
              name: "keyword.control.default.ts"
            },
            "3": {
              name: "constant.language.import-export-all.ts"
            },
            "4": {
              name: "variable.other.readwrite.ts"
            },
            "5": {
              name: "string.quoted.alias.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(type)\\s+)?(?:\\b(default)|(\\*)|\\b([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))\\s+(as)\\s+(?:(default(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "\\*",
          name: "constant.language.import-export-all.ts"
        },
        {
          match: "\\b(default)\\b",
          name: "keyword.control.default.ts"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.ts"
            },
            "2": {
              name: "variable.other.readwrite.alias.ts"
            },
            "3": {
              name: "string.quoted.alias.ts"
            }
          },
          match: "(?:\\b(type)\\s+)?(?:([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        }
      ]
    },
    "import-export-declaration": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#import-export-block"
        },
        {
          match: "\\bfrom\\b",
          name: "keyword.control.from.ts"
        },
        {
          include: "#import-export-assert-clause"
        },
        {
          include: "#import-export-clause"
        }
      ]
    },
    "indexer-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=:)",
      beginCaptures: {
        "1": {
          name: "storage.modifier.ts"
        },
        "2": {
          name: "meta.brace.square.ts"
        },
        "3": {
          name: "variable.parameter.ts"
        }
      },
      end: "(])\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.ts"
        },
        "2": {
          name: "keyword.operator.optional.ts"
        }
      },
      name: "meta.indexer.declaration.ts",
      patterns: [
        {
          include: "#type-annotation"
        }
      ]
    },
    "indexer-mapped-type-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([-+])?(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s+(in)\\s+",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.modifier.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "meta.brace.square.ts"
        },
        "4": {
          name: "entity.name.type.ts"
        },
        "5": {
          name: "keyword.operator.expression.in.ts"
        }
      },
      end: "(])([-+])?\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.ts"
        },
        "2": {
          name: "keyword.operator.type.modifier.ts"
        },
        "3": {
          name: "keyword.operator.optional.ts"
        }
      },
      name: "meta.indexer.mappedtype.declaration.ts",
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.as.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+"
        },
        {
          include: "#type"
        }
      ]
    },
    "inline-tags": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.bracket.square.begin.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.square.end.jsdoc"
            }
          },
          match: "(\\[)[^]]+(])(?=\\{@(?:link|linkcode|linkplain|tutorial))",
          name: "constant.other.description.jsdoc"
        },
        {
          begin: "(\\{)((@)(?:link(?:code|plain)?|tutorial))\\s*",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            },
            "2": {
              name: "storage.type.class.jsdoc"
            },
            "3": {
              name: "punctuation.definition.inline.tag.jsdoc"
            }
          },
          end: "}|(?=\\*/)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          name: "entity.name.type.instance.jsdoc",
          patterns: [
            {
              captures: {
                "1": {
                  name: "variable.other.link.underline.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?=https?://)(?:[^*|}\\s]|\\*/)+)(\\|)?"
            },
            {
              captures: {
                "1": {
                  name: "variable.other.description.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?:[^*@{|}\\s]|\\*[^/])+)(\\|)?"
            }
          ]
        }
      ]
    },
    "instanceof-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(instanceof)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.expression.instanceof.ts"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|([!=]==?)|(([\\&^|~]\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s+instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "interface-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(interface)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "storage.modifier.ts"
        },
        "4": {
          name: "storage.type.interface.ts"
        }
      },
      end: "(?<=})",
      name: "meta.interface.ts",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.interface.ts"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    jsdoctype: {
      patterns: [
        {
          begin: "\\G(\\{)",
          beginCaptures: {
            "0": {
              name: "entity.name.type.instance.jsdoc"
            },
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            }
          },
          contentName: "entity.name.type.instance.jsdoc",
          end: "((}))\\s*|(?=\\*/)",
          endCaptures: {
            "1": {
              name: "entity.name.type.instance.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    label: {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)(?=\\s*\\{)",
          beginCaptures: {
            "1": {
              name: "entity.name.label.ts"
            },
            "2": {
              name: "punctuation.separator.label.ts"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#decl-block"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.ts"
            },
            "2": {
              name: "punctuation.separator.label.ts"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)"
        }
      ]
    },
    literal: {
      patterns: [
        {
          include: "#numeric-literal"
        },
        {
          include: "#boolean-literal"
        },
        {
          include: "#null-literal"
        },
        {
          include: "#undefined-literal"
        },
        {
          include: "#numericConstant-literal"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#this-literal"
        },
        {
          include: "#super-literal"
        }
      ]
    },
    "method-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?\\s*\\b(constructor)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "storage.modifier.ts"
            },
            "4": {
              name: "storage.modifier.async.ts"
            },
            "5": {
              name: "storage.type.ts"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.ts",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\s*\\b(new)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))|(?:(\\*)\\s*)?)(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "storage.modifier.ts"
            },
            "4": {
              name: "storage.modifier.async.ts"
            },
            "5": {
              name: "keyword.operator.new.ts"
            },
            "6": {
              name: "keyword.generator.asterisk.ts"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.ts",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "storage.modifier.ts"
            },
            "4": {
              name: "storage.modifier.async.ts"
            },
            "5": {
              name: "storage.type.property.ts"
            },
            "6": {
              name: "keyword.generator.asterisk.ts"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.ts",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        }
      ]
    },
    "method-declaration-name": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??)\\s*[(<])",
      end: "(?=[(<])",
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.method.ts entity.name.function.ts"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.ts"
        }
      ]
    },
    "namespace-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(namespace|module)\\s+(?=[\"$'_`[:alpha:]])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "storage.type.namespace.ts"
        }
      },
      end: "(?<=})|(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.namespace.declaration.ts",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.type.module.ts"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "new-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.new.ts"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      name: "new.expr.ts",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "null-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))null(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.null.ts"
    },
    "numeric-literal": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.ts"
            }
          },
          match: "\\b(?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$)",
          name: "constant.numeric.hex.ts"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.ts"
            }
          },
          match: "\\b(?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.binary.ts"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.ts"
            }
          },
          match: "\\b(?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.octal.ts"
        },
        {
          captures: {
            "0": {
              name: "constant.numeric.decimal.ts"
            },
            "1": {
              name: "meta.delimiter.decimal.period.ts"
            },
            "10": {
              name: "meta.delimiter.decimal.period.ts"
            },
            "11": {
              name: "storage.type.numeric.bigint.ts"
            },
            "12": {
              name: "meta.delimiter.decimal.period.ts"
            },
            "13": {
              name: "storage.type.numeric.bigint.ts"
            },
            "14": {
              name: "storage.type.numeric.bigint.ts"
            },
            "2": {
              name: "storage.type.numeric.bigint.ts"
            },
            "3": {
              name: "meta.delimiter.decimal.period.ts"
            },
            "4": {
              name: "storage.type.numeric.bigint.ts"
            },
            "5": {
              name: "meta.delimiter.decimal.period.ts"
            },
            "6": {
              name: "storage.type.numeric.bigint.ts"
            },
            "7": {
              name: "storage.type.numeric.bigint.ts"
            },
            "8": {
              name: "meta.delimiter.decimal.period.ts"
            },
            "9": {
              name: "storage.type.numeric.bigint.ts"
            }
          },
          match: "(?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)"
        }
      ]
    },
    "numericConstant-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))NaN(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.nan.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Infinity(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.infinity.ts"
        }
      ]
    },
    "object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element"
            }
          ]
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element-const"
            }
          ]
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-propertyName": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
      end: "(:)",
      endCaptures: {
        "0": {
          name: "punctuation.destructuring.ts"
        }
      },
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "variable.object.property.ts"
        }
      ]
    },
    "object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.ts"
        }
      },
      patterns: [
        {
          include: "#object-binding-element"
        }
      ]
    },
    "object-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.ts"
        }
      },
      patterns: [
        {
          include: "#object-binding-element-const"
        }
      ]
    },
    "object-identifiers": {
      patterns: [
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*\\??\\.\\s*prototype\\b(?!\\$))",
          name: "support.class.ts"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.ts"
            },
            "2": {
              name: "punctuation.accessor.optional.ts"
            },
            "3": {
              name: "variable.other.constant.object.property.ts"
            },
            "4": {
              name: "variable.other.object.property.ts"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(#?\\p{upper}[$_\\d[:upper:]]*)|(#?[$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          captures: {
            "1": {
              name: "variable.other.constant.object.ts"
            },
            "2": {
              name: "variable.other.object.ts"
            }
          },
          match: "(?:(\\p{upper}[$_\\d[:upper:]]*)|([$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        }
      ]
    },
    "object-literal": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      name: "meta.objectliteral.ts",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "object-literal-method-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.ts"
        },
        "2": {
          name: "storage.type.property.ts"
        },
        "3": {
          name: "keyword.generator.asterisk.ts"
        }
      },
      end: "(?=[,;}])|(?<=})",
      name: "meta.method.declaration.ts",
      patterns: [
        {
          include: "#method-declaration-name"
        },
        {
          include: "#function-body"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.ts"
            },
            "2": {
              name: "storage.type.property.ts"
            },
            "3": {
              name: "keyword.generator.asterisk.ts"
            }
          },
          end: "(?=[(<])",
          patterns: [
            {
              include: "#method-declaration-name"
            }
          ]
        }
      ]
    },
    "object-member": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#object-literal-method-declaration"
        },
        {
          begin: "(?=\\[)",
          end: "(?=:)|((?<=])(?=\\s*[(<]))",
          name: "meta.object.member.ts meta.object-literal.key.ts",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#array-literal"
            }
          ]
        },
        {
          begin: "(?=[\"'`])",
          end: "(?=:)|((?<=[\"'`])(?=((\\s*[(,<}])|(\\s+(as|satisifies)\\s+))))",
          name: "meta.object.member.ts meta.object-literal.key.ts",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?=\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)))",
          end: "(?=:)|(?=\\s*([(,<}])|(\\s+as|satisifies\\s+))",
          name: "meta.object.member.ts meta.object-literal.key.ts",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#numeric-literal"
            }
          ]
        },
        {
          begin: "(?<=[]\"'`])(?=\\s*[(<])",
          end: "(?=[,;}])|(?<=})",
          name: "meta.method.declaration.ts",
          patterns: [
            {
              include: "#function-body"
            }
          ]
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.ts"
            },
            "1": {
              name: "constant.numeric.decimal.ts"
            }
          },
          match: "(?![$_[:alpha:]])(\\d+)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.ts"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.ts"
            },
            "1": {
              name: "entity.name.function.ts"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:(\\s*/\\*([^*]|(\\*[^/]))*\\*/)*\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))",
          name: "meta.object.member.ts"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.ts"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.ts"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.ts"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.ts",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "variable.other.readwrite.ts"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.ts"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*([,}]|$))",
          name: "meta.object.member.ts"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.ts"
            },
            "2": {
              name: "keyword.control.satisfies.ts"
            }
          },
          end: "(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|^|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisifies)\\s+))",
          name: "meta.object.member.ts",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(?=[$_[:alpha:]][$_[:alnum:]]*\\s*=)",
          end: "(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.ts",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: ":",
          beginCaptures: {
            "0": {
              name: "meta.object-literal.key.ts punctuation.separator.key-value.ts"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.ts",
          patterns: [
            {
              begin: "(?<=:)\\s*(async)?(?=\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.ts"
                }
              },
              end: "(?<=\\))",
              patterns: [
                {
                  include: "#type-parameters"
                },
                {
                  begin: "\\(",
                  beginCaptures: {
                    "0": {
                      name: "meta.brace.round.ts"
                    }
                  },
                  end: "\\)",
                  endCaptures: {
                    "0": {
                      name: "meta.brace.round.ts"
                    }
                  },
                  patterns: [
                    {
                      include: "#expression-inside-possibly-arrow-parens"
                    }
                  ]
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.ts"
                },
                "2": {
                  name: "meta.brace.round.ts"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.ts"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(?=<\\s*$)",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.ts"
                }
              },
              end: "(?<=>)",
              patterns: [
                {
                  include: "#type-parameters"
                }
              ]
            },
            {
              begin: "(?<=>)\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "meta.brace.round.ts"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.ts"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              include: "#possibly-arrow-return-type"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "parameter-array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.ts"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.ts"
        }
      },
      patterns: [
        {
          include: "#parameter-binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#parameter-array-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "parameter-name": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "keyword.operator.rest.ts"
            },
            "3": {
              name: "entity.name.function.ts variable.language.this.ts"
            },
            "4": {
              name: "entity.name.function.ts"
            },
            "5": {
              name: "keyword.operator.optional.ts"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "keyword.operator.rest.ts"
            },
            "3": {
              name: "variable.parameter.ts variable.language.this.ts"
            },
            "4": {
              name: "variable.parameter.ts"
            },
            "5": {
              name: "keyword.operator.optional.ts"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)"
        }
      ]
    },
    "parameter-object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.ts"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.ts"
        }
      },
      patterns: [
        {
          include: "#parameter-object-binding-element"
        }
      ]
    },
    "parameter-type-annotation": {
      patterns: [
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.ts"
            }
          },
          end: "(?=[),])|(?==[^>])",
          name: "meta.type.annotation.ts",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "paren-expression": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.ts"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.ts"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "paren-expression-possibly-arrow": {
      patterns: [
        {
          begin: "(?<=[(,=])\\s*(async)?(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.ts"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          begin: "(?<=[(,=]|=>|^return|[^$._[:alnum:]]return)\\s*(async)?(?=\\s*((((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()|(<)|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)))\\s*$)",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.ts"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          include: "#possibly-arrow-return-type"
        }
      ]
    },
    "paren-expression-possibly-arrow-with-typeparameters": {
      patterns: [
        {
          include: "#type-parameters"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.ts"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.ts"
            }
          },
          patterns: [
            {
              include: "#expression-inside-possibly-arrow-parens"
            }
          ]
        }
      ]
    },
    "possibly-arrow-return-type": {
      begin: "(?<=\\)|^)\\s*(:)(?=\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*=>)",
      beginCaptures: {
        "1": {
          name: "meta.arrow.ts meta.return.type.arrow.ts keyword.operator.type.annotation.ts"
        }
      },
      contentName: "meta.arrow.ts meta.return.type.arrow.ts",
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "property-accessor": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(accessor|get|set)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.type.property.ts"
    },
    "punctuation-accessor": {
      captures: {
        "1": {
          name: "punctuation.accessor.ts"
        },
        "2": {
          name: "punctuation.accessor.optional.ts"
        }
      },
      match: "(\\.)|(\\?\\.(?!\\s*\\d))"
    },
    "punctuation-comma": {
      match: ",",
      name: "punctuation.separator.comma.ts"
    },
    "punctuation-semicolon": {
      match: ";",
      name: "punctuation.terminator.statement.ts"
    },
    "qstring-double": {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.ts"
        }
      },
      end: '(")|([^\\n\\\\])$',
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.ts"
        },
        "2": {
          name: "invalid.illegal.newline.ts"
        }
      },
      name: "string.quoted.double.ts",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    "qstring-single": {
      begin: "'",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.ts"
        }
      },
      end: "(')|([^\\n\\\\])$",
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.ts"
        },
        "2": {
          name: "invalid.illegal.newline.ts"
        }
      },
      name: "string.quoted.single.ts",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    regex: {
      patterns: [
        {
          begin: "(?<!\\+\\+|--|})(?<=[!(+,:=?\\[]|^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case|=>|&&|\\|\\||\\*/)\\s*(/)(?![*/])(?=(?:[^()/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)+]|\\(([^)\\\\]|\\\\.)+\\))+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.string.begin.ts"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.ts"
            },
            "2": {
              name: "keyword.other.ts"
            }
          },
          name: "string.regexp.ts",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "((?<![]$)_[:alnum:]]|\\+\\+|--|}|\\*/)|((?<=^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case))\\s*)/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.string.begin.ts"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.ts"
            },
            "2": {
              name: "keyword.other.ts"
            }
          },
          name: "string.regexp.ts",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        }
      ]
    },
    "regex-character-class": {
      patterns: [
        {
          match: "\\\\[DSWdfnrstvw]|\\.",
          name: "constant.other.character-class.regexp"
        },
        {
          match: "\\\\([0-7]{3}|x\\h{2}|u\\h{4})",
          name: "constant.character.numeric.regexp"
        },
        {
          match: "\\\\c[A-Z]",
          name: "constant.character.control.regexp"
        },
        {
          match: "\\\\.",
          name: "constant.character.escape.backslash.regexp"
        }
      ]
    },
    regexp: {
      patterns: [
        {
          match: "\\\\[Bb]|[$^]",
          name: "keyword.control.anchor.regexp"
        },
        {
          captures: {
            "0": {
              name: "keyword.other.back-reference.regexp"
            },
            "1": {
              name: "variable.other.regexp"
            }
          },
          match: "\\\\(?:[1-9]\\d*|k<([$A-Z_a-z][$\\w]*)>)"
        },
        {
          match: "[*+?]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)}\\??",
          name: "keyword.operator.quantifier.regexp"
        },
        {
          match: "\\|",
          name: "keyword.operator.or.regexp"
        },
        {
          begin: "(\\()((\\?=)|(\\?!)|(\\?<=)|(\\?<!))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            },
            "2": {
              name: "punctuation.definition.group.assertion.regexp"
            },
            "3": {
              name: "meta.assertion.look-ahead.regexp"
            },
            "4": {
              name: "meta.assertion.negative-look-ahead.regexp"
            },
            "5": {
              name: "meta.assertion.look-behind.regexp"
            },
            "6": {
              name: "meta.assertion.negative-look-behind.regexp"
            }
          },
          end: "(\\))",
          endCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.assertion.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "\\((?:(\\?:)|\\?<([$A-Z_a-z][$\\w]*)>)?",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            },
            "1": {
              name: "punctuation.definition.group.no-capture.regexp"
            },
            "2": {
              name: "variable.other.regexp"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "(\\[)(\\^)?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            },
            "2": {
              name: "keyword.operator.negation.regexp"
            }
          },
          end: "(])",
          endCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            }
          },
          name: "constant.other.character-class.set.regexp",
          patterns: [
            {
              captures: {
                "1": {
                  name: "constant.character.numeric.regexp"
                },
                "2": {
                  name: "constant.character.control.regexp"
                },
                "3": {
                  name: "constant.character.escape.backslash.regexp"
                },
                "4": {
                  name: "constant.character.numeric.regexp"
                },
                "5": {
                  name: "constant.character.control.regexp"
                },
                "6": {
                  name: "constant.character.escape.backslash.regexp"
                }
              },
              match: "(?:.|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))-(?:[^]\\\\]|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))",
              name: "constant.other.character-class.range.regexp"
            },
            {
              include: "#regex-character-class"
            }
          ]
        },
        {
          include: "#regex-character-class"
        }
      ]
    },
    "return-type": {
      patterns: [
        {
          begin: "(?<=\\))\\s*(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.ts"
            }
          },
          end: "(?<![\\&:|])(?=$|^|[,;{}]|//)",
          name: "meta.return.type.ts",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        },
        {
          begin: "(?<=\\))\\s*(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.ts"
            }
          },
          end: "(?<![\\&:|])((?=[,;{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.return.type.ts",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        }
      ]
    },
    "return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<=[\\&:|])(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    shebang: {
      captures: {
        "1": {
          name: "punctuation.definition.comment.ts"
        }
      },
      match: "\\A(#!).*(?=$)",
      name: "comment.line.shebang.ts"
    },
    "single-line-comment-consuming-line-ending": {
      begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
      beginCaptures: {
        "1": {
          name: "punctuation.whitespace.comment.leading.ts"
        },
        "2": {
          name: "comment.line.double-slash.ts"
        },
        "3": {
          name: "punctuation.definition.comment.ts"
        },
        "4": {
          name: "storage.type.internaldeclaration.ts"
        },
        "5": {
          name: "punctuation.decorator.internaldeclaration.ts"
        }
      },
      contentName: "comment.line.double-slash.ts",
      end: "(?=^)"
    },
    statements: {
      patterns: [
        {
          include: "#declaration"
        },
        {
          include: "#control-statement"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#label"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    string: {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template"
        }
      ]
    },
    "string-character-escape": {
      match: "\\\\(x\\h{2}|u\\h{4}|u\\{\\h+}|[012][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)",
      name: "constant.character.escape.ts"
    },
    "super-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))super\\b(?!\\$)",
      name: "variable.language.super.ts"
    },
    "support-function-call-identifiers": {
      patterns: [
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#object-identifiers"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\(\\s*[\"'`])",
          name: "keyword.operator.expression.import.ts"
        }
      ]
    },
    "support-objects": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(arguments)\\b(?!\\$)",
          name: "variable.language.arguments.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(Promise)\\b(?!\\$)",
          name: "support.class.promise.ts"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.import.ts"
            },
            "2": {
              name: "punctuation.accessor.ts"
            },
            "3": {
              name: "punctuation.accessor.optional.ts"
            },
            "4": {
              name: "support.variable.property.importmeta.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(import)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(meta)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.new.ts"
            },
            "2": {
              name: "punctuation.accessor.ts"
            },
            "3": {
              name: "punctuation.accessor.optional.ts"
            },
            "4": {
              name: "support.variable.property.target.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(target)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.ts"
            },
            "2": {
              name: "punctuation.accessor.optional.ts"
            },
            "3": {
              name: "support.variable.property.ts"
            },
            "4": {
              name: "support.constant.ts"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(constructor|length|prototype|__proto__)\\b(?!\\$|\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\()|(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\b(?!\\$))"
        },
        {
          captures: {
            "1": {
              name: "support.type.object.module.ts"
            },
            "2": {
              name: "support.type.object.module.ts"
            },
            "3": {
              name: "punctuation.accessor.ts"
            },
            "4": {
              name: "punctuation.accessor.optional.ts"
            },
            "5": {
              name: "support.type.object.module.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(exports)|(module)(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))(exports|id|filename|loaded|parent|children))?)\\b(?!\\$)"
        }
      ]
    },
    "switch-statement": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bswitch\\s*\\()",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      name: "switch-statement.expr.ts",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(switch)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.switch.ts"
            },
            "2": {
              name: "meta.brace.round.ts"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.ts"
            }
          },
          name: "switch-expression.expr.ts",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.ts"
            }
          },
          end: "(?=})",
          name: "switch-block.expr.ts",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default(?=:))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
              beginCaptures: {
                "1": {
                  name: "keyword.control.switch.ts"
                }
              },
              end: "(?=:)",
              name: "case-clause.expr.ts",
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(:)\\s*(\\{)",
              beginCaptures: {
                "1": {
                  name: "case-clause.expr.ts punctuation.definition.section.case-statement.ts"
                },
                "2": {
                  name: "meta.block.ts punctuation.definition.block.ts"
                }
              },
              contentName: "meta.block.ts",
              end: "}",
              endCaptures: {
                "0": {
                  name: "meta.block.ts punctuation.definition.block.ts"
                }
              },
              patterns: [
                {
                  include: "#statements"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "case-clause.expr.ts punctuation.definition.section.case-statement.ts"
                }
              },
              match: "(:)"
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    template: {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.ts"
            },
            "2": {
              name: "string.template.ts punctuation.definition.string.template.begin.ts"
            }
          },
          contentName: "string.template.ts",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.ts punctuation.definition.string.template.end.ts"
            }
          },
          patterns: [
            {
              include: "#template-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-call": {
      patterns: [
        {
          begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*)(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
          end: "(?=`)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
              patterns: [
                {
                  include: "#support-function-call-identifiers"
                },
                {
                  match: "([$_[:alpha:]][$_[:alnum:]]*)",
                  name: "entity.name.function.tagged-template.ts"
                }
              ]
            },
            {
              include: "#type-arguments"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?\\s*(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.ts"
            }
          },
          end: "(?=`)",
          patterns: [
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "template-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.ts"
        }
      },
      contentName: "meta.embedded.line.ts",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.ts"
        }
      },
      name: "meta.template.expression.ts",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "template-type": {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.ts"
            },
            "2": {
              name: "string.template.ts punctuation.definition.string.template.begin.ts"
            }
          },
          contentName: "string.template.ts",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.ts punctuation.definition.string.template.end.ts"
            }
          },
          patterns: [
            {
              include: "#template-type-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-type-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.ts"
        }
      },
      contentName: "meta.embedded.line.ts",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.ts"
        }
      },
      name: "meta.template.expression.ts",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "ternary-expression": {
      begin: "(?!\\?\\.\\s*\\D)(\\?)(?!\\?)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.ternary.ts"
        }
      },
      end: "\\s*(:)",
      endCaptures: {
        "1": {
          name: "keyword.operator.ternary.ts"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "this-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))this\\b(?!\\$)",
      name: "variable.language.this.ts"
    },
    type: {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#type-primitive"
        },
        {
          include: "#type-builtin-literals"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#type-tuple"
        },
        {
          include: "#type-object"
        },
        {
          include: "#type-operators"
        },
        {
          include: "#type-conditional"
        },
        {
          include: "#type-fn-type-parameters"
        },
        {
          include: "#type-paren-or-function-parameters"
        },
        {
          include: "#type-function-return-type"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*"
        },
        {
          include: "#type-name"
        }
      ]
    },
    "type-alias-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(type)\\b\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.ts"
        },
        "2": {
          name: "storage.modifier.ts"
        },
        "3": {
          name: "storage.type.type.ts"
        },
        "4": {
          name: "entity.name.type.alias.ts"
        }
      },
      end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.type.declaration.ts",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          begin: "(=)\\s*(intrinsic)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.ts"
            },
            "2": {
              name: "keyword.control.intrinsic.ts"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(=)\\s*",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.ts"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-annotation": {
      patterns: [
        {
          begin: "(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.ts"
            }
          },
          end: "(?<![\\&:|])(?!\\s*[\\&|]\\s+)((?=^|[]),;}]|//)|(?==[^>])|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.ts",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.ts"
            }
          },
          end: "(?<![\\&:|])((?=[]),;}]|//)|(?==[^>])|(?=^\\s*$)|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.ts",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-arguments": {
      begin: "<",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.begin.ts"
        }
      },
      end: ">",
      endCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.end.ts"
        }
      },
      name: "meta.type.parameters.ts",
      patterns: [
        {
          include: "#type-arguments-body"
        }
      ]
    },
    "type-arguments-body": {
      patterns: [
        {
          captures: {
            "0": {
              name: "keyword.operator.type.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(_)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "type-builtin-literals": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(this|true|false|undefined|null|object)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.builtin.ts"
    },
    "type-conditional": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.modifier.ts"
            }
          },
          end: "(?<=:)",
          patterns: [
            {
              begin: "\\?",
              beginCaptures: {
                "0": {
                  name: "keyword.operator.ternary.ts"
                }
              },
              end: ":",
              endCaptures: {
                "0": {
                  name: "keyword.operator.ternary.ts"
                }
              },
              patterns: [
                {
                  include: "#type"
                }
              ]
            },
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-fn-type-parameters": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b(?=\\s*<)",
          beginCaptures: {
            "1": {
              name: "meta.type.constructor.ts storage.modifier.ts"
            },
            "2": {
              name: "meta.type.constructor.ts keyword.control.new.ts"
            }
          },
          end: "(?<=>)",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b\\s*(?=\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "keyword.control.new.ts"
            }
          },
          end: "(?<=\\))",
          name: "meta.type.constructor.ts",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        },
        {
          begin: "((?=\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>))))))",
          end: "(?<=\\))",
          name: "meta.type.function.ts",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        }
      ]
    },
    "type-function-return-type": {
      patterns: [
        {
          begin: "(=>)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "storage.type.function.arrow.ts"
            }
          },
          end: "(?<!=>)(?<![\\&|])(?=[]),:;=>?{}]|//|$)",
          name: "meta.type.function.return.ts",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.ts"
            }
          },
          end: "(?<!=>)(?<![\\&|])((?=[]),:;=>?{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.type.function.return.ts",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        }
      ]
    },
    "type-function-return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<==>)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-infer": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.expression.infer.ts"
            },
            "2": {
              name: "entity.name.type.ts"
            },
            "3": {
              name: "keyword.operator.expression.extends.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(infer)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s+(extends)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))?",
          name: "meta.type.infer.ts"
        }
      ]
    },
    "type-name": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(<)",
          captures: {
            "1": {
              name: "entity.name.type.module.ts"
            },
            "2": {
              name: "punctuation.accessor.ts"
            },
            "3": {
              name: "punctuation.accessor.optional.ts"
            },
            "4": {
              name: "meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts"
            }
          },
          contentName: "meta.type.parameters.ts",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.ts punctuation.definition.typeparameters.end.ts"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(<)",
          beginCaptures: {
            "1": {
              name: "entity.name.type.ts"
            },
            "2": {
              name: "meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts"
            }
          },
          contentName: "meta.type.parameters.ts",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.ts punctuation.definition.typeparameters.end.ts"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.ts"
            },
            "2": {
              name: "punctuation.accessor.ts"
            },
            "3": {
              name: "punctuation.accessor.optional.ts"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "entity.name.type.ts"
        }
      ]
    },
    "type-object": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.ts"
        }
      },
      name: "meta.object.type.ts",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#indexer-mapped-type-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#type-annotation"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.ts"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-operators": {
      patterns: [
        {
          include: "#typeof-operator"
        },
        {
          include: "#type-infer"
        },
        {
          begin: "([\\&|])(?=\\s*\\{)",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.ts"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          begin: "[\\&|]",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.ts"
            }
          },
          end: "(?=\\S)"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))keyof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.keyof.ts"
        },
        {
          match: "([:?])",
          name: "keyword.operator.ternary.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\()",
          name: "keyword.operator.expression.import.ts"
        }
      ]
    },
    "type-parameters": {
      begin: "(<)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.begin.ts"
        }
      },
      end: "(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.end.ts"
        }
      },
      name: "meta.type.parameters.ts",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends|in|out|const)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.ts"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "(=)(?!>)",
          name: "keyword.operator.assignment.ts"
        }
      ]
    },
    "type-paren-or-function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.ts"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.ts"
        }
      },
      name: "meta.type.paren.cover.ts",
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "keyword.operator.rest.ts"
            },
            "3": {
              name: "entity.name.function.ts variable.language.this.ts"
            },
            "4": {
              name: "entity.name.function.ts"
            },
            "5": {
              name: "keyword.operator.optional.ts"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=\\s*(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.ts"
            },
            "2": {
              name: "keyword.operator.rest.ts"
            },
            "3": {
              name: "variable.parameter.ts variable.language.this.ts"
            },
            "4": {
              name: "variable.parameter.ts"
            },
            "5": {
              name: "keyword.operator.optional.ts"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=:)"
        },
        {
          include: "#type-annotation"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.ts"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-predicate-operator": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.ts"
            },
            "2": {
              name: "variable.parameter.ts variable.language.this.ts"
            },
            "3": {
              name: "variable.parameter.ts"
            },
            "4": {
              name: "keyword.operator.expression.is.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(asserts)\\s+)?(?!asserts)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s(is)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.ts"
            },
            "2": {
              name: "variable.parameter.ts variable.language.this.ts"
            },
            "3": {
              name: "variable.parameter.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(asserts)\\s+(?!is)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))asserts(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.type.asserts.ts"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))is(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.is.ts"
        }
      ]
    },
    "type-primitive": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.primitive.ts"
    },
    "type-string": {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template-type"
        }
      ]
    },
    "type-tuple": {
      begin: "\\[",
      beginCaptures: {
        "0": {
          name: "meta.brace.square.ts"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.ts"
        }
      },
      name: "meta.type.tuple.ts",
      patterns: [
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.rest.ts"
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.ts"
            },
            "2": {
              name: "keyword.operator.optional.ts"
            },
            "3": {
              name: "punctuation.separator.label.ts"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([$_[:alpha:]][$_[:alnum:]]*)\\s*(\\?)?\\s*(:)"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "typeof-operator": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))typeof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "0": {
          name: "keyword.operator.expression.typeof.ts"
        }
      },
      end: "(?=[]\\&),:;=>?{|}]|(extends\\s+)|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      patterns: [
        {
          include: "#type-arguments"
        },
        {
          include: "#expression"
        }
      ]
    },
    "undefined-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))undefined(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.undefined.ts"
    },
    "var-expr": {
      patterns: [
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!^let|[^$._[:alnum:]]let|^var|[^$._[:alnum:]]var)(?=\\s*$)))",
          name: "meta.var.expr.ts",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.ts"
                },
                "2": {
                  name: "storage.modifier.ts"
                },
                "3": {
                  name: "storage.type.ts"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-variable"
            },
            {
              include: "#var-single-variable"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.ts"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-variable"
                },
                {
                  include: "#var-single-variable"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "storage.type.ts"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]])const)(?=\\s*$)))",
          name: "meta.var.expr.ts",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.ts"
                },
                "2": {
                  name: "storage.modifier.ts"
                },
                "3": {
                  name: "storage.type.ts"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-const"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.ts"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-const"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.ts"
            },
            "2": {
              name: "storage.modifier.ts"
            },
            "3": {
              name: "storage.type.ts"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]]|^await\\s+|[^$._[:alnum:]]await\\s+)using)(?=\\s*$)))",
          name: "meta.var.expr.ts",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.ts"
                },
                "2": {
                  name: "storage.modifier.ts"
                },
                "3": {
                  name: "storage.type.ts"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*((?!\\S)|(?=//))",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.ts"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "var-single-const": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.ts variable.other.constant.ts entity.name.function.ts"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.ts",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.ts variable.other.constant.ts"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.ts",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.ts entity.name.function.ts"
            },
            "2": {
              name: "keyword.operator.definiteassignment.ts"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.ts",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.ts variable.other.constant.ts"
            },
            "2": {
              name: "keyword.operator.definiteassignment.ts"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.ts",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.ts variable.other.readwrite.ts"
            },
            "2": {
              name: "keyword.operator.definiteassignment.ts"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.ts",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable-type-annotation": {
      patterns: [
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    "variable-initializer": {
      patterns: [
        {
          begin: "(?<![!=])(=)(?!=)(?=\\s*\\S)(?!\\s*.*=>\\s*$)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.ts"
            }
          },
          end: "(?=$|^|[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![!=])(=)(?!=)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.ts"
            }
          },
          end: "(?=[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))|(?=^\\s*$)|(?<![-\\&*+/|])(?<=\\S)(?<!=)(?=\\s*$)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        }
      ]
    }
  },
  scopeName: "source.ts"
};
var jsx_default = {
  displayName: "JSX",
  name: "jsx",
  patterns: [
    {
      include: "#directives"
    },
    {
      include: "#statements"
    },
    {
      include: "#shebang"
    }
  ],
  repository: {
    "access-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.js.jsx"
    },
    "after-operator-block-as-object-literal": {
      begin: "(?<!\\+\\+|--)(?<=[!(+,:=>?\\[]|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^yield|[^$._[:alnum:]]yield|^throw|[^$._[:alnum:]]throw|^in|[^$._[:alnum:]]in|^of|[^$._[:alnum:]]of|^typeof|[^$._[:alnum:]]typeof|&&|\\|\\||\\*)\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      name: "meta.objectliteral.js.jsx",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.js.jsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.js.jsx"
        }
      },
      patterns: [
        {
          include: "#binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.js.jsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.js.jsx"
        }
      },
      patterns: [
        {
          include: "#binding-element-const"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-literal": {
      begin: "\\s*(\\[)",
      beginCaptures: {
        "1": {
          name: "meta.brace.square.js.jsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.js.jsx"
        }
      },
      name: "meta.array.literal.js.jsx",
      patterns: [
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "arrow-function": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.async.js.jsx"
            },
            "2": {
              name: "variable.parameter.js.jsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async)\\s+)?([$_[:alpha:]][$_[:alnum:]]*)\\s*(?==>)",
          name: "meta.arrow.js.jsx"
        },
        {
          begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async))?((?<![]!)}])\\s*(?=((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js.jsx"
            }
          },
          end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
          name: "meta.arrow.js.jsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            },
            {
              include: "#function-parameters"
            },
            {
              include: "#arrow-return-type"
            },
            {
              include: "#possibly-arrow-return-type"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.js.jsx"
            }
          },
          end: "((?<=[}\\S])(?<!=>)|((?!\\{)(?=\\S)))(?!/[*/])",
          name: "meta.arrow.js.jsx",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#decl-block"
            },
            {
              include: "#expression"
            }
          ]
        }
      ]
    },
    "arrow-return-type": {
      begin: "(?<=\\))\\s*(:)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.annotation.js.jsx"
        }
      },
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      name: "meta.return.type.arrow.js.jsx",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "arrow-return-type-body": {
      patterns: [
        {
          begin: "(?<=:)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "async-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(async)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.async.js.jsx"
    },
    "binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#array-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#array-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "boolean-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))true(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.true.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))false(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.false.js.jsx"
        }
      ]
    },
    brackets: {
      patterns: [
        {
          begin: "\\{",
          end: "}|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        },
        {
          begin: "\\[",
          end: "]|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    cast: {
      patterns: [
        {
          include: "#jsx"
        }
      ]
    },
    "class-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(class)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "storage.modifier.js.jsx"
        },
        "4": {
          name: "storage.type.class.js.jsx"
        }
      },
      end: "(?<=})",
      name: "meta.class.js.jsx",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-declaration-or-expression-patterns": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.class.js.jsx"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    "class-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(class)\\b(?=\\s+|[<{]|/[*/])",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js.jsx"
        },
        "2": {
          name: "storage.type.class.js.jsx"
        }
      },
      end: "(?<=})",
      name: "meta.class.js.jsx",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-or-interface-body": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#decorator"
        },
        {
          begin: "(?<=:)\\s*",
          end: "(?=[-\\])+,:;}\\s]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#string"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#access-modifier"
        },
        {
          include: "#property-accessor"
        },
        {
          include: "#async-modifier"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        }
      ]
    },
    "class-or-interface-heritage": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(extends|implements)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js.jsx"
        }
      },
      end: "(?=\\{)",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.js.jsx"
            },
            "3": {
              name: "punctuation.accessor.optional.js.jsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))(?=\\s*[$_[:alpha:]][$_[:alnum:]]*(\\s*\\??\\.\\s*[$_[:alpha:]][$_[:alnum:]]*)*\\s*)"
        },
        {
          captures: {
            "1": {
              name: "entity.other.inherited-class.js.jsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    comment: {
      patterns: [
        {
          begin: "/\\*\\*(?!/)",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.comment.js.jsx"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.js.jsx"
            }
          },
          name: "comment.block.documentation.js.jsx",
          patterns: [
            {
              include: "#docblock"
            }
          ]
        },
        {
          begin: "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.comment.js.jsx"
            },
            "2": {
              name: "storage.type.internaldeclaration.js.jsx"
            },
            "3": {
              name: "punctuation.decorator.internaldeclaration.js.jsx"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.js.jsx"
            }
          },
          name: "comment.block.js.jsx"
        },
        {
          begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
          beginCaptures: {
            "1": {
              name: "punctuation.whitespace.comment.leading.js.jsx"
            },
            "2": {
              name: "comment.line.double-slash.js.jsx"
            },
            "3": {
              name: "punctuation.definition.comment.js.jsx"
            },
            "4": {
              name: "storage.type.internaldeclaration.js.jsx"
            },
            "5": {
              name: "punctuation.decorator.internaldeclaration.js.jsx"
            }
          },
          contentName: "comment.line.double-slash.js.jsx",
          end: "(?=$)"
        }
      ]
    },
    "control-statement": {
      patterns: [
        {
          include: "#switch-statement"
        },
        {
          include: "#for-loop"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(catch|finally|throw|try)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.trycatch.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.loop.js.jsx"
            },
            "2": {
              name: "entity.name.label.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|goto)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|do|goto|while)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.loop.js.jsx"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(return)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "0": {
              name: "keyword.control.flow.js.jsx"
            }
          },
          end: "(?=[;}]|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default|switch)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.switch.js.jsx"
        },
        {
          include: "#if-statement"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(else|if)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.conditional.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(with)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.with.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(package)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(debugger)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.other.debugger.js.jsx"
        }
      ]
    },
    "decl-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      name: "meta.block.js.jsx",
      patterns: [
        {
          include: "#statements"
        }
      ]
    },
    declaration: {
      patterns: [
        {
          include: "#decorator"
        },
        {
          include: "#var-expr"
        },
        {
          include: "#function-declaration"
        },
        {
          include: "#class-declaration"
        },
        {
          include: "#interface-declaration"
        },
        {
          include: "#enum-declaration"
        },
        {
          include: "#namespace-declaration"
        },
        {
          include: "#type-alias-declaration"
        },
        {
          include: "#import-equals-declaration"
        },
        {
          include: "#import-declaration"
        },
        {
          include: "#export-declaration"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(declare|export)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.js.jsx"
        }
      ]
    },
    decorator: {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))@",
      beginCaptures: {
        "0": {
          name: "punctuation.decorator.js.jsx"
        }
      },
      end: "(?=\\s)",
      name: "meta.decorator.js.jsx",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "destructuring-const": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.js.jsx",
          patterns: [
            {
              include: "#object-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.js.jsx",
          patterns: [
            {
              include: "#array-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-parameter": {
      patterns: [
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\{)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.js.jsx"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.object.js.jsx"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.object.js.jsx"
            }
          },
          name: "meta.parameter.object-binding-pattern.js.jsx",
          patterns: [
            {
              include: "#parameter-object-binding-element"
            }
          ]
        },
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\[)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.js.jsx"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.array.js.jsx"
            }
          },
          end: "]",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.array.js.jsx"
            }
          },
          name: "meta.paramter.array-binding-pattern.js.jsx",
          patterns: [
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "destructuring-parameter-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "variable.parameter.js.jsx"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.js.jsx",
          patterns: [
            {
              include: "#object-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.js.jsx",
          patterns: [
            {
              include: "#array-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-variable-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "meta.definition.variable.js.jsx variable.other.readwrite.js.jsx"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable-rest-const": {
      captures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "meta.definition.variable.js.jsx variable.other.constant.js.jsx"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    directives: {
      begin: "^(///)\\s*(?=<(reference|amd-dependency|amd-module)(\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\s*=\\s*(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))+\\s*/>\\s*$)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.comment.js.jsx"
        }
      },
      end: "(?=$)",
      name: "comment.line.triple-slash.directive.js.jsx",
      patterns: [
        {
          begin: "(<)(reference|amd-dependency|amd-module)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.directive.js.jsx"
            },
            "2": {
              name: "entity.name.tag.directive.js.jsx"
            }
          },
          end: "/>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.directive.js.jsx"
            }
          },
          name: "meta.tag.js.jsx",
          patterns: [
            {
              match: "path|types|no-default-lib|lib|name|resolution-mode",
              name: "entity.other.attribute-name.directive.js.jsx"
            },
            {
              match: "=",
              name: "keyword.operator.assignment.js.jsx"
            },
            {
              include: "#string"
            }
          ]
        }
      ]
    },
    docblock: {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.access-type.jsdoc"
            }
          },
          match: "((@)a(?:ccess|pi))\\s+(p(?:rivate|rotected|ublic))\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "punctuation.definition.bracket.angle.begin.jsdoc"
            },
            "5": {
              name: "constant.other.email.link.underline.jsdoc"
            },
            "6": {
              name: "punctuation.definition.bracket.angle.end.jsdoc"
            }
          },
          match: "((@)author)\\s+([^*/<>@\\s](?:[^*/<>@]|\\*[^/])*)(?:\\s*(<)([^>\\s]+)(>))?"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "keyword.operator.control.jsdoc"
            },
            "5": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)borrows)\\s+((?:[^*/@\\s]|\\*[^/])+)\\s+(as)\\s+((?:[^*/@\\s]|\\*[^/])+)"
        },
        {
          begin: "((@)example)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=@|\\*/)",
          name: "meta.example.jsdoc",
          patterns: [
            {
              match: "^\\s\\*\\s+"
            },
            {
              begin: "\\G(<)caption(>)",
              beginCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              },
              contentName: "constant.other.description.jsdoc",
              end: "(</)caption(>)|(?=\\*/)",
              endCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              }
            },
            {
              captures: {
                "0": {
                  name: "source.embedded.js.jsx"
                }
              },
              match: "[^*@\\s](?:[^*]|\\*[^/])*"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.symbol-type.jsdoc"
            }
          },
          match: "((@)kind)\\s+(class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.link.underline.jsdoc"
            },
            "4": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)see)\\s+(?:((?=https?://)(?:[^*\\s]|\\*[^/])+)|((?!https?://|(?:\\[[^]\\[]*])?\\{@(?:link|linkcode|linkplain|tutorial)\\b)(?:[^*/@\\s]|\\*[^/])+))"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)template)\\s+([$A-Z_a-z][]$.\\[\\w]*(?:\\s*,\\s*[$A-Z_a-z][]$.\\[\\w]*)*)"
        },
        {
          begin: "((@)template)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:arg|argument|const|constant|member|namespace|param|var))\\s+([$A-Z_a-z][]$.\\[\\w]*)"
        },
        {
          begin: "((@)typedef)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "(?:[^*/@\\s]|\\*[^/])+",
              name: "entity.name.type.instance.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            },
            {
              captures: {
                "1": {
                  name: "punctuation.definition.optional-value.begin.bracket.square.jsdoc"
                },
                "2": {
                  name: "keyword.operator.assignment.jsdoc"
                },
                "3": {
                  name: "source.embedded.js.jsx"
                },
                "4": {
                  name: "punctuation.definition.optional-value.end.bracket.square.jsdoc"
                },
                "5": {
                  name: "invalid.illegal.syntax.jsdoc"
                }
              },
              match: `(\\[)\\s*[$\\w]+(?:(?:\\[])?\\.[$\\w]+)*(?:\\s*(=)\\s*((?>"(?:\\*(?!/)|\\\\(?!")|[^*\\\\])*?"|'(?:\\*(?!/)|\\\\(?!')|[^*\\\\])*?'|\\[(?:\\*(?!/)|[^*])*?]|(?:\\*(?!/)|\\s(?!\\s*])|\\[.*?(?:]|(?=\\*/))|[^]*\\[\\s])*)*))?\\s*(?:(])((?:[^*\\s]|\\*[^/\\s])+)?|(?=\\*/))`,
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:define|enum|exception|export|extends|lends|implements|modifies|namespace|private|protected|returns?|satisfies|suppress|this|throws|type|yields?))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)(?:alias|augments|callback|constructs|emits|event|fires|exports?|extends|external|function|func|host|lends|listens|interface|memberof!?|method|module|mixes|mixin|name|requires|see|this|typedef|uses))\\s+((?:[^*@{}\\s]|\\*[^/])+)"
        },
        {
          begin: `((@)(?:default(?:value)?|license|version))\\s+((["']))`,
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            },
            "4": {
              name: "punctuation.definition.string.begin.jsdoc"
            }
          },
          contentName: "variable.other.jsdoc",
          end: "(\\3)|(?=$|\\*/)",
          endCaptures: {
            "0": {
              name: "variable.other.jsdoc"
            },
            "1": {
              name: "punctuation.definition.string.end.jsdoc"
            }
          }
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:default(?:value)?|license|tutorial|variation|version))\\s+([^*\\s]+)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "(@)(?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception|exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func|function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc|inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method|mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects|override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce|yields?)\\b",
          name: "storage.type.class.jsdoc"
        },
        {
          include: "#inline-tags"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "((@)[$_[:alpha:]][$_[:alnum:]]*)(?=\\s+)"
        }
      ]
    },
    "enum-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:\\b(const)\\s+)?\\b(enum)\\s+([$_[:alpha:]][$_[:alnum:]]*)",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "storage.modifier.js.jsx"
        },
        "4": {
          name: "storage.type.enum.js.jsx"
        },
        "5": {
          name: "entity.name.type.enum.js.jsx"
        }
      },
      end: "(?<=})",
      name: "meta.enum.declaration.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.js.jsx"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.block.js.jsx"
            }
          },
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "([$_[:alpha:]][$_[:alnum:]]*)",
              beginCaptures: {
                "0": {
                  name: "variable.other.enummember.js.jsx"
                }
              },
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              begin: "(?=(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+])))",
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#string"
                },
                {
                  include: "#array-literal"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "export-declaration": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.export.js.jsx"
            },
            "2": {
              name: "keyword.control.as.js.jsx"
            },
            "3": {
              name: "storage.type.namespace.js.jsx"
            },
            "4": {
              name: "entity.name.type.module.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)\\s+(as)\\s+(namespace)\\s+([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?(?:\\s*(=)|\\s+(default)(?=\\s+))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js.jsx"
            },
            "2": {
              name: "keyword.control.type.js.jsx"
            },
            "3": {
              name: "keyword.operator.assignment.js.jsx"
            },
            "4": {
              name: "keyword.control.default.js.jsx"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.default.js.jsx",
          patterns: [
            {
              include: "#interface-declaration"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?\\b(?!(\\$)|(\\s*:))((?=\\s*[*{])|((?=\\s*[$_[:alpha:]][$_[:alnum:]]*([,\\s]))(?!\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js.jsx"
            },
            "2": {
              name: "keyword.control.type.js.jsx"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.js.jsx",
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        }
      ]
    },
    expression: {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-inside-possibly-arrow-parens": {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "keyword.operator.rest.js.jsx"
            },
            "3": {
              name: "entity.name.function.js.jsx variable.language.this.js.jsx"
            },
            "4": {
              name: "entity.name.function.js.jsx"
            },
            "5": {
              name: "keyword.operator.optional.js.jsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "keyword.operator.rest.js.jsx"
            },
            "3": {
              name: "variable.parameter.js.jsx variable.language.this.js.jsx"
            },
            "4": {
              name: "variable.parameter.js.jsx"
            },
            "5": {
              name: "keyword.operator.optional.js.jsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*[,:]|$)"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.js.jsx"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-operators": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(await)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.flow.js.jsx"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?=\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*\\*)",
          beginCaptures: {
            "1": {
              name: "keyword.control.flow.js.jsx"
            }
          },
          end: "\\*",
          endCaptures: {
            "0": {
              name: "keyword.generator.asterisk.js.jsx"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.control.flow.js.jsx"
            },
            "2": {
              name: "keyword.generator.asterisk.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s*(\\*))?"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))delete(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.delete.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))in(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.in.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))of(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.of.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.instanceof.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.new.js.jsx"
        },
        {
          include: "#typeof-operator"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))void(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.void.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*($|[]),:;}]))"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.js.jsx"
            },
            "2": {
              name: "keyword.control.satisfies.js.jsx"
            }
          },
          end: "(?=^|[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisfies)\\s+)|(\\s+<))",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.spread.js.jsx"
        },
        {
          match: "(?:\\*|(?<!\\()/|[-%+])=",
          name: "keyword.operator.assignment.compound.js.jsx"
        },
        {
          match: "(?:[\\&^]|<<|>>>??|\\|)=",
          name: "keyword.operator.assignment.compound.bitwise.js.jsx"
        },
        {
          match: "<<|>>>?",
          name: "keyword.operator.bitwise.shift.js.jsx"
        },
        {
          match: "[!=]==?",
          name: "keyword.operator.comparison.js.jsx"
        },
        {
          match: "<=|>=|<>|[<>]",
          name: "keyword.operator.relational.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.logical.js.jsx"
            },
            "2": {
              name: "keyword.operator.assignment.compound.js.jsx"
            },
            "3": {
              name: "keyword.operator.arithmetic.js.jsx"
            }
          },
          match: "(?<=[$_[:alnum:]])(!)\\s*(?:(/=)|(/)(?![*/]))"
        },
        {
          match: "!|&&|\\|\\||\\?\\?",
          name: "keyword.operator.logical.js.jsx"
        },
        {
          match: "[\\&^|~]",
          name: "keyword.operator.bitwise.js.jsx"
        },
        {
          match: "=",
          name: "keyword.operator.assignment.js.jsx"
        },
        {
          match: "--",
          name: "keyword.operator.decrement.js.jsx"
        },
        {
          match: "\\+\\+",
          name: "keyword.operator.increment.js.jsx"
        },
        {
          match: "[-%*+/]",
          name: "keyword.operator.arithmetic.js.jsx"
        },
        {
          begin: "(?<=[]$)_[:alnum:]])\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)+(?:(/=)|(/)(?![*/])))",
          end: "(/=)|(/)(?!\\*([^*]|(\\*[^/]))*\\*/)",
          endCaptures: {
            "1": {
              name: "keyword.operator.assignment.compound.js.jsx"
            },
            "2": {
              name: "keyword.operator.arithmetic.js.jsx"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.assignment.compound.js.jsx"
            },
            "2": {
              name: "keyword.operator.arithmetic.js.jsx"
            }
          },
          match: "(?<=[]$)_[:alnum:]])\\s*(?:(/=)|(/)(?![*/]))"
        }
      ]
    },
    expressionPunctuations: {
      patterns: [
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-accessor"
        }
      ]
    },
    expressionWithoutIdentifiers: {
      patterns: [
        {
          include: "#jsx"
        },
        {
          include: "#string"
        },
        {
          include: "#regex"
        },
        {
          include: "#comment"
        },
        {
          include: "#function-expression"
        },
        {
          include: "#class-expression"
        },
        {
          include: "#arrow-function"
        },
        {
          include: "#paren-expression-possibly-arrow"
        },
        {
          include: "#cast"
        },
        {
          include: "#ternary-expression"
        },
        {
          include: "#new-expr"
        },
        {
          include: "#instanceof-expr"
        },
        {
          include: "#object-literal"
        },
        {
          include: "#expression-operators"
        },
        {
          include: "#function-call"
        },
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#paren-expression"
        }
      ]
    },
    "field-declaration": {
      begin: "(?<!\\()(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s+)?(?=\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=}]|$))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js.jsx"
        }
      },
      end: "(?=[,;}]|$|^((?!\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=]|$))))|(?<=})",
      name: "meta.field.declaration.js.jsx",
      patterns: [
        {
          include: "#variable-initializer"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "meta.definition.property.js.jsx entity.name.function.js.jsx"
            },
            "2": {
              name: "keyword.operator.optional.js.jsx"
            },
            "3": {
              name: "keyword.operator.definiteassignment.js.jsx"
            }
          },
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)(?:(\\?)|(!))?(?=\\s*\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          match: "#?[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.property.js.jsx variable.object.property.js.jsx"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.js.jsx"
        },
        {
          match: "!",
          name: "keyword.operator.definiteassignment.js.jsx"
        }
      ]
    },
    "for-loop": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))for(?=((\\s+|(\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*))await)?\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)?(\\())",
      beginCaptures: {
        "0": {
          name: "keyword.control.loop.js.jsx"
        }
      },
      end: "(?<=\\))",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "await",
          name: "keyword.control.loop.js.jsx"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.js.jsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js.jsx"
            }
          },
          patterns: [
            {
              include: "#var-expr"
            },
            {
              include: "#expression"
            },
            {
              include: "#punctuation-semicolon"
            }
          ]
        }
      ]
    },
    "function-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#function-parameters"
        },
        {
          include: "#return-type"
        },
        {
          include: "#type-function-return-type"
        },
        {
          include: "#decl-block"
        },
        {
          match: "\\*",
          name: "keyword.generator.asterisk.js.jsx"
        }
      ]
    },
    "function-call": {
      patterns: [
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          end: "(?<=\\))(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
              name: "meta.function-call.js.jsx",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          end: "(?<=>)(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*[(\\[{]\\s*)$)",
              name: "meta.function-call.js.jsx",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "function-call-optionals": {
      patterns: [
        {
          match: "\\?\\.",
          name: "meta.function-call.js.jsx punctuation.accessor.optional.js.jsx"
        },
        {
          match: "!",
          name: "meta.function-call.js.jsx keyword.operator.definiteassignment.js.jsx"
        }
      ]
    },
    "function-call-target": {
      patterns: [
        {
          include: "#support-function-call-identifiers"
        },
        {
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.function.js.jsx"
        }
      ]
    },
    "function-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "storage.modifier.async.js.jsx"
        },
        "4": {
          name: "storage.type.function.js.jsx"
        },
        "5": {
          name: "keyword.generator.asterisk.js.jsx"
        },
        "6": {
          name: "meta.definition.function.js.jsx entity.name.function.js.jsx"
        }
      },
      end: "(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|(?<=})",
      name: "meta.function.js.jsx",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.js.jsx"
        },
        "2": {
          name: "storage.type.function.js.jsx"
        },
        "3": {
          name: "keyword.generator.asterisk.js.jsx"
        },
        "4": {
          name: "meta.definition.function.js.jsx entity.name.function.js.jsx"
        }
      },
      end: "(?=;)|(?<=})",
      name: "meta.function.expression.js.jsx",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-name": {
      match: "[$_[:alpha:]][$_[:alnum:]]*",
      name: "meta.definition.function.js.jsx entity.name.function.js.jsx"
    },
    "function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.parameters.begin.js.jsx"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "punctuation.definition.parameters.end.js.jsx"
        }
      },
      name: "meta.parameters.js.jsx",
      patterns: [
        {
          include: "#function-parameters-body"
        }
      ]
    },
    "function-parameters-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          include: "#parameter-name"
        },
        {
          include: "#parameter-type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.js.jsx"
        }
      ]
    },
    identifiers: {
      patterns: [
        {
          include: "#object-identifiers"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "3": {
              name: "entity.name.function.js.jsx"
            }
          },
          match: "(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*)?([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "3": {
              name: "variable.other.constant.property.js.jsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "3": {
              name: "variable.other.property.js.jsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          match: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])",
          name: "variable.other.constant.js.jsx"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "variable.other.readwrite.js.jsx"
        }
      ]
    },
    "if-statement": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bif\\s*(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))\\s*(?!\\{))",
          end: "(?=;|$|})",
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(if)\\s*(\\()",
              beginCaptures: {
                "1": {
                  name: "keyword.control.conditional.js.jsx"
                },
                "2": {
                  name: "meta.brace.round.js.jsx"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.js.jsx"
                }
              },
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(?<=\\))\\s*/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.js.jsx"
                }
              },
              end: "(/)([dgimsuvy]*)",
              endCaptures: {
                "1": {
                  name: "punctuation.definition.string.end.js.jsx"
                },
                "2": {
                  name: "keyword.other.js.jsx"
                }
              },
              name: "string.regexp.js.jsx",
              patterns: [
                {
                  include: "#regexp"
                }
              ]
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    "import-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type)(?!\\s+from))?(?!\\s*[(:])(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "keyword.control.import.js.jsx"
        },
        "4": {
          name: "keyword.control.type.js.jsx"
        }
      },
      end: "(?<!(?:^|[^$._[:alnum:]])import)(?=;|$|^)",
      name: "meta.import.js.jsx",
      patterns: [
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          begin: `(?<=(?:^|[^$._[:alnum:]])import)(?!\\s*["'])`,
          end: "\\bfrom\\b",
          endCaptures: {
            "0": {
              name: "keyword.control.from.js.jsx"
            }
          },
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        },
        {
          include: "#import-export-declaration"
        }
      ]
    },
    "import-equals-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(require)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            },
            "3": {
              name: "keyword.control.import.js.jsx"
            },
            "4": {
              name: "keyword.control.type.js.jsx"
            },
            "5": {
              name: "variable.other.readwrite.alias.js.jsx"
            },
            "6": {
              name: "keyword.operator.assignment.js.jsx"
            },
            "7": {
              name: "keyword.control.require.js.jsx"
            },
            "8": {
              name: "meta.brace.round.js.jsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js.jsx"
            }
          },
          name: "meta.import-equals.external.js.jsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(?!require\\b)",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            },
            "3": {
              name: "keyword.control.import.js.jsx"
            },
            "4": {
              name: "keyword.control.type.js.jsx"
            },
            "5": {
              name: "variable.other.readwrite.alias.js.jsx"
            },
            "6": {
              name: "keyword.operator.assignment.js.jsx"
            }
          },
          end: "(?=;|$|^)",
          name: "meta.import-equals.internal.js.jsx",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#comment"
            },
            {
              captures: {
                "1": {
                  name: "entity.name.type.module.js.jsx"
                },
                "2": {
                  name: "punctuation.accessor.js.jsx"
                },
                "3": {
                  name: "punctuation.accessor.optional.js.jsx"
                }
              },
              match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
            },
            {
              match: "([$_[:alpha:]][$_[:alnum:]]*)",
              name: "variable.other.readwrite.js.jsx"
            }
          ]
        }
      ]
    },
    "import-export-assert-clause": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(with)|(assert))\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.control.with.js.jsx"
        },
        "2": {
          name: "keyword.control.assert.js.jsx"
        },
        "3": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object-literal.key.js.jsx"
        },
        {
          match: ":",
          name: "punctuation.separator.key-value.js.jsx"
        }
      ]
    },
    "import-export-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      name: "meta.block.js.jsx",
      patterns: [
        {
          include: "#import-export-clause"
        }
      ]
    },
    "import-export-clause": {
      patterns: [
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.js.jsx"
            },
            "12": {
              name: "keyword.control.as.js.jsx"
            },
            "13": {
              name: "keyword.control.default.js.jsx"
            },
            "14": {
              name: "variable.other.readwrite.alias.js.jsx"
            },
            "15": {
              name: "string.quoted.alias.js.jsx"
            },
            "2": {
              name: "keyword.control.default.js.jsx"
            },
            "3": {
              name: "constant.language.import-export-all.js.jsx"
            },
            "4": {
              name: "variable.other.readwrite.js.jsx"
            },
            "5": {
              name: "string.quoted.alias.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(type)\\s+)?(?:\\b(default)|(\\*)|\\b([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))\\s+(as)\\s+(?:(default(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "\\*",
          name: "constant.language.import-export-all.js.jsx"
        },
        {
          match: "\\b(default)\\b",
          name: "keyword.control.default.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.js.jsx"
            },
            "2": {
              name: "variable.other.readwrite.alias.js.jsx"
            },
            "3": {
              name: "string.quoted.alias.js.jsx"
            }
          },
          match: "(?:\\b(type)\\s+)?(?:([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        }
      ]
    },
    "import-export-declaration": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#import-export-block"
        },
        {
          match: "\\bfrom\\b",
          name: "keyword.control.from.js.jsx"
        },
        {
          include: "#import-export-assert-clause"
        },
        {
          include: "#import-export-clause"
        }
      ]
    },
    "indexer-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=:)",
      beginCaptures: {
        "1": {
          name: "storage.modifier.js.jsx"
        },
        "2": {
          name: "meta.brace.square.js.jsx"
        },
        "3": {
          name: "variable.parameter.js.jsx"
        }
      },
      end: "(])\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.js.jsx"
        },
        "2": {
          name: "keyword.operator.optional.js.jsx"
        }
      },
      name: "meta.indexer.declaration.js.jsx",
      patterns: [
        {
          include: "#type-annotation"
        }
      ]
    },
    "indexer-mapped-type-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([-+])?(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s+(in)\\s+",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.modifier.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "meta.brace.square.js.jsx"
        },
        "4": {
          name: "entity.name.type.js.jsx"
        },
        "5": {
          name: "keyword.operator.expression.in.js.jsx"
        }
      },
      end: "(])([-+])?\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.js.jsx"
        },
        "2": {
          name: "keyword.operator.type.modifier.js.jsx"
        },
        "3": {
          name: "keyword.operator.optional.js.jsx"
        }
      },
      name: "meta.indexer.mappedtype.declaration.js.jsx",
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.as.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+"
        },
        {
          include: "#type"
        }
      ]
    },
    "inline-tags": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.bracket.square.begin.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.square.end.jsdoc"
            }
          },
          match: "(\\[)[^]]+(])(?=\\{@(?:link|linkcode|linkplain|tutorial))",
          name: "constant.other.description.jsdoc"
        },
        {
          begin: "(\\{)((@)(?:link(?:code|plain)?|tutorial))\\s*",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            },
            "2": {
              name: "storage.type.class.jsdoc"
            },
            "3": {
              name: "punctuation.definition.inline.tag.jsdoc"
            }
          },
          end: "}|(?=\\*/)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          name: "entity.name.type.instance.jsdoc",
          patterns: [
            {
              captures: {
                "1": {
                  name: "variable.other.link.underline.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?=https?://)(?:[^*|}\\s]|\\*/)+)(\\|)?"
            },
            {
              captures: {
                "1": {
                  name: "variable.other.description.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?:[^*@{|}\\s]|\\*[^/])+)(\\|)?"
            }
          ]
        }
      ]
    },
    "instanceof-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(instanceof)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.expression.instanceof.js.jsx"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|([!=]==?)|(([\\&^|~]\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s+instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "interface-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(interface)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "storage.modifier.js.jsx"
        },
        "4": {
          name: "storage.type.interface.js.jsx"
        }
      },
      end: "(?<=})",
      name: "meta.interface.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.interface.js.jsx"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    jsdoctype: {
      patterns: [
        {
          begin: "\\G(\\{)",
          beginCaptures: {
            "0": {
              name: "entity.name.type.instance.jsdoc"
            },
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            }
          },
          contentName: "entity.name.type.instance.jsdoc",
          end: "((}))\\s*|(?=\\*/)",
          endCaptures: {
            "1": {
              name: "entity.name.type.instance.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    jsx: {
      patterns: [
        {
          include: "#jsx-tag-without-attributes-in-expression"
        },
        {
          include: "#jsx-tag-in-expression"
        }
      ]
    },
    "jsx-children": {
      patterns: [
        {
          include: "#jsx-tag-without-attributes"
        },
        {
          include: "#jsx-tag"
        },
        {
          include: "#jsx-evaluated-code"
        },
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-entities": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.js.jsx"
            },
            "3": {
              name: "punctuation.definition.entity.js.jsx"
            }
          },
          match: "(&)([0-9A-Za-z]+|#[0-9]+|#x\\h+)(;)",
          name: "constant.character.entity.js.jsx"
        }
      ]
    },
    "jsx-evaluated-code": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.section.embedded.begin.js.jsx"
        }
      },
      contentName: "meta.embedded.expression.js.jsx",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.section.embedded.end.js.jsx"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "jsx-string-double-quoted": {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js.jsx"
        }
      },
      end: '"',
      endCaptures: {
        "0": {
          name: "punctuation.definition.string.end.js.jsx"
        }
      },
      name: "string.quoted.double.js.jsx",
      patterns: [
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-string-single-quoted": {
      begin: "'",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js.jsx"
        }
      },
      end: "'",
      endCaptures: {
        "0": {
          name: "punctuation.definition.string.end.js.jsx"
        }
      },
      name: "string.quoted.single.js.jsx",
      patterns: [
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-tag": {
      begin: "(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      end: "(/>)|(</)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.tag.end.js.jsx"
        },
        "2": {
          name: "punctuation.definition.tag.begin.js.jsx"
        },
        "3": {
          name: "entity.name.tag.namespace.js.jsx"
        },
        "4": {
          name: "punctuation.separator.namespace.js.jsx"
        },
        "5": {
          name: "entity.name.tag.js.jsx"
        },
        "6": {
          name: "support.class.component.js.jsx"
        },
        "7": {
          name: "punctuation.definition.tag.end.js.jsx"
        }
      },
      name: "meta.tag.js.jsx",
      patterns: [
        {
          begin: "(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.js.jsx"
            },
            "2": {
              name: "entity.name.tag.namespace.js.jsx"
            },
            "3": {
              name: "punctuation.separator.namespace.js.jsx"
            },
            "4": {
              name: "entity.name.tag.js.jsx"
            },
            "5": {
              name: "support.class.component.js.jsx"
            }
          },
          end: "(?=/?>)",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-arguments"
            },
            {
              include: "#jsx-tag-attributes"
            }
          ]
        },
        {
          begin: "(>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.end.js.jsx"
            }
          },
          contentName: "meta.jsx.children.js.jsx",
          end: "(?=</)",
          patterns: [
            {
              include: "#jsx-children"
            }
          ]
        }
      ]
    },
    "jsx-tag-attribute-assignment": {
      match: `=(?=\\s*(?:["'{]|/\\*|//|\\n))`,
      name: "keyword.operator.assignment.js.jsx"
    },
    "jsx-tag-attribute-name": {
      captures: {
        "1": {
          name: "entity.other.attribute-name.namespace.js.jsx"
        },
        "2": {
          name: "punctuation.separator.namespace.js.jsx"
        },
        "3": {
          name: "entity.other.attribute-name.js.jsx"
        }
      },
      match: "\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(:))?([$_[:alpha:]][-$_[:alnum:]]*)(?=[=\\s]|/?>|/\\*|//)"
    },
    "jsx-tag-attributes": {
      begin: "\\s+",
      end: "(?=/?>)",
      name: "meta.tag.attributes.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#jsx-tag-attribute-name"
        },
        {
          include: "#jsx-tag-attribute-assignment"
        },
        {
          include: "#jsx-string-double-quoted"
        },
        {
          include: "#jsx-string-single-quoted"
        },
        {
          include: "#jsx-evaluated-code"
        },
        {
          include: "#jsx-tag-attributes-illegal"
        }
      ]
    },
    "jsx-tag-attributes-illegal": {
      match: "\\S+",
      name: "invalid.illegal.attribute.js.jsx"
    },
    "jsx-tag-in-expression": {
      begin: "(?<!\\+\\+|--)(?<=[(*,:=>?\\[{]|&&|\\|\\||\\?|\\*/|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^default|[^$._[:alnum:]]default|^yield|[^$._[:alnum:]]yield|^)\\s*(?!<\\s*[$_[:alpha:]][$_[:alnum:]]*((\\s+extends\\s+[^=>])|,))(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      end: "(?!(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      patterns: [
        {
          include: "#jsx-tag"
        }
      ]
    },
    "jsx-tag-without-attributes": {
      begin: "(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.js.jsx"
        },
        "2": {
          name: "entity.name.tag.namespace.js.jsx"
        },
        "3": {
          name: "punctuation.separator.namespace.js.jsx"
        },
        "4": {
          name: "entity.name.tag.js.jsx"
        },
        "5": {
          name: "support.class.component.js.jsx"
        },
        "6": {
          name: "punctuation.definition.tag.end.js.jsx"
        }
      },
      contentName: "meta.jsx.children.js.jsx",
      end: "(</)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.js.jsx"
        },
        "2": {
          name: "entity.name.tag.namespace.js.jsx"
        },
        "3": {
          name: "punctuation.separator.namespace.js.jsx"
        },
        "4": {
          name: "entity.name.tag.js.jsx"
        },
        "5": {
          name: "support.class.component.js.jsx"
        },
        "6": {
          name: "punctuation.definition.tag.end.js.jsx"
        }
      },
      name: "meta.tag.without-attributes.js.jsx",
      patterns: [
        {
          include: "#jsx-children"
        }
      ]
    },
    "jsx-tag-without-attributes-in-expression": {
      begin: "(?<!\\+\\+|--)(?<=[(*,:=>?\\[{]|&&|\\|\\||\\?|\\*/|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^default|[^$._[:alnum:]]default|^yield|[^$._[:alnum:]]yield|^)\\s*(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>))",
      end: "(?!(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>))",
      patterns: [
        {
          include: "#jsx-tag-without-attributes"
        }
      ]
    },
    label: {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)(?=\\s*\\{)",
          beginCaptures: {
            "1": {
              name: "entity.name.label.js.jsx"
            },
            "2": {
              name: "punctuation.separator.label.js.jsx"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#decl-block"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.js.jsx"
            },
            "2": {
              name: "punctuation.separator.label.js.jsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)"
        }
      ]
    },
    literal: {
      patterns: [
        {
          include: "#numeric-literal"
        },
        {
          include: "#boolean-literal"
        },
        {
          include: "#null-literal"
        },
        {
          include: "#undefined-literal"
        },
        {
          include: "#numericConstant-literal"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#this-literal"
        },
        {
          include: "#super-literal"
        }
      ]
    },
    "method-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?\\s*\\b(constructor)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            },
            "3": {
              name: "storage.modifier.js.jsx"
            },
            "4": {
              name: "storage.modifier.async.js.jsx"
            },
            "5": {
              name: "storage.type.js.jsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.js.jsx",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\s*\\b(new)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))|(?:(\\*)\\s*)?)(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            },
            "3": {
              name: "storage.modifier.js.jsx"
            },
            "4": {
              name: "storage.modifier.async.js.jsx"
            },
            "5": {
              name: "keyword.operator.new.js.jsx"
            },
            "6": {
              name: "keyword.generator.asterisk.js.jsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.js.jsx",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            },
            "3": {
              name: "storage.modifier.js.jsx"
            },
            "4": {
              name: "storage.modifier.async.js.jsx"
            },
            "5": {
              name: "storage.type.property.js.jsx"
            },
            "6": {
              name: "keyword.generator.asterisk.js.jsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.js.jsx",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        }
      ]
    },
    "method-declaration-name": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??)\\s*[(<])",
      end: "(?=[(<])",
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.method.js.jsx entity.name.function.js.jsx"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.js.jsx"
        }
      ]
    },
    "namespace-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(namespace|module)\\s+(?=[\"$'_`[:alpha:]])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "storage.type.namespace.js.jsx"
        }
      },
      end: "(?<=})|(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.namespace.declaration.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.type.module.js.jsx"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "new-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.new.js.jsx"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      name: "new.expr.js.jsx",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "null-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))null(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.null.js.jsx"
    },
    "numeric-literal": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.js.jsx"
            }
          },
          match: "\\b(?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$)",
          name: "constant.numeric.hex.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.js.jsx"
            }
          },
          match: "\\b(?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.binary.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.js.jsx"
            }
          },
          match: "\\b(?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.octal.js.jsx"
        },
        {
          captures: {
            "0": {
              name: "constant.numeric.decimal.js.jsx"
            },
            "1": {
              name: "meta.delimiter.decimal.period.js.jsx"
            },
            "10": {
              name: "meta.delimiter.decimal.period.js.jsx"
            },
            "11": {
              name: "storage.type.numeric.bigint.js.jsx"
            },
            "12": {
              name: "meta.delimiter.decimal.period.js.jsx"
            },
            "13": {
              name: "storage.type.numeric.bigint.js.jsx"
            },
            "14": {
              name: "storage.type.numeric.bigint.js.jsx"
            },
            "2": {
              name: "storage.type.numeric.bigint.js.jsx"
            },
            "3": {
              name: "meta.delimiter.decimal.period.js.jsx"
            },
            "4": {
              name: "storage.type.numeric.bigint.js.jsx"
            },
            "5": {
              name: "meta.delimiter.decimal.period.js.jsx"
            },
            "6": {
              name: "storage.type.numeric.bigint.js.jsx"
            },
            "7": {
              name: "storage.type.numeric.bigint.js.jsx"
            },
            "8": {
              name: "meta.delimiter.decimal.period.js.jsx"
            },
            "9": {
              name: "storage.type.numeric.bigint.js.jsx"
            }
          },
          match: "(?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)"
        }
      ]
    },
    "numericConstant-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))NaN(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.nan.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Infinity(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.infinity.js.jsx"
        }
      ]
    },
    "object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element"
            }
          ]
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element-const"
            }
          ]
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-propertyName": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
      end: "(:)",
      endCaptures: {
        "0": {
          name: "punctuation.destructuring.js.jsx"
        }
      },
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "variable.object.property.js.jsx"
        }
      ]
    },
    "object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.js.jsx"
        }
      },
      patterns: [
        {
          include: "#object-binding-element"
        }
      ]
    },
    "object-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.js.jsx"
        }
      },
      patterns: [
        {
          include: "#object-binding-element-const"
        }
      ]
    },
    "object-identifiers": {
      patterns: [
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*\\??\\.\\s*prototype\\b(?!\\$))",
          name: "support.class.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "3": {
              name: "variable.other.constant.object.property.js.jsx"
            },
            "4": {
              name: "variable.other.object.property.js.jsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(#?\\p{upper}[$_\\d[:upper:]]*)|(#?[$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          captures: {
            "1": {
              name: "variable.other.constant.object.js.jsx"
            },
            "2": {
              name: "variable.other.object.js.jsx"
            }
          },
          match: "(?:(\\p{upper}[$_\\d[:upper:]]*)|([$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        }
      ]
    },
    "object-literal": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      name: "meta.objectliteral.js.jsx",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "object-literal-method-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.js.jsx"
        },
        "2": {
          name: "storage.type.property.js.jsx"
        },
        "3": {
          name: "keyword.generator.asterisk.js.jsx"
        }
      },
      end: "(?=[,;}])|(?<=})",
      name: "meta.method.declaration.js.jsx",
      patterns: [
        {
          include: "#method-declaration-name"
        },
        {
          include: "#function-body"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js.jsx"
            },
            "2": {
              name: "storage.type.property.js.jsx"
            },
            "3": {
              name: "keyword.generator.asterisk.js.jsx"
            }
          },
          end: "(?=[(<])",
          patterns: [
            {
              include: "#method-declaration-name"
            }
          ]
        }
      ]
    },
    "object-member": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#object-literal-method-declaration"
        },
        {
          begin: "(?=\\[)",
          end: "(?=:)|((?<=])(?=\\s*[(<]))",
          name: "meta.object.member.js.jsx meta.object-literal.key.js.jsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#array-literal"
            }
          ]
        },
        {
          begin: "(?=[\"'`])",
          end: "(?=:)|((?<=[\"'`])(?=((\\s*[(,<}])|(\\s+(as|satisifies)\\s+))))",
          name: "meta.object.member.js.jsx meta.object-literal.key.js.jsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?=\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)))",
          end: "(?=:)|(?=\\s*([(,<}])|(\\s+as|satisifies\\s+))",
          name: "meta.object.member.js.jsx meta.object-literal.key.js.jsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#numeric-literal"
            }
          ]
        },
        {
          begin: "(?<=[]\"'`])(?=\\s*[(<])",
          end: "(?=[,;}])|(?<=})",
          name: "meta.method.declaration.js.jsx",
          patterns: [
            {
              include: "#function-body"
            }
          ]
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.js.jsx"
            },
            "1": {
              name: "constant.numeric.decimal.js.jsx"
            }
          },
          match: "(?![$_[:alpha:]])(\\d+)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.js.jsx"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.js.jsx"
            },
            "1": {
              name: "entity.name.function.js.jsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:(\\s*/\\*([^*]|(\\*[^/]))*\\*/)*\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))",
          name: "meta.object.member.js.jsx"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.js.jsx"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.js.jsx"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.js.jsx"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.js.jsx",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "variable.other.readwrite.js.jsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*([,}]|$))",
          name: "meta.object.member.js.jsx"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.js.jsx"
            },
            "2": {
              name: "keyword.control.satisfies.js.jsx"
            }
          },
          end: "(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|^|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisifies)\\s+))",
          name: "meta.object.member.js.jsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(?=[$_[:alpha:]][$_[:alnum:]]*\\s*=)",
          end: "(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.js.jsx",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: ":",
          beginCaptures: {
            "0": {
              name: "meta.object-literal.key.js.jsx punctuation.separator.key-value.js.jsx"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.js.jsx",
          patterns: [
            {
              begin: "(?<=:)\\s*(async)?(?=\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.js.jsx"
                }
              },
              end: "(?<=\\))",
              patterns: [
                {
                  include: "#type-parameters"
                },
                {
                  begin: "\\(",
                  beginCaptures: {
                    "0": {
                      name: "meta.brace.round.js.jsx"
                    }
                  },
                  end: "\\)",
                  endCaptures: {
                    "0": {
                      name: "meta.brace.round.js.jsx"
                    }
                  },
                  patterns: [
                    {
                      include: "#expression-inside-possibly-arrow-parens"
                    }
                  ]
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.js.jsx"
                },
                "2": {
                  name: "meta.brace.round.js.jsx"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.js.jsx"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(?=<\\s*$)",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.js.jsx"
                }
              },
              end: "(?<=>)",
              patterns: [
                {
                  include: "#type-parameters"
                }
              ]
            },
            {
              begin: "(?<=>)\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "meta.brace.round.js.jsx"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.js.jsx"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              include: "#possibly-arrow-return-type"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "parameter-array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.js.jsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.js.jsx"
        }
      },
      patterns: [
        {
          include: "#parameter-binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#parameter-array-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "parameter-name": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "keyword.operator.rest.js.jsx"
            },
            "3": {
              name: "entity.name.function.js.jsx variable.language.this.js.jsx"
            },
            "4": {
              name: "entity.name.function.js.jsx"
            },
            "5": {
              name: "keyword.operator.optional.js.jsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "keyword.operator.rest.js.jsx"
            },
            "3": {
              name: "variable.parameter.js.jsx variable.language.this.js.jsx"
            },
            "4": {
              name: "variable.parameter.js.jsx"
            },
            "5": {
              name: "keyword.operator.optional.js.jsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)"
        }
      ]
    },
    "parameter-object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.js.jsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.js.jsx"
        }
      },
      patterns: [
        {
          include: "#parameter-object-binding-element"
        }
      ]
    },
    "parameter-type-annotation": {
      patterns: [
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js.jsx"
            }
          },
          end: "(?=[),])|(?==[^>])",
          name: "meta.type.annotation.js.jsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "paren-expression": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.js.jsx"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.js.jsx"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "paren-expression-possibly-arrow": {
      patterns: [
        {
          begin: "(?<=[(,=])\\s*(async)?(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js.jsx"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          begin: "(?<=[(,=]|=>|^return|[^$._[:alnum:]]return)\\s*(async)?(?=\\s*((((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()|(<)|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)))\\s*$)",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.js.jsx"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          include: "#possibly-arrow-return-type"
        }
      ]
    },
    "paren-expression-possibly-arrow-with-typeparameters": {
      patterns: [
        {
          include: "#type-parameters"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.js.jsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js.jsx"
            }
          },
          patterns: [
            {
              include: "#expression-inside-possibly-arrow-parens"
            }
          ]
        }
      ]
    },
    "possibly-arrow-return-type": {
      begin: "(?<=\\)|^)\\s*(:)(?=\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*=>)",
      beginCaptures: {
        "1": {
          name: "meta.arrow.js.jsx meta.return.type.arrow.js.jsx keyword.operator.type.annotation.js.jsx"
        }
      },
      contentName: "meta.arrow.js.jsx meta.return.type.arrow.js.jsx",
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "property-accessor": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(accessor|get|set)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.type.property.js.jsx"
    },
    "punctuation-accessor": {
      captures: {
        "1": {
          name: "punctuation.accessor.js.jsx"
        },
        "2": {
          name: "punctuation.accessor.optional.js.jsx"
        }
      },
      match: "(\\.)|(\\?\\.(?!\\s*\\d))"
    },
    "punctuation-comma": {
      match: ",",
      name: "punctuation.separator.comma.js.jsx"
    },
    "punctuation-semicolon": {
      match: ";",
      name: "punctuation.terminator.statement.js.jsx"
    },
    "qstring-double": {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js.jsx"
        }
      },
      end: '(")|([^\\n\\\\])$',
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.js.jsx"
        },
        "2": {
          name: "invalid.illegal.newline.js.jsx"
        }
      },
      name: "string.quoted.double.js.jsx",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    "qstring-single": {
      begin: "'",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.js.jsx"
        }
      },
      end: "(')|([^\\n\\\\])$",
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.js.jsx"
        },
        "2": {
          name: "invalid.illegal.newline.js.jsx"
        }
      },
      name: "string.quoted.single.js.jsx",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    regex: {
      patterns: [
        {
          begin: "(?<!\\+\\+|--|})(?<=[!(+,:=?\\[]|^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case|=>|&&|\\|\\||\\*/)\\s*(/)(?![*/])(?=(?:[^()/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)+]|\\(([^)\\\\]|\\\\.)+\\))+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.string.begin.js.jsx"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.js.jsx"
            },
            "2": {
              name: "keyword.other.js.jsx"
            }
          },
          name: "string.regexp.js.jsx",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "((?<![]$)_[:alnum:]]|\\+\\+|--|}|\\*/)|((?<=^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case))\\s*)/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.string.begin.js.jsx"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.js.jsx"
            },
            "2": {
              name: "keyword.other.js.jsx"
            }
          },
          name: "string.regexp.js.jsx",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        }
      ]
    },
    "regex-character-class": {
      patterns: [
        {
          match: "\\\\[DSWdfnrstvw]|\\.",
          name: "constant.other.character-class.regexp"
        },
        {
          match: "\\\\([0-7]{3}|x\\h{2}|u\\h{4})",
          name: "constant.character.numeric.regexp"
        },
        {
          match: "\\\\c[A-Z]",
          name: "constant.character.control.regexp"
        },
        {
          match: "\\\\.",
          name: "constant.character.escape.backslash.regexp"
        }
      ]
    },
    regexp: {
      patterns: [
        {
          match: "\\\\[Bb]|[$^]",
          name: "keyword.control.anchor.regexp"
        },
        {
          captures: {
            "0": {
              name: "keyword.other.back-reference.regexp"
            },
            "1": {
              name: "variable.other.regexp"
            }
          },
          match: "\\\\(?:[1-9]\\d*|k<([$A-Z_a-z][$\\w]*)>)"
        },
        {
          match: "[*+?]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)}\\??",
          name: "keyword.operator.quantifier.regexp"
        },
        {
          match: "\\|",
          name: "keyword.operator.or.regexp"
        },
        {
          begin: "(\\()((\\?=)|(\\?!)|(\\?<=)|(\\?<!))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            },
            "2": {
              name: "punctuation.definition.group.assertion.regexp"
            },
            "3": {
              name: "meta.assertion.look-ahead.regexp"
            },
            "4": {
              name: "meta.assertion.negative-look-ahead.regexp"
            },
            "5": {
              name: "meta.assertion.look-behind.regexp"
            },
            "6": {
              name: "meta.assertion.negative-look-behind.regexp"
            }
          },
          end: "(\\))",
          endCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.assertion.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "\\((?:(\\?:)|\\?<([$A-Z_a-z][$\\w]*)>)?",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            },
            "1": {
              name: "punctuation.definition.group.no-capture.regexp"
            },
            "2": {
              name: "variable.other.regexp"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "(\\[)(\\^)?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            },
            "2": {
              name: "keyword.operator.negation.regexp"
            }
          },
          end: "(])",
          endCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            }
          },
          name: "constant.other.character-class.set.regexp",
          patterns: [
            {
              captures: {
                "1": {
                  name: "constant.character.numeric.regexp"
                },
                "2": {
                  name: "constant.character.control.regexp"
                },
                "3": {
                  name: "constant.character.escape.backslash.regexp"
                },
                "4": {
                  name: "constant.character.numeric.regexp"
                },
                "5": {
                  name: "constant.character.control.regexp"
                },
                "6": {
                  name: "constant.character.escape.backslash.regexp"
                }
              },
              match: "(?:.|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))-(?:[^]\\\\]|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))",
              name: "constant.other.character-class.range.regexp"
            },
            {
              include: "#regex-character-class"
            }
          ]
        },
        {
          include: "#regex-character-class"
        }
      ]
    },
    "return-type": {
      patterns: [
        {
          begin: "(?<=\\))\\s*(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js.jsx"
            }
          },
          end: "(?<![\\&:|])(?=$|^|[,;{}]|//)",
          name: "meta.return.type.js.jsx",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        },
        {
          begin: "(?<=\\))\\s*(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js.jsx"
            }
          },
          end: "(?<![\\&:|])((?=[,;{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.return.type.js.jsx",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        }
      ]
    },
    "return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<=[\\&:|])(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    shebang: {
      captures: {
        "1": {
          name: "punctuation.definition.comment.js.jsx"
        }
      },
      match: "\\A(#!).*(?=$)",
      name: "comment.line.shebang.js.jsx"
    },
    "single-line-comment-consuming-line-ending": {
      begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
      beginCaptures: {
        "1": {
          name: "punctuation.whitespace.comment.leading.js.jsx"
        },
        "2": {
          name: "comment.line.double-slash.js.jsx"
        },
        "3": {
          name: "punctuation.definition.comment.js.jsx"
        },
        "4": {
          name: "storage.type.internaldeclaration.js.jsx"
        },
        "5": {
          name: "punctuation.decorator.internaldeclaration.js.jsx"
        }
      },
      contentName: "comment.line.double-slash.js.jsx",
      end: "(?=^)"
    },
    statements: {
      patterns: [
        {
          include: "#declaration"
        },
        {
          include: "#control-statement"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#label"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    string: {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template"
        }
      ]
    },
    "string-character-escape": {
      match: "\\\\(x\\h{2}|u\\h{4}|u\\{\\h+}|[012][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)",
      name: "constant.character.escape.js.jsx"
    },
    "super-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))super\\b(?!\\$)",
      name: "variable.language.super.js.jsx"
    },
    "support-function-call-identifiers": {
      patterns: [
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#object-identifiers"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\(\\s*[\"'`])",
          name: "keyword.operator.expression.import.js.jsx"
        }
      ]
    },
    "support-objects": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(arguments)\\b(?!\\$)",
          name: "variable.language.arguments.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(Promise)\\b(?!\\$)",
          name: "support.class.promise.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.import.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.js.jsx"
            },
            "3": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "4": {
              name: "support.variable.property.importmeta.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(import)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(meta)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.new.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.js.jsx"
            },
            "3": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "4": {
              name: "support.variable.property.target.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(target)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "3": {
              name: "support.variable.property.js.jsx"
            },
            "4": {
              name: "support.constant.js.jsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(constructor|length|prototype|__proto__)\\b(?!\\$|\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\()|(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\b(?!\\$))"
        },
        {
          captures: {
            "1": {
              name: "support.type.object.module.js.jsx"
            },
            "2": {
              name: "support.type.object.module.js.jsx"
            },
            "3": {
              name: "punctuation.accessor.js.jsx"
            },
            "4": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "5": {
              name: "support.type.object.module.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(exports)|(module)(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))(exports|id|filename|loaded|parent|children))?)\\b(?!\\$)"
        }
      ]
    },
    "switch-statement": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bswitch\\s*\\()",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      name: "switch-statement.expr.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(switch)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.switch.js.jsx"
            },
            "2": {
              name: "meta.brace.round.js.jsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.js.jsx"
            }
          },
          name: "switch-expression.expr.js.jsx",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.js.jsx"
            }
          },
          end: "(?=})",
          name: "switch-block.expr.js.jsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default(?=:))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
              beginCaptures: {
                "1": {
                  name: "keyword.control.switch.js.jsx"
                }
              },
              end: "(?=:)",
              name: "case-clause.expr.js.jsx",
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(:)\\s*(\\{)",
              beginCaptures: {
                "1": {
                  name: "case-clause.expr.js.jsx punctuation.definition.section.case-statement.js.jsx"
                },
                "2": {
                  name: "meta.block.js.jsx punctuation.definition.block.js.jsx"
                }
              },
              contentName: "meta.block.js.jsx",
              end: "}",
              endCaptures: {
                "0": {
                  name: "meta.block.js.jsx punctuation.definition.block.js.jsx"
                }
              },
              patterns: [
                {
                  include: "#statements"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "case-clause.expr.js.jsx punctuation.definition.section.case-statement.js.jsx"
                }
              },
              match: "(:)"
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    template: {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.js.jsx"
            },
            "2": {
              name: "string.template.js.jsx punctuation.definition.string.template.begin.js.jsx"
            }
          },
          contentName: "string.template.js.jsx",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.js.jsx punctuation.definition.string.template.end.js.jsx"
            }
          },
          patterns: [
            {
              include: "#template-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-call": {
      patterns: [
        {
          begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*)(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
          end: "(?=`)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
              patterns: [
                {
                  include: "#support-function-call-identifiers"
                },
                {
                  match: "([$_[:alpha:]][$_[:alnum:]]*)",
                  name: "entity.name.function.tagged-template.js.jsx"
                }
              ]
            },
            {
              include: "#type-arguments"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?\\s*(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.js.jsx"
            }
          },
          end: "(?=`)",
          patterns: [
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "template-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.js.jsx"
        }
      },
      contentName: "meta.embedded.line.js.jsx",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.js.jsx"
        }
      },
      name: "meta.template.expression.js.jsx",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "template-type": {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.js.jsx"
            },
            "2": {
              name: "string.template.js.jsx punctuation.definition.string.template.begin.js.jsx"
            }
          },
          contentName: "string.template.js.jsx",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.js.jsx punctuation.definition.string.template.end.js.jsx"
            }
          },
          patterns: [
            {
              include: "#template-type-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-type-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.js.jsx"
        }
      },
      contentName: "meta.embedded.line.js.jsx",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.js.jsx"
        }
      },
      name: "meta.template.expression.js.jsx",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "ternary-expression": {
      begin: "(?!\\?\\.\\s*\\D)(\\?)(?!\\?)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.ternary.js.jsx"
        }
      },
      end: "\\s*(:)",
      endCaptures: {
        "1": {
          name: "keyword.operator.ternary.js.jsx"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "this-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))this\\b(?!\\$)",
      name: "variable.language.this.js.jsx"
    },
    type: {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#type-primitive"
        },
        {
          include: "#type-builtin-literals"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#type-tuple"
        },
        {
          include: "#type-object"
        },
        {
          include: "#type-operators"
        },
        {
          include: "#type-conditional"
        },
        {
          include: "#type-fn-type-parameters"
        },
        {
          include: "#type-paren-or-function-parameters"
        },
        {
          include: "#type-function-return-type"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*"
        },
        {
          include: "#type-name"
        }
      ]
    },
    "type-alias-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(type)\\b\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.js.jsx"
        },
        "2": {
          name: "storage.modifier.js.jsx"
        },
        "3": {
          name: "storage.type.type.js.jsx"
        },
        "4": {
          name: "entity.name.type.alias.js.jsx"
        }
      },
      end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.type.declaration.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          begin: "(=)\\s*(intrinsic)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js.jsx"
            },
            "2": {
              name: "keyword.control.intrinsic.js.jsx"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(=)\\s*",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js.jsx"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-annotation": {
      patterns: [
        {
          begin: "(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js.jsx"
            }
          },
          end: "(?<![\\&:|])(?!\\s*[\\&|]\\s+)((?=^|[]),;}]|//)|(?==[^>])|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.js.jsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.js.jsx"
            }
          },
          end: "(?<![\\&:|])((?=[]),;}]|//)|(?==[^>])|(?=^\\s*$)|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.js.jsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-arguments": {
      begin: "<",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.begin.js.jsx"
        }
      },
      end: ">",
      endCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.end.js.jsx"
        }
      },
      name: "meta.type.parameters.js.jsx",
      patterns: [
        {
          include: "#type-arguments-body"
        }
      ]
    },
    "type-arguments-body": {
      patterns: [
        {
          captures: {
            "0": {
              name: "keyword.operator.type.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(_)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "type-builtin-literals": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(this|true|false|undefined|null|object)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.builtin.js.jsx"
    },
    "type-conditional": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js.jsx"
            }
          },
          end: "(?<=:)",
          patterns: [
            {
              begin: "\\?",
              beginCaptures: {
                "0": {
                  name: "keyword.operator.ternary.js.jsx"
                }
              },
              end: ":",
              endCaptures: {
                "0": {
                  name: "keyword.operator.ternary.js.jsx"
                }
              },
              patterns: [
                {
                  include: "#type"
                }
              ]
            },
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-fn-type-parameters": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b(?=\\s*<)",
          beginCaptures: {
            "1": {
              name: "meta.type.constructor.js.jsx storage.modifier.js.jsx"
            },
            "2": {
              name: "meta.type.constructor.js.jsx keyword.control.new.js.jsx"
            }
          },
          end: "(?<=>)",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b\\s*(?=\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "keyword.control.new.js.jsx"
            }
          },
          end: "(?<=\\))",
          name: "meta.type.constructor.js.jsx",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        },
        {
          begin: "((?=\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>))))))",
          end: "(?<=\\))",
          name: "meta.type.function.js.jsx",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        }
      ]
    },
    "type-function-return-type": {
      patterns: [
        {
          begin: "(=>)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "storage.type.function.arrow.js.jsx"
            }
          },
          end: "(?<!=>)(?<![\\&|])(?=[]),:;=>?{}]|//|$)",
          name: "meta.type.function.return.js.jsx",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.js.jsx"
            }
          },
          end: "(?<!=>)(?<![\\&|])((?=[]),:;=>?{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.type.function.return.js.jsx",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        }
      ]
    },
    "type-function-return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<==>)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-infer": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.expression.infer.js.jsx"
            },
            "2": {
              name: "entity.name.type.js.jsx"
            },
            "3": {
              name: "keyword.operator.expression.extends.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(infer)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s+(extends)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))?",
          name: "meta.type.infer.js.jsx"
        }
      ]
    },
    "type-name": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(<)",
          captures: {
            "1": {
              name: "entity.name.type.module.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.js.jsx"
            },
            "3": {
              name: "punctuation.accessor.optional.js.jsx"
            },
            "4": {
              name: "meta.type.parameters.js.jsx punctuation.definition.typeparameters.begin.js.jsx"
            }
          },
          contentName: "meta.type.parameters.js.jsx",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.js.jsx punctuation.definition.typeparameters.end.js.jsx"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(<)",
          beginCaptures: {
            "1": {
              name: "entity.name.type.js.jsx"
            },
            "2": {
              name: "meta.type.parameters.js.jsx punctuation.definition.typeparameters.begin.js.jsx"
            }
          },
          contentName: "meta.type.parameters.js.jsx",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.js.jsx punctuation.definition.typeparameters.end.js.jsx"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.js.jsx"
            },
            "2": {
              name: "punctuation.accessor.js.jsx"
            },
            "3": {
              name: "punctuation.accessor.optional.js.jsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "entity.name.type.js.jsx"
        }
      ]
    },
    "type-object": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.js.jsx"
        }
      },
      name: "meta.object.type.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#indexer-mapped-type-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#type-annotation"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.js.jsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-operators": {
      patterns: [
        {
          include: "#typeof-operator"
        },
        {
          include: "#type-infer"
        },
        {
          begin: "([\\&|])(?=\\s*\\{)",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.js.jsx"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          begin: "[\\&|]",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.js.jsx"
            }
          },
          end: "(?=\\S)"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))keyof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.keyof.js.jsx"
        },
        {
          match: "([:?])",
          name: "keyword.operator.ternary.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\()",
          name: "keyword.operator.expression.import.js.jsx"
        }
      ]
    },
    "type-parameters": {
      begin: "(<)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.begin.js.jsx"
        }
      },
      end: "(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.end.js.jsx"
        }
      },
      name: "meta.type.parameters.js.jsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends|in|out|const)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.js.jsx"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "(=)(?!>)",
          name: "keyword.operator.assignment.js.jsx"
        }
      ]
    },
    "type-paren-or-function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.js.jsx"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.js.jsx"
        }
      },
      name: "meta.type.paren.cover.js.jsx",
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "keyword.operator.rest.js.jsx"
            },
            "3": {
              name: "entity.name.function.js.jsx variable.language.this.js.jsx"
            },
            "4": {
              name: "entity.name.function.js.jsx"
            },
            "5": {
              name: "keyword.operator.optional.js.jsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=\\s*(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.js.jsx"
            },
            "2": {
              name: "keyword.operator.rest.js.jsx"
            },
            "3": {
              name: "variable.parameter.js.jsx variable.language.this.js.jsx"
            },
            "4": {
              name: "variable.parameter.js.jsx"
            },
            "5": {
              name: "keyword.operator.optional.js.jsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=:)"
        },
        {
          include: "#type-annotation"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.js.jsx"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-predicate-operator": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.js.jsx"
            },
            "2": {
              name: "variable.parameter.js.jsx variable.language.this.js.jsx"
            },
            "3": {
              name: "variable.parameter.js.jsx"
            },
            "4": {
              name: "keyword.operator.expression.is.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(asserts)\\s+)?(?!asserts)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s(is)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.js.jsx"
            },
            "2": {
              name: "variable.parameter.js.jsx variable.language.this.js.jsx"
            },
            "3": {
              name: "variable.parameter.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(asserts)\\s+(?!is)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))asserts(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.type.asserts.js.jsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))is(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.is.js.jsx"
        }
      ]
    },
    "type-primitive": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.primitive.js.jsx"
    },
    "type-string": {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template-type"
        }
      ]
    },
    "type-tuple": {
      begin: "\\[",
      beginCaptures: {
        "0": {
          name: "meta.brace.square.js.jsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.js.jsx"
        }
      },
      name: "meta.type.tuple.js.jsx",
      patterns: [
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.rest.js.jsx"
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.js.jsx"
            },
            "2": {
              name: "keyword.operator.optional.js.jsx"
            },
            "3": {
              name: "punctuation.separator.label.js.jsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([$_[:alpha:]][$_[:alnum:]]*)\\s*(\\?)?\\s*(:)"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "typeof-operator": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))typeof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "0": {
          name: "keyword.operator.expression.typeof.js.jsx"
        }
      },
      end: "(?=[]\\&),:;=>?{|}]|(extends\\s+)|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      patterns: [
        {
          include: "#type-arguments"
        },
        {
          include: "#expression"
        }
      ]
    },
    "undefined-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))undefined(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.undefined.js.jsx"
    },
    "var-expr": {
      patterns: [
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!^let|[^$._[:alnum:]]let|^var|[^$._[:alnum:]]var)(?=\\s*$)))",
          name: "meta.var.expr.js.jsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.js.jsx"
                },
                "2": {
                  name: "storage.modifier.js.jsx"
                },
                "3": {
                  name: "storage.type.js.jsx"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-variable"
            },
            {
              include: "#var-single-variable"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.js.jsx"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-variable"
                },
                {
                  include: "#var-single-variable"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            },
            "3": {
              name: "storage.type.js.jsx"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]])const)(?=\\s*$)))",
          name: "meta.var.expr.js.jsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.js.jsx"
                },
                "2": {
                  name: "storage.modifier.js.jsx"
                },
                "3": {
                  name: "storage.type.js.jsx"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-const"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.js.jsx"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-const"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.js.jsx"
            },
            "2": {
              name: "storage.modifier.js.jsx"
            },
            "3": {
              name: "storage.type.js.jsx"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]]|^await\\s+|[^$._[:alnum:]]await\\s+)using)(?=\\s*$)))",
          name: "meta.var.expr.js.jsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.js.jsx"
                },
                "2": {
                  name: "storage.modifier.js.jsx"
                },
                "3": {
                  name: "storage.type.js.jsx"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*((?!\\S)|(?=//))",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.js.jsx"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "var-single-const": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js.jsx variable.other.constant.js.jsx entity.name.function.js.jsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js.jsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js.jsx variable.other.constant.js.jsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js.jsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js.jsx entity.name.function.js.jsx"
            },
            "2": {
              name: "keyword.operator.definiteassignment.js.jsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js.jsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js.jsx variable.other.constant.js.jsx"
            },
            "2": {
              name: "keyword.operator.definiteassignment.js.jsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js.jsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.js.jsx variable.other.readwrite.js.jsx"
            },
            "2": {
              name: "keyword.operator.definiteassignment.js.jsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.js.jsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable-type-annotation": {
      patterns: [
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    "variable-initializer": {
      patterns: [
        {
          begin: "(?<![!=])(=)(?!=)(?=\\s*\\S)(?!\\s*.*=>\\s*$)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js.jsx"
            }
          },
          end: "(?=$|^|[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![!=])(=)(?!=)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.js.jsx"
            }
          },
          end: "(?=[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))|(?=^\\s*$)|(?<![-\\&*+/|])(?<=\\S)(?<!=)(?=\\s*$)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        }
      ]
    }
  },
  scopeName: "source.js.jsx"
};
var tsx_default = {
  displayName: "TSX",
  name: "tsx",
  patterns: [
    {
      include: "#directives"
    },
    {
      include: "#statements"
    },
    {
      include: "#shebang"
    }
  ],
  repository: {
    "access-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.tsx"
    },
    "after-operator-block-as-object-literal": {
      begin: "(?<!\\+\\+|--)(?<=[!(+,:=>?\\[]|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^yield|[^$._[:alnum:]]yield|^throw|[^$._[:alnum:]]throw|^in|[^$._[:alnum:]]in|^of|[^$._[:alnum:]]of|^typeof|[^$._[:alnum:]]typeof|&&|\\|\\||\\*)\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.block.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      name: "meta.objectliteral.tsx",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.tsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.tsx"
        }
      },
      patterns: [
        {
          include: "#binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.tsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.tsx"
        }
      },
      patterns: [
        {
          include: "#binding-element-const"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "array-literal": {
      begin: "\\s*(\\[)",
      beginCaptures: {
        "1": {
          name: "meta.brace.square.tsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.tsx"
        }
      },
      name: "meta.array.literal.tsx",
      patterns: [
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "arrow-function": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.async.tsx"
            },
            "2": {
              name: "variable.parameter.tsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async)\\s+)?([$_[:alpha:]][$_[:alnum:]]*)\\s*(?==>)",
          name: "meta.arrow.tsx"
        },
        {
          begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(async))?((?<![]!)}])\\s*(?=((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.tsx"
            }
          },
          end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
          name: "meta.arrow.tsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            },
            {
              include: "#function-parameters"
            },
            {
              include: "#arrow-return-type"
            },
            {
              include: "#possibly-arrow-return-type"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.tsx"
            }
          },
          end: "((?<=[}\\S])(?<!=>)|((?!\\{)(?=\\S)))(?!/[*/])",
          name: "meta.arrow.tsx",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#decl-block"
            },
            {
              include: "#expression"
            }
          ]
        }
      ]
    },
    "arrow-return-type": {
      begin: "(?<=\\))\\s*(:)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.annotation.tsx"
        }
      },
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      name: "meta.return.type.arrow.tsx",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "arrow-return-type-body": {
      patterns: [
        {
          begin: "(?<=:)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "async-modifier": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(async)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.modifier.async.tsx"
    },
    "binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#array-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#array-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "boolean-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))true(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.true.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))false(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.boolean.false.tsx"
        }
      ]
    },
    brackets: {
      patterns: [
        {
          begin: "\\{",
          end: "}|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        },
        {
          begin: "\\[",
          end: "]|(?=\\*/)",
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    cast: {
      patterns: [
        {
          include: "#jsx"
        }
      ]
    },
    "class-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(class)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "storage.modifier.tsx"
        },
        "4": {
          name: "storage.type.class.tsx"
        }
      },
      end: "(?<=})",
      name: "meta.class.tsx",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-declaration-or-expression-patterns": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.class.tsx"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    "class-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(class)\\b(?=\\s+|[<{]|/[*/])",
      beginCaptures: {
        "1": {
          name: "storage.modifier.tsx"
        },
        "2": {
          name: "storage.type.class.tsx"
        }
      },
      end: "(?<=})",
      name: "meta.class.tsx",
      patterns: [
        {
          include: "#class-declaration-or-expression-patterns"
        }
      ]
    },
    "class-or-interface-body": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#decorator"
        },
        {
          begin: "(?<=:)\\s*",
          end: "(?=[-\\])+,:;}\\s]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#string"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#access-modifier"
        },
        {
          include: "#property-accessor"
        },
        {
          include: "#async-modifier"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        }
      ]
    },
    "class-or-interface-heritage": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(extends|implements)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.tsx"
        }
      },
      end: "(?=\\{)",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.tsx"
            },
            "2": {
              name: "punctuation.accessor.tsx"
            },
            "3": {
              name: "punctuation.accessor.optional.tsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))(?=\\s*[$_[:alpha:]][$_[:alnum:]]*(\\s*\\??\\.\\s*[$_[:alpha:]][$_[:alnum:]]*)*\\s*)"
        },
        {
          captures: {
            "1": {
              name: "entity.other.inherited-class.tsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    comment: {
      patterns: [
        {
          begin: "/\\*\\*(?!/)",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.comment.tsx"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.tsx"
            }
          },
          name: "comment.block.documentation.tsx",
          patterns: [
            {
              include: "#docblock"
            }
          ]
        },
        {
          begin: "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.comment.tsx"
            },
            "2": {
              name: "storage.type.internaldeclaration.tsx"
            },
            "3": {
              name: "punctuation.decorator.internaldeclaration.tsx"
            }
          },
          end: "\\*/",
          endCaptures: {
            "0": {
              name: "punctuation.definition.comment.tsx"
            }
          },
          name: "comment.block.tsx"
        },
        {
          begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
          beginCaptures: {
            "1": {
              name: "punctuation.whitespace.comment.leading.tsx"
            },
            "2": {
              name: "comment.line.double-slash.tsx"
            },
            "3": {
              name: "punctuation.definition.comment.tsx"
            },
            "4": {
              name: "storage.type.internaldeclaration.tsx"
            },
            "5": {
              name: "punctuation.decorator.internaldeclaration.tsx"
            }
          },
          contentName: "comment.line.double-slash.tsx",
          end: "(?=$)"
        }
      ]
    },
    "control-statement": {
      patterns: [
        {
          include: "#switch-statement"
        },
        {
          include: "#for-loop"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(catch|finally|throw|try)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.trycatch.tsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.loop.tsx"
            },
            "2": {
              name: "entity.name.label.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|goto)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(break|continue|do|goto|while)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.loop.tsx"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(return)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "0": {
              name: "keyword.control.flow.tsx"
            }
          },
          end: "(?=[;}]|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default|switch)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.switch.tsx"
        },
        {
          include: "#if-statement"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(else|if)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.conditional.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(with)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.with.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(package)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(debugger)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.other.debugger.tsx"
        }
      ]
    },
    "decl-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      name: "meta.block.tsx",
      patterns: [
        {
          include: "#statements"
        }
      ]
    },
    declaration: {
      patterns: [
        {
          include: "#decorator"
        },
        {
          include: "#var-expr"
        },
        {
          include: "#function-declaration"
        },
        {
          include: "#class-declaration"
        },
        {
          include: "#interface-declaration"
        },
        {
          include: "#enum-declaration"
        },
        {
          include: "#namespace-declaration"
        },
        {
          include: "#type-alias-declaration"
        },
        {
          include: "#import-equals-declaration"
        },
        {
          include: "#import-declaration"
        },
        {
          include: "#export-declaration"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(declare|export)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.tsx"
        }
      ]
    },
    decorator: {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))@",
      beginCaptures: {
        "0": {
          name: "punctuation.decorator.tsx"
        }
      },
      end: "(?=\\s)",
      name: "meta.decorator.tsx",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "destructuring-const": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.tsx",
          patterns: [
            {
              include: "#object-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.tsx",
          patterns: [
            {
              include: "#array-binding-pattern-const"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-parameter": {
      patterns: [
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\{)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.tsx"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.object.tsx"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.object.tsx"
            }
          },
          name: "meta.parameter.object-binding-pattern.tsx",
          patterns: [
            {
              include: "#parameter-object-binding-element"
            }
          ]
        },
        {
          begin: "(?<![:=])\\s*(?:(\\.\\.\\.)\\s*)?(\\[)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.rest.tsx"
            },
            "2": {
              name: "punctuation.definition.binding-pattern.array.tsx"
            }
          },
          end: "]",
          endCaptures: {
            "0": {
              name: "punctuation.definition.binding-pattern.array.tsx"
            }
          },
          name: "meta.paramter.array-binding-pattern.tsx",
          patterns: [
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "destructuring-parameter-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "variable.parameter.tsx"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable": {
      patterns: [
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\{)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.object-binding-pattern-variable.tsx",
          patterns: [
            {
              include: "#object-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        },
        {
          begin: "(?<![:=]|^of|[^$._[:alnum:]]of|^in|[^$._[:alnum:]]in)\\s*(?=\\[)",
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          name: "meta.array-binding-pattern-variable.tsx",
          patterns: [
            {
              include: "#array-binding-pattern"
            },
            {
              include: "#type-annotation"
            },
            {
              include: "#comment"
            }
          ]
        }
      ]
    },
    "destructuring-variable-rest": {
      captures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "meta.definition.variable.tsx variable.other.readwrite.tsx"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    "destructuring-variable-rest-const": {
      captures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "meta.definition.variable.tsx variable.other.constant.tsx"
        }
      },
      match: "(?:(\\.\\.\\.)\\s*)?([$_[:alpha:]][$_[:alnum:]]*)"
    },
    directives: {
      begin: "^(///)\\s*(?=<(reference|amd-dependency|amd-module)(\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\s*=\\s*(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))+\\s*/>\\s*$)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.comment.tsx"
        }
      },
      end: "(?=$)",
      name: "comment.line.triple-slash.directive.tsx",
      patterns: [
        {
          begin: "(<)(reference|amd-dependency|amd-module)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.directive.tsx"
            },
            "2": {
              name: "entity.name.tag.directive.tsx"
            }
          },
          end: "/>",
          endCaptures: {
            "0": {
              name: "punctuation.definition.tag.directive.tsx"
            }
          },
          name: "meta.tag.tsx",
          patterns: [
            {
              match: "path|types|no-default-lib|lib|name|resolution-mode",
              name: "entity.other.attribute-name.directive.tsx"
            },
            {
              match: "=",
              name: "keyword.operator.assignment.tsx"
            },
            {
              include: "#string"
            }
          ]
        }
      ]
    },
    docblock: {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.access-type.jsdoc"
            }
          },
          match: "((@)a(?:ccess|pi))\\s+(p(?:rivate|rotected|ublic))\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "punctuation.definition.bracket.angle.begin.jsdoc"
            },
            "5": {
              name: "constant.other.email.link.underline.jsdoc"
            },
            "6": {
              name: "punctuation.definition.bracket.angle.end.jsdoc"
            }
          },
          match: "((@)author)\\s+([^*/<>@\\s](?:[^*/<>@]|\\*[^/])*)(?:\\s*(<)([^>\\s]+)(>))?"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            },
            "4": {
              name: "keyword.operator.control.jsdoc"
            },
            "5": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)borrows)\\s+((?:[^*/@\\s]|\\*[^/])+)\\s+(as)\\s+((?:[^*/@\\s]|\\*[^/])+)"
        },
        {
          begin: "((@)example)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=@|\\*/)",
          name: "meta.example.jsdoc",
          patterns: [
            {
              match: "^\\s\\*\\s+"
            },
            {
              begin: "\\G(<)caption(>)",
              beginCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              },
              contentName: "constant.other.description.jsdoc",
              end: "(</)caption(>)|(?=\\*/)",
              endCaptures: {
                "0": {
                  name: "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  name: "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  name: "punctuation.definition.bracket.angle.end.jsdoc"
                }
              }
            },
            {
              captures: {
                "0": {
                  name: "source.embedded.tsx"
                }
              },
              match: "[^*@\\s](?:[^*]|\\*[^/])*"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "constant.language.symbol-type.jsdoc"
            }
          },
          match: "((@)kind)\\s+(class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\\b"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.link.underline.jsdoc"
            },
            "4": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)see)\\s+(?:((?=https?://)(?:[^*\\s]|\\*[^/])+)|((?!https?://|(?:\\[[^]\\[]*])?\\{@(?:link|linkcode|linkplain|tutorial)\\b)(?:[^*/@\\s]|\\*[^/])+))"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)template)\\s+([$A-Z_a-z][]$.\\[\\w]*(?:\\s*,\\s*[$A-Z_a-z][]$.\\[\\w]*)*)"
        },
        {
          begin: "((@)template)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:arg|argument|const|constant|member|namespace|param|var))\\s+([$A-Z_a-z][]$.\\[\\w]*)"
        },
        {
          begin: "((@)typedef)\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "(?:[^*/@\\s]|\\*[^/])+",
              name: "entity.name.type.instance.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            },
            {
              match: "([$A-Z_a-z][]$.\\[\\w]*)",
              name: "variable.other.jsdoc"
            },
            {
              captures: {
                "1": {
                  name: "punctuation.definition.optional-value.begin.bracket.square.jsdoc"
                },
                "2": {
                  name: "keyword.operator.assignment.jsdoc"
                },
                "3": {
                  name: "source.embedded.tsx"
                },
                "4": {
                  name: "punctuation.definition.optional-value.end.bracket.square.jsdoc"
                },
                "5": {
                  name: "invalid.illegal.syntax.jsdoc"
                }
              },
              match: `(\\[)\\s*[$\\w]+(?:(?:\\[])?\\.[$\\w]+)*(?:\\s*(=)\\s*((?>"(?:\\*(?!/)|\\\\(?!")|[^*\\\\])*?"|'(?:\\*(?!/)|\\\\(?!')|[^*\\\\])*?'|\\[(?:\\*(?!/)|[^*])*?]|(?:\\*(?!/)|\\s(?!\\s*])|\\[.*?(?:]|(?=\\*/))|[^]*\\[\\s])*)*))?\\s*(?:(])((?:[^*\\s]|\\*[^/\\s])+)?|(?=\\*/))`,
              name: "variable.other.jsdoc"
            }
          ]
        },
        {
          begin: "((@)(?:define|enum|exception|export|extends|lends|implements|modifies|namespace|private|protected|returns?|satisfies|suppress|this|throws|type|yields?))\\s+(?=\\{)",
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          end: "(?=\\s|\\*/|[^]$A-\\[_a-{}])",
          patterns: [
            {
              include: "#jsdoctype"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "entity.name.type.instance.jsdoc"
            }
          },
          match: "((@)(?:alias|augments|callback|constructs|emits|event|fires|exports?|extends|external|function|func|host|lends|listens|interface|memberof!?|method|module|mixes|mixin|name|requires|see|this|typedef|uses))\\s+((?:[^*@{}\\s]|\\*[^/])+)"
        },
        {
          begin: `((@)(?:default(?:value)?|license|version))\\s+((["']))`,
          beginCaptures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            },
            "4": {
              name: "punctuation.definition.string.begin.jsdoc"
            }
          },
          contentName: "variable.other.jsdoc",
          end: "(\\3)|(?=$|\\*/)",
          endCaptures: {
            "0": {
              name: "variable.other.jsdoc"
            },
            "1": {
              name: "punctuation.definition.string.end.jsdoc"
            }
          }
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              name: "variable.other.jsdoc"
            }
          },
          match: "((@)(?:default(?:value)?|license|tutorial|variation|version))\\s+([^*\\s]+)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "(@)(?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception|exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func|function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc|inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method|mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects|override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce|yields?)\\b",
          name: "storage.type.class.jsdoc"
        },
        {
          include: "#inline-tags"
        },
        {
          captures: {
            "1": {
              name: "storage.type.class.jsdoc"
            },
            "2": {
              name: "punctuation.definition.block.tag.jsdoc"
            }
          },
          match: "((@)[$_[:alpha:]][$_[:alnum:]]*)(?=\\s+)"
        }
      ]
    },
    "enum-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:\\b(const)\\s+)?\\b(enum)\\s+([$_[:alpha:]][$_[:alnum:]]*)",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "storage.modifier.tsx"
        },
        "4": {
          name: "storage.type.enum.tsx"
        },
        "5": {
          name: "entity.name.type.enum.tsx"
        }
      },
      end: "(?<=})",
      name: "meta.enum.declaration.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.tsx"
            }
          },
          end: "}",
          endCaptures: {
            "0": {
              name: "punctuation.definition.block.tsx"
            }
          },
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "([$_[:alpha:]][$_[:alnum:]]*)",
              beginCaptures: {
                "0": {
                  name: "variable.other.enummember.tsx"
                }
              },
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              begin: "(?=(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+])))",
              end: "(?=[,}]|$)",
              patterns: [
                {
                  include: "#string"
                },
                {
                  include: "#array-literal"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#variable-initializer"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "export-declaration": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.export.tsx"
            },
            "2": {
              name: "keyword.control.as.tsx"
            },
            "3": {
              name: "storage.type.namespace.tsx"
            },
            "4": {
              name: "entity.name.type.module.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)\\s+(as)\\s+(namespace)\\s+([$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?(?:\\s*(=)|\\s+(default)(?=\\s+))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.tsx"
            },
            "2": {
              name: "keyword.control.type.tsx"
            },
            "3": {
              name: "keyword.operator.assignment.tsx"
            },
            "4": {
              name: "keyword.control.default.tsx"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.default.tsx",
          patterns: [
            {
              include: "#interface-declaration"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(export)(?:\\s+(type))?\\b(?!(\\$)|(\\s*:))((?=\\s*[*{])|((?=\\s*[$_[:alpha:]][$_[:alnum:]]*([,\\s]))(?!\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.tsx"
            },
            "2": {
              name: "keyword.control.type.tsx"
            }
          },
          end: "(?=$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          name: "meta.export.tsx",
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        }
      ]
    },
    expression: {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-inside-possibly-arrow-parens": {
      patterns: [
        {
          include: "#expressionWithoutIdentifiers"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "keyword.operator.rest.tsx"
            },
            "3": {
              name: "entity.name.function.tsx variable.language.this.tsx"
            },
            "4": {
              name: "entity.name.function.tsx"
            },
            "5": {
              name: "keyword.operator.optional.tsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "keyword.operator.rest.tsx"
            },
            "3": {
              name: "variable.parameter.tsx variable.language.this.tsx"
            },
            "4": {
              name: "variable.parameter.tsx"
            },
            "5": {
              name: "keyword.operator.optional.tsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*[,:]|$)"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.tsx"
        },
        {
          include: "#identifiers"
        },
        {
          include: "#expressionPunctuations"
        }
      ]
    },
    "expression-operators": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(await)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.control.flow.tsx"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?=\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*\\*)",
          beginCaptures: {
            "1": {
              name: "keyword.control.flow.tsx"
            }
          },
          end: "\\*",
          endCaptures: {
            "0": {
              name: "keyword.generator.asterisk.tsx"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.control.flow.tsx"
            },
            "2": {
              name: "keyword.generator.asterisk.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(yield)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s*(\\*))?"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))delete(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.delete.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))in(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.in.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))of(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()",
          name: "keyword.operator.expression.of.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.instanceof.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.new.tsx"
        },
        {
          include: "#typeof-operator"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))void(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.void.tsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*($|[]),:;}]))"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.tsx"
            },
            "2": {
              name: "keyword.control.satisfies.tsx"
            }
          },
          end: "(?=^|[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisfies)\\s+)|(\\s+<))",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.spread.tsx"
        },
        {
          match: "(?:\\*|(?<!\\()/|[-%+])=",
          name: "keyword.operator.assignment.compound.tsx"
        },
        {
          match: "(?:[\\&^]|<<|>>>??|\\|)=",
          name: "keyword.operator.assignment.compound.bitwise.tsx"
        },
        {
          match: "<<|>>>?",
          name: "keyword.operator.bitwise.shift.tsx"
        },
        {
          match: "[!=]==?",
          name: "keyword.operator.comparison.tsx"
        },
        {
          match: "<=|>=|<>|[<>]",
          name: "keyword.operator.relational.tsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.logical.tsx"
            },
            "2": {
              name: "keyword.operator.assignment.compound.tsx"
            },
            "3": {
              name: "keyword.operator.arithmetic.tsx"
            }
          },
          match: "(?<=[$_[:alnum:]])(!)\\s*(?:(/=)|(/)(?![*/]))"
        },
        {
          match: "!|&&|\\|\\||\\?\\?",
          name: "keyword.operator.logical.tsx"
        },
        {
          match: "[\\&^|~]",
          name: "keyword.operator.bitwise.tsx"
        },
        {
          match: "=",
          name: "keyword.operator.assignment.tsx"
        },
        {
          match: "--",
          name: "keyword.operator.decrement.tsx"
        },
        {
          match: "\\+\\+",
          name: "keyword.operator.increment.tsx"
        },
        {
          match: "[-%*+/]",
          name: "keyword.operator.arithmetic.tsx"
        },
        {
          begin: "(?<=[]$)_[:alnum:]])\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)+(?:(/=)|(/)(?![*/])))",
          end: "(/=)|(/)(?!\\*([^*]|(\\*[^/]))*\\*/)",
          endCaptures: {
            "1": {
              name: "keyword.operator.assignment.compound.tsx"
            },
            "2": {
              name: "keyword.operator.arithmetic.tsx"
            }
          },
          patterns: [
            {
              include: "#comment"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.assignment.compound.tsx"
            },
            "2": {
              name: "keyword.operator.arithmetic.tsx"
            }
          },
          match: "(?<=[]$)_[:alnum:]])\\s*(?:(/=)|(/)(?![*/]))"
        }
      ]
    },
    expressionPunctuations: {
      patterns: [
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-accessor"
        }
      ]
    },
    expressionWithoutIdentifiers: {
      patterns: [
        {
          include: "#jsx"
        },
        {
          include: "#string"
        },
        {
          include: "#regex"
        },
        {
          include: "#comment"
        },
        {
          include: "#function-expression"
        },
        {
          include: "#class-expression"
        },
        {
          include: "#arrow-function"
        },
        {
          include: "#paren-expression-possibly-arrow"
        },
        {
          include: "#cast"
        },
        {
          include: "#ternary-expression"
        },
        {
          include: "#new-expr"
        },
        {
          include: "#instanceof-expr"
        },
        {
          include: "#object-literal"
        },
        {
          include: "#expression-operators"
        },
        {
          include: "#function-call"
        },
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#paren-expression"
        }
      ]
    },
    "field-declaration": {
      begin: "(?<!\\()(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s+)?(?=\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=}]|$))",
      beginCaptures: {
        "1": {
          name: "storage.modifier.tsx"
        }
      },
      end: "(?=[,;}]|$|^((?!\\s*(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|(#?[$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(?:(?:(\\?)|(!))\\s*)?([,:;=]|$))))|(?<=})",
      name: "meta.field.declaration.tsx",
      patterns: [
        {
          include: "#variable-initializer"
        },
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "meta.definition.property.tsx entity.name.function.tsx"
            },
            "2": {
              name: "keyword.operator.optional.tsx"
            },
            "3": {
              name: "keyword.operator.definiteassignment.tsx"
            }
          },
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)(?:(\\?)|(!))?(?=\\s*\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          match: "#?[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.property.tsx variable.object.property.tsx"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.tsx"
        },
        {
          match: "!",
          name: "keyword.operator.definiteassignment.tsx"
        }
      ]
    },
    "for-loop": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))for(?=((\\s+|(\\s*/\\*([^*]|(\\*[^/]))*\\*/\\s*))await)?\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)?(\\())",
      beginCaptures: {
        "0": {
          name: "keyword.control.loop.tsx"
        }
      },
      end: "(?<=\\))",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "await",
          name: "keyword.control.loop.tsx"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.tsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.tsx"
            }
          },
          patterns: [
            {
              include: "#var-expr"
            },
            {
              include: "#expression"
            },
            {
              include: "#punctuation-semicolon"
            }
          ]
        }
      ]
    },
    "function-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#function-parameters"
        },
        {
          include: "#return-type"
        },
        {
          include: "#type-function-return-type"
        },
        {
          include: "#decl-block"
        },
        {
          match: "\\*",
          name: "keyword.generator.asterisk.tsx"
        }
      ]
    },
    "function-call": {
      patterns: [
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          end: "(?<=\\))(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=\\s*(?:(\\?\\.\\s*)|(!))?((<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?\\())",
              name: "meta.function-call.tsx",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          begin: "(?=(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          end: "(?<=>)(?!(((([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))|(?<=\\)))(<\\s*[(\\[{]\\s*)$)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*)(\\s*\\??\\.\\s*(#?[$_[:alpha:]][$_[:alnum:]]*))*)|(\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*[(\\[{]\\s*)$)",
              name: "meta.function-call.tsx",
              patterns: [
                {
                  include: "#function-call-target"
                }
              ]
            },
            {
              include: "#comment"
            },
            {
              include: "#function-call-optionals"
            },
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "function-call-optionals": {
      patterns: [
        {
          match: "\\?\\.",
          name: "meta.function-call.tsx punctuation.accessor.optional.tsx"
        },
        {
          match: "!",
          name: "meta.function-call.tsx keyword.operator.definiteassignment.tsx"
        }
      ]
    },
    "function-call-target": {
      patterns: [
        {
          include: "#support-function-call-identifiers"
        },
        {
          match: "(#?[$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.function.tsx"
        }
      ]
    },
    "function-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "storage.modifier.async.tsx"
        },
        "4": {
          name: "storage.type.function.tsx"
        },
        "5": {
          name: "keyword.generator.asterisk.tsx"
        },
        "6": {
          name: "meta.definition.function.tsx entity.name.function.tsx"
        }
      },
      end: "(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|(?<=})",
      name: "meta.function.tsx",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-expression": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(async)\\s+)?(function)\\b(?:\\s*(\\*))?(?:(?:\\s+|(?<=\\*))([$_[:alpha:]][$_[:alnum:]]*))?\\s*",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.tsx"
        },
        "2": {
          name: "storage.type.function.tsx"
        },
        "3": {
          name: "keyword.generator.asterisk.tsx"
        },
        "4": {
          name: "meta.definition.function.tsx entity.name.function.tsx"
        }
      },
      end: "(?=;)|(?<=})",
      name: "meta.function.expression.tsx",
      patterns: [
        {
          include: "#function-name"
        },
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#function-body"
        }
      ]
    },
    "function-name": {
      match: "[$_[:alpha:]][$_[:alnum:]]*",
      name: "meta.definition.function.tsx entity.name.function.tsx"
    },
    "function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.parameters.begin.tsx"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "punctuation.definition.parameters.end.tsx"
        }
      },
      name: "meta.parameters.tsx",
      patterns: [
        {
          include: "#function-parameters-body"
        }
      ]
    },
    "function-parameters-body": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#decorator"
        },
        {
          include: "#destructuring-parameter"
        },
        {
          include: "#parameter-name"
        },
        {
          include: "#parameter-type-annotation"
        },
        {
          include: "#variable-initializer"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.tsx"
        }
      ]
    },
    identifiers: {
      patterns: [
        {
          include: "#object-identifiers"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.tsx"
            },
            "2": {
              name: "punctuation.accessor.optional.tsx"
            },
            "3": {
              name: "entity.name.function.tsx"
            }
          },
          match: "(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*)?([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.tsx"
            },
            "2": {
              name: "punctuation.accessor.optional.tsx"
            },
            "3": {
              name: "variable.other.constant.property.tsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.tsx"
            },
            "2": {
              name: "punctuation.accessor.optional.tsx"
            },
            "3": {
              name: "variable.other.property.tsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          match: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])",
          name: "variable.other.constant.tsx"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "variable.other.readwrite.tsx"
        }
      ]
    },
    "if-statement": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bif\\s*(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))\\s*(?!\\{))",
          end: "(?=;|$|})",
          patterns: [
            {
              include: "#comment"
            },
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(if)\\s*(\\()",
              beginCaptures: {
                "1": {
                  name: "keyword.control.conditional.tsx"
                },
                "2": {
                  name: "meta.brace.round.tsx"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.tsx"
                }
              },
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(?<=\\))\\s*/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
              beginCaptures: {
                "0": {
                  name: "punctuation.definition.string.begin.tsx"
                }
              },
              end: "(/)([dgimsuvy]*)",
              endCaptures: {
                "1": {
                  name: "punctuation.definition.string.end.tsx"
                },
                "2": {
                  name: "keyword.other.tsx"
                }
              },
              name: "string.regexp.tsx",
              patterns: [
                {
                  include: "#regexp"
                }
              ]
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    "import-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type)(?!\\s+from))?(?!\\s*[(:])(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "keyword.control.import.tsx"
        },
        "4": {
          name: "keyword.control.type.tsx"
        }
      },
      end: "(?<!(?:^|[^$._[:alnum:]])import)(?=;|$|^)",
      name: "meta.import.tsx",
      patterns: [
        {
          include: "#single-line-comment-consuming-line-ending"
        },
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          begin: `(?<=(?:^|[^$._[:alnum:]])import)(?!\\s*["'])`,
          end: "\\bfrom\\b",
          endCaptures: {
            "0": {
              name: "keyword.control.from.tsx"
            }
          },
          patterns: [
            {
              include: "#import-export-declaration"
            }
          ]
        },
        {
          include: "#import-export-declaration"
        }
      ]
    },
    "import-equals-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(require)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            },
            "3": {
              name: "keyword.control.import.tsx"
            },
            "4": {
              name: "keyword.control.type.tsx"
            },
            "5": {
              name: "variable.other.readwrite.alias.tsx"
            },
            "6": {
              name: "keyword.operator.assignment.tsx"
            },
            "7": {
              name: "keyword.control.require.tsx"
            },
            "8": {
              name: "meta.brace.round.tsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.tsx"
            }
          },
          name: "meta.import-equals.external.tsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(import)(?:\\s+(type))?\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*(=)\\s*(?!require\\b)",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            },
            "3": {
              name: "keyword.control.import.tsx"
            },
            "4": {
              name: "keyword.control.type.tsx"
            },
            "5": {
              name: "variable.other.readwrite.alias.tsx"
            },
            "6": {
              name: "keyword.operator.assignment.tsx"
            }
          },
          end: "(?=;|$|^)",
          name: "meta.import-equals.internal.tsx",
          patterns: [
            {
              include: "#single-line-comment-consuming-line-ending"
            },
            {
              include: "#comment"
            },
            {
              captures: {
                "1": {
                  name: "entity.name.type.module.tsx"
                },
                "2": {
                  name: "punctuation.accessor.tsx"
                },
                "3": {
                  name: "punctuation.accessor.optional.tsx"
                }
              },
              match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
            },
            {
              match: "([$_[:alpha:]][$_[:alnum:]]*)",
              name: "variable.other.readwrite.tsx"
            }
          ]
        }
      ]
    },
    "import-export-assert-clause": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(with)|(assert))\\s*(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.control.with.tsx"
        },
        "2": {
          name: "keyword.control.assert.tsx"
        },
        "3": {
          name: "punctuation.definition.block.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object-literal.key.tsx"
        },
        {
          match: ":",
          name: "punctuation.separator.key-value.tsx"
        }
      ]
    },
    "import-export-block": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      name: "meta.block.tsx",
      patterns: [
        {
          include: "#import-export-clause"
        }
      ]
    },
    "import-export-clause": {
      patterns: [
        {
          include: "#comment"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.tsx"
            },
            "12": {
              name: "keyword.control.as.tsx"
            },
            "13": {
              name: "keyword.control.default.tsx"
            },
            "14": {
              name: "variable.other.readwrite.alias.tsx"
            },
            "15": {
              name: "string.quoted.alias.tsx"
            },
            "2": {
              name: "keyword.control.default.tsx"
            },
            "3": {
              name: "constant.language.import-export-all.tsx"
            },
            "4": {
              name: "variable.other.readwrite.tsx"
            },
            "5": {
              name: "string.quoted.alias.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(type)\\s+)?(?:\\b(default)|(\\*)|\\b([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))\\s+(as)\\s+(?:(default(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "\\*",
          name: "constant.language.import-export-all.tsx"
        },
        {
          match: "\\b(default)\\b",
          name: "keyword.control.default.tsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.type.tsx"
            },
            "2": {
              name: "variable.other.readwrite.alias.tsx"
            },
            "3": {
              name: "string.quoted.alias.tsx"
            }
          },
          match: "(?:\\b(type)\\s+)?(?:([$_[:alpha:]][$_[:alnum:]]*)|(('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)))"
        }
      ]
    },
    "import-export-declaration": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#import-export-block"
        },
        {
          match: "\\bfrom\\b",
          name: "keyword.control.from.tsx"
        },
        {
          include: "#import-export-assert-clause"
        },
        {
          include: "#import-export-clause"
        }
      ]
    },
    "indexer-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=:)",
      beginCaptures: {
        "1": {
          name: "storage.modifier.tsx"
        },
        "2": {
          name: "meta.brace.square.tsx"
        },
        "3": {
          name: "variable.parameter.tsx"
        }
      },
      end: "(])\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.tsx"
        },
        "2": {
          name: "keyword.operator.optional.tsx"
        }
      },
      name: "meta.indexer.declaration.tsx",
      patterns: [
        {
          include: "#type-annotation"
        }
      ]
    },
    "indexer-mapped-type-declaration": {
      begin: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([-+])?(readonly)\\s*)?\\s*(\\[)\\s*([$_[:alpha:]][$_[:alnum:]]*)\\s+(in)\\s+",
      beginCaptures: {
        "1": {
          name: "keyword.operator.type.modifier.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "meta.brace.square.tsx"
        },
        "4": {
          name: "entity.name.type.tsx"
        },
        "5": {
          name: "keyword.operator.expression.in.tsx"
        }
      },
      end: "(])([-+])?\\s*(\\?\\s*)?|$",
      endCaptures: {
        "1": {
          name: "meta.brace.square.tsx"
        },
        "2": {
          name: "keyword.operator.type.modifier.tsx"
        },
        "3": {
          name: "keyword.operator.optional.tsx"
        }
      },
      name: "meta.indexer.mappedtype.declaration.tsx",
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.control.as.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+"
        },
        {
          include: "#type"
        }
      ]
    },
    "inline-tags": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.bracket.square.begin.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.square.end.jsdoc"
            }
          },
          match: "(\\[)[^]]+(])(?=\\{@(?:link|linkcode|linkplain|tutorial))",
          name: "constant.other.description.jsdoc"
        },
        {
          begin: "(\\{)((@)(?:link(?:code|plain)?|tutorial))\\s*",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            },
            "2": {
              name: "storage.type.class.jsdoc"
            },
            "3": {
              name: "punctuation.definition.inline.tag.jsdoc"
            }
          },
          end: "}|(?=\\*/)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          name: "entity.name.type.instance.jsdoc",
          patterns: [
            {
              captures: {
                "1": {
                  name: "variable.other.link.underline.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?=https?://)(?:[^*|}\\s]|\\*/)+)(\\|)?"
            },
            {
              captures: {
                "1": {
                  name: "variable.other.description.jsdoc"
                },
                "2": {
                  name: "punctuation.separator.pipe.jsdoc"
                }
              },
              match: "\\G((?:[^*@{|}\\s]|\\*[^/])+)(\\|)?"
            }
          ]
        }
      ]
    },
    "instanceof-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(instanceof)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.expression.instanceof.tsx"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|([!=]==?)|(([\\&^|~]\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s+instanceof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "interface-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(?:(abstract)\\s+)?\\b(interface)\\b(?=\\s+|/[*/])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "storage.modifier.tsx"
        },
        "4": {
          name: "storage.type.interface.tsx"
        }
      },
      end: "(?<=})",
      name: "meta.interface.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#class-or-interface-heritage"
        },
        {
          captures: {
            "0": {
              name: "entity.name.type.interface.tsx"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#class-or-interface-body"
        }
      ]
    },
    jsdoctype: {
      patterns: [
        {
          begin: "\\G(\\{)",
          beginCaptures: {
            "0": {
              name: "entity.name.type.instance.jsdoc"
            },
            "1": {
              name: "punctuation.definition.bracket.curly.begin.jsdoc"
            }
          },
          contentName: "entity.name.type.instance.jsdoc",
          end: "((}))\\s*|(?=\\*/)",
          endCaptures: {
            "1": {
              name: "entity.name.type.instance.jsdoc"
            },
            "2": {
              name: "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          patterns: [
            {
              include: "#brackets"
            }
          ]
        }
      ]
    },
    jsx: {
      patterns: [
        {
          include: "#jsx-tag-without-attributes-in-expression"
        },
        {
          include: "#jsx-tag-in-expression"
        }
      ]
    },
    "jsx-children": {
      patterns: [
        {
          include: "#jsx-tag-without-attributes"
        },
        {
          include: "#jsx-tag"
        },
        {
          include: "#jsx-evaluated-code"
        },
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-entities": {
      patterns: [
        {
          captures: {
            "1": {
              name: "punctuation.definition.entity.tsx"
            },
            "3": {
              name: "punctuation.definition.entity.tsx"
            }
          },
          match: "(&)([0-9A-Za-z]+|#[0-9]+|#x\\h+)(;)",
          name: "constant.character.entity.tsx"
        }
      ]
    },
    "jsx-evaluated-code": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.section.embedded.begin.tsx"
        }
      },
      contentName: "meta.embedded.expression.tsx",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.section.embedded.end.tsx"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "jsx-string-double-quoted": {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.tsx"
        }
      },
      end: '"',
      endCaptures: {
        "0": {
          name: "punctuation.definition.string.end.tsx"
        }
      },
      name: "string.quoted.double.tsx",
      patterns: [
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-string-single-quoted": {
      begin: "'",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.tsx"
        }
      },
      end: "'",
      endCaptures: {
        "0": {
          name: "punctuation.definition.string.end.tsx"
        }
      },
      name: "string.quoted.single.tsx",
      patterns: [
        {
          include: "#jsx-entities"
        }
      ]
    },
    "jsx-tag": {
      begin: "(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      end: "(/>)|(</)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.tag.end.tsx"
        },
        "2": {
          name: "punctuation.definition.tag.begin.tsx"
        },
        "3": {
          name: "entity.name.tag.namespace.tsx"
        },
        "4": {
          name: "punctuation.separator.namespace.tsx"
        },
        "5": {
          name: "entity.name.tag.tsx"
        },
        "6": {
          name: "support.class.component.tsx"
        },
        "7": {
          name: "punctuation.definition.tag.end.tsx"
        }
      },
      name: "meta.tag.tsx",
      patterns: [
        {
          begin: "(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.begin.tsx"
            },
            "2": {
              name: "entity.name.tag.namespace.tsx"
            },
            "3": {
              name: "punctuation.separator.namespace.tsx"
            },
            "4": {
              name: "entity.name.tag.tsx"
            },
            "5": {
              name: "support.class.component.tsx"
            }
          },
          end: "(?=/?>)",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-arguments"
            },
            {
              include: "#jsx-tag-attributes"
            }
          ]
        },
        {
          begin: "(>)",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.tag.end.tsx"
            }
          },
          contentName: "meta.jsx.children.tsx",
          end: "(?=</)",
          patterns: [
            {
              include: "#jsx-children"
            }
          ]
        }
      ]
    },
    "jsx-tag-attribute-assignment": {
      match: `=(?=\\s*(?:["'{]|/\\*|//|\\n))`,
      name: "keyword.operator.assignment.tsx"
    },
    "jsx-tag-attribute-name": {
      captures: {
        "1": {
          name: "entity.other.attribute-name.namespace.tsx"
        },
        "2": {
          name: "punctuation.separator.namespace.tsx"
        },
        "3": {
          name: "entity.other.attribute-name.tsx"
        }
      },
      match: "\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(:))?([$_[:alpha:]][-$_[:alnum:]]*)(?=[=\\s]|/?>|/\\*|//)"
    },
    "jsx-tag-attributes": {
      begin: "\\s+",
      end: "(?=/?>)",
      name: "meta.tag.attributes.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#jsx-tag-attribute-name"
        },
        {
          include: "#jsx-tag-attribute-assignment"
        },
        {
          include: "#jsx-string-double-quoted"
        },
        {
          include: "#jsx-string-single-quoted"
        },
        {
          include: "#jsx-evaluated-code"
        },
        {
          include: "#jsx-tag-attributes-illegal"
        }
      ]
    },
    "jsx-tag-attributes-illegal": {
      match: "\\S+",
      name: "invalid.illegal.attribute.tsx"
    },
    "jsx-tag-in-expression": {
      begin: "(?<!\\+\\+|--)(?<=[(*,:=>?\\[{]|&&|\\|\\||\\?|\\*/|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^default|[^$._[:alnum:]]default|^yield|[^$._[:alnum:]]yield|^)\\s*(?!<\\s*[$_[:alpha:]][$_[:alnum:]]*((\\s+extends\\s+[^=>])|,))(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      end: "(?!(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))(?=((<\\s*)|(\\s+))(?!\\?)|/?>))",
      patterns: [
        {
          include: "#jsx-tag"
        }
      ]
    },
    "jsx-tag-without-attributes": {
      begin: "(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.tsx"
        },
        "2": {
          name: "entity.name.tag.namespace.tsx"
        },
        "3": {
          name: "punctuation.separator.namespace.tsx"
        },
        "4": {
          name: "entity.name.tag.tsx"
        },
        "5": {
          name: "support.class.component.tsx"
        },
        "6": {
          name: "punctuation.definition.tag.end.tsx"
        }
      },
      contentName: "meta.jsx.children.tsx",
      end: "(</)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.tsx"
        },
        "2": {
          name: "entity.name.tag.namespace.tsx"
        },
        "3": {
          name: "punctuation.separator.namespace.tsx"
        },
        "4": {
          name: "entity.name.tag.tsx"
        },
        "5": {
          name: "support.class.component.tsx"
        },
        "6": {
          name: "punctuation.definition.tag.end.tsx"
        }
      },
      name: "meta.tag.without-attributes.tsx",
      patterns: [
        {
          include: "#jsx-children"
        }
      ]
    },
    "jsx-tag-without-attributes-in-expression": {
      begin: "(?<!\\+\\+|--)(?<=[(*,:=>?\\[{]|&&|\\|\\||\\?|\\*/|^await|[^$._[:alnum:]]await|^return|[^$._[:alnum:]]return|^default|[^$._[:alnum:]]default|^yield|[^$._[:alnum:]]yield|^)\\s*(?=(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>))",
      end: "(?!(<)\\s*(?:([$_[:alpha:]][-$._[:alnum:]]*)(?<![-.])(:))?((?:[a-z][0-9a-z]*|([$_[:alpha:]][-$._[:alnum:]]*))(?<![-.]))?\\s*(>))",
      patterns: [
        {
          include: "#jsx-tag-without-attributes"
        }
      ]
    },
    label: {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)(?=\\s*\\{)",
          beginCaptures: {
            "1": {
              name: "entity.name.label.tsx"
            },
            "2": {
              name: "punctuation.separator.label.tsx"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#decl-block"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.tsx"
            },
            "2": {
              name: "punctuation.separator.label.tsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(:)"
        }
      ]
    },
    literal: {
      patterns: [
        {
          include: "#numeric-literal"
        },
        {
          include: "#boolean-literal"
        },
        {
          include: "#null-literal"
        },
        {
          include: "#undefined-literal"
        },
        {
          include: "#numericConstant-literal"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#this-literal"
        },
        {
          include: "#super-literal"
        }
      ]
    },
    "method-declaration": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?\\s*\\b(constructor)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            },
            "3": {
              name: "storage.modifier.tsx"
            },
            "4": {
              name: "storage.modifier.async.tsx"
            },
            "5": {
              name: "storage.type.tsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.tsx",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\s*\\b(new)\\b(?!:)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))|(?:(\\*)\\s*)?)(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            },
            "3": {
              name: "storage.modifier.tsx"
            },
            "4": {
              name: "storage.modifier.async.tsx"
            },
            "5": {
              name: "keyword.operator.new.tsx"
            },
            "6": {
              name: "keyword.generator.asterisk.tsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.tsx",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(override)\\s+)?(?:\\b(p(?:ublic|rivate|rotected))\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            },
            "3": {
              name: "storage.modifier.tsx"
            },
            "4": {
              name: "storage.modifier.async.tsx"
            },
            "5": {
              name: "storage.type.property.tsx"
            },
            "6": {
              name: "keyword.generator.asterisk.tsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          name: "meta.method.declaration.tsx",
          patterns: [
            {
              include: "#method-declaration-name"
            },
            {
              include: "#function-body"
            }
          ]
        }
      ]
    },
    "method-declaration-name": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??)\\s*[(<])",
      end: "(?=[(<])",
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "meta.definition.method.tsx entity.name.function.tsx"
        },
        {
          match: "\\?",
          name: "keyword.operator.optional.tsx"
        }
      ]
    },
    "namespace-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(namespace|module)\\s+(?=[\"$'_`[:alpha:]])",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "storage.type.namespace.tsx"
        }
      },
      end: "(?<=})|(?=;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.namespace.declaration.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "entity.name.type.module.tsx"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "new-expr": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "1": {
          name: "keyword.operator.new.tsx"
        }
      },
      end: "(?<=\\))|(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))function((\\s+[$_[:alpha:]][$_[:alnum:]]*)|(\\s*\\())))",
      name: "new.expr.tsx",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "null-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))null(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.null.tsx"
    },
    "numeric-literal": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.tsx"
            }
          },
          match: "\\b(?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$)",
          name: "constant.numeric.hex.tsx"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.tsx"
            }
          },
          match: "\\b(?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.binary.tsx"
        },
        {
          captures: {
            "1": {
              name: "storage.type.numeric.bigint.tsx"
            }
          },
          match: "\\b(?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$)",
          name: "constant.numeric.octal.tsx"
        },
        {
          captures: {
            "0": {
              name: "constant.numeric.decimal.tsx"
            },
            "1": {
              name: "meta.delimiter.decimal.period.tsx"
            },
            "10": {
              name: "meta.delimiter.decimal.period.tsx"
            },
            "11": {
              name: "storage.type.numeric.bigint.tsx"
            },
            "12": {
              name: "meta.delimiter.decimal.period.tsx"
            },
            "13": {
              name: "storage.type.numeric.bigint.tsx"
            },
            "14": {
              name: "storage.type.numeric.bigint.tsx"
            },
            "2": {
              name: "storage.type.numeric.bigint.tsx"
            },
            "3": {
              name: "meta.delimiter.decimal.period.tsx"
            },
            "4": {
              name: "storage.type.numeric.bigint.tsx"
            },
            "5": {
              name: "meta.delimiter.decimal.period.tsx"
            },
            "6": {
              name: "storage.type.numeric.bigint.tsx"
            },
            "7": {
              name: "storage.type.numeric.bigint.tsx"
            },
            "8": {
              name: "meta.delimiter.decimal.period.tsx"
            },
            "9": {
              name: "storage.type.numeric.bigint.tsx"
            }
          },
          match: "(?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)"
        }
      ]
    },
    "numericConstant-literal": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))NaN(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.nan.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Infinity(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "constant.language.infinity.tsx"
        }
      ]
    },
    "object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element"
            }
          ]
        },
        {
          include: "#object-binding-pattern"
        },
        {
          include: "#destructuring-variable-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-const": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#binding-element-const"
            }
          ]
        },
        {
          include: "#object-binding-pattern-const"
        },
        {
          include: "#destructuring-variable-rest-const"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "object-binding-element-propertyName": {
      begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
      end: "(:)",
      endCaptures: {
        "0": {
          name: "punctuation.destructuring.tsx"
        }
      },
      patterns: [
        {
          include: "#string"
        },
        {
          include: "#array-literal"
        },
        {
          include: "#numeric-literal"
        },
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)",
          name: "variable.object.property.tsx"
        }
      ]
    },
    "object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.tsx"
        }
      },
      patterns: [
        {
          include: "#object-binding-element"
        }
      ]
    },
    "object-binding-pattern-const": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.tsx"
        }
      },
      patterns: [
        {
          include: "#object-binding-element-const"
        }
      ]
    },
    "object-identifiers": {
      patterns: [
        {
          match: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*\\??\\.\\s*prototype\\b(?!\\$))",
          name: "support.class.tsx"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.tsx"
            },
            "2": {
              name: "punctuation.accessor.optional.tsx"
            },
            "3": {
              name: "variable.other.constant.object.property.tsx"
            },
            "4": {
              name: "variable.other.object.property.tsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(#?\\p{upper}[$_\\d[:upper:]]*)|(#?[$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        },
        {
          captures: {
            "1": {
              name: "variable.other.constant.object.tsx"
            },
            "2": {
              name: "variable.other.object.tsx"
            }
          },
          match: "(?:(\\p{upper}[$_\\d[:upper:]]*)|([$_[:alpha:]][$_[:alnum:]]*))(?=\\s*\\??\\.\\s*#?[$_[:alpha:]][$_[:alnum:]]*)"
        }
      ]
    },
    "object-literal": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      name: "meta.objectliteral.tsx",
      patterns: [
        {
          include: "#object-member"
        }
      ]
    },
    "object-literal-method-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
      beginCaptures: {
        "1": {
          name: "storage.modifier.async.tsx"
        },
        "2": {
          name: "storage.type.property.tsx"
        },
        "3": {
          name: "keyword.generator.asterisk.tsx"
        }
      },
      end: "(?=[,;}])|(?<=})",
      name: "meta.method.declaration.tsx",
      patterns: [
        {
          include: "#method-declaration-name"
        },
        {
          include: "#function-body"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(async)\\s+)?(?:\\b([gs]et)\\s+)?(?:(\\*)\\s*)?(?=\\s*((\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(\\??))\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.tsx"
            },
            "2": {
              name: "storage.type.property.tsx"
            },
            "3": {
              name: "keyword.generator.asterisk.tsx"
            }
          },
          end: "(?=[(<])",
          patterns: [
            {
              include: "#method-declaration-name"
            }
          ]
        }
      ]
    },
    "object-member": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#object-literal-method-declaration"
        },
        {
          begin: "(?=\\[)",
          end: "(?=:)|((?<=])(?=\\s*[(<]))",
          name: "meta.object.member.tsx meta.object-literal.key.tsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#array-literal"
            }
          ]
        },
        {
          begin: "(?=[\"'`])",
          end: "(?=:)|((?<=[\"'`])(?=((\\s*[(,<}])|(\\s+(as|satisifies)\\s+))))",
          name: "meta.object.member.tsx meta.object-literal.key.tsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#string"
            }
          ]
        },
        {
          begin: "(?=\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$)))",
          end: "(?=:)|(?=\\s*([(,<}])|(\\s+as|satisifies\\s+))",
          name: "meta.object.member.tsx meta.object-literal.key.tsx",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#numeric-literal"
            }
          ]
        },
        {
          begin: "(?<=[]\"'`])(?=\\s*[(<])",
          end: "(?=[,;}])|(?<=})",
          name: "meta.method.declaration.tsx",
          patterns: [
            {
              include: "#function-body"
            }
          ]
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.tsx"
            },
            "1": {
              name: "constant.numeric.decimal.tsx"
            }
          },
          match: "(?![$_[:alpha:]])(\\d+)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.tsx"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.tsx"
            },
            "1": {
              name: "entity.name.function.tsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:(\\s*/\\*([^*]|(\\*[^/]))*\\*/)*\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))",
          name: "meta.object.member.tsx"
        },
        {
          captures: {
            "0": {
              name: "meta.object-literal.key.tsx"
            }
          },
          match: "[$_[:alpha:]][$_[:alnum:]]*\\s*(?=(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*:)",
          name: "meta.object.member.tsx"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.tsx"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.tsx",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "variable.other.readwrite.tsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.tsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.as.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as)\\s+(const)(?=\\s*([,}]|$))",
          name: "meta.object.member.tsx"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(as)|(satisfies))\\s+",
          beginCaptures: {
            "1": {
              name: "keyword.control.as.tsx"
            },
            "2": {
              name: "keyword.control.satisfies.tsx"
            }
          },
          end: "(?=[-\\])+,:;>?}]|\\|\\||&&|!==|$|^|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(as|satisifies)\\s+))",
          name: "meta.object.member.tsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(?=[$_[:alpha:]][$_[:alnum:]]*\\s*=)",
          end: "(?=[,}]|$|//|/\\*)",
          name: "meta.object.member.tsx",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: ":",
          beginCaptures: {
            "0": {
              name: "meta.object-literal.key.tsx punctuation.separator.key-value.tsx"
            }
          },
          end: "(?=[,}])",
          name: "meta.object.member.tsx",
          patterns: [
            {
              begin: "(?<=:)\\s*(async)?(?=\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.tsx"
                }
              },
              end: "(?<=\\))",
              patterns: [
                {
                  include: "#type-parameters"
                },
                {
                  begin: "\\(",
                  beginCaptures: {
                    "0": {
                      name: "meta.brace.round.tsx"
                    }
                  },
                  end: "\\)",
                  endCaptures: {
                    "0": {
                      name: "meta.brace.round.tsx"
                    }
                  },
                  patterns: [
                    {
                      include: "#expression-inside-possibly-arrow-parens"
                    }
                  ]
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.tsx"
                },
                "2": {
                  name: "meta.brace.round.tsx"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.tsx"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              begin: "(?<=:)\\s*(async)?\\s*(?=<\\s*$)",
              beginCaptures: {
                "1": {
                  name: "storage.modifier.async.tsx"
                }
              },
              end: "(?<=>)",
              patterns: [
                {
                  include: "#type-parameters"
                }
              ]
            },
            {
              begin: "(?<=>)\\s*(\\()(?=\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
              beginCaptures: {
                "1": {
                  name: "meta.brace.round.tsx"
                }
              },
              end: "\\)",
              endCaptures: {
                "0": {
                  name: "meta.brace.round.tsx"
                }
              },
              patterns: [
                {
                  include: "#expression-inside-possibly-arrow-parens"
                }
              ]
            },
            {
              include: "#possibly-arrow-return-type"
            },
            {
              include: "#expression"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#decl-block"
        }
      ]
    },
    "parameter-array-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\[)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.array.tsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.array.tsx"
        }
      },
      patterns: [
        {
          include: "#parameter-binding-element"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#regex"
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#parameter-array-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        }
      ]
    },
    "parameter-name": {
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|protected|private|readonly)\\s+(?=(override|public|protected|private|readonly)\\s+)"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "keyword.operator.rest.tsx"
            },
            "3": {
              name: "entity.name.function.tsx variable.language.this.tsx"
            },
            "4": {
              name: "entity.name.function.tsx"
            },
            "5": {
              name: "keyword.operator.optional.tsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "keyword.operator.rest.tsx"
            },
            "3": {
              name: "variable.parameter.tsx variable.language.this.tsx"
            },
            "4": {
              name: "variable.parameter.tsx"
            },
            "5": {
              name: "keyword.operator.optional.tsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(override|public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)"
        }
      ]
    },
    "parameter-object-binding-element": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?=(\\b((?<!\\$)0[Xx]\\h[_\\h]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Bb][01][01_]*(n)?\\b(?!\\$))|\\b((?<!\\$)0[Oo]?[0-7][0-7_]*(n)?\\b(?!\\$))|((?<!\\$)(?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\B(\\.)[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*[Ee][-+]?[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(\\.)(n)?\\B|\\B(\\.)[0-9][0-9_]*(n)?\\b|\\b[0-9][0-9_]*(n)?\\b(?!\\.))(?!\\$))|([$_[:alpha:]][$_[:alnum:]]*)|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`)|(\\[([^]\\[]|\\[[^]\\[]*])+]))\\s*(:))",
          end: "(?=[,}])",
          patterns: [
            {
              include: "#object-binding-element-propertyName"
            },
            {
              include: "#parameter-binding-element"
            },
            {
              include: "#paren-expression"
            }
          ]
        },
        {
          include: "#parameter-object-binding-pattern"
        },
        {
          include: "#destructuring-parameter-rest"
        },
        {
          include: "#variable-initializer"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "parameter-object-binding-pattern": {
      begin: "(?:(\\.\\.\\.)\\s*)?(\\{)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.rest.tsx"
        },
        "2": {
          name: "punctuation.definition.binding-pattern.object.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.binding-pattern.object.tsx"
        }
      },
      patterns: [
        {
          include: "#parameter-object-binding-element"
        }
      ]
    },
    "parameter-type-annotation": {
      patterns: [
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.tsx"
            }
          },
          end: "(?=[),])|(?==[^>])",
          name: "meta.type.annotation.tsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "paren-expression": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.tsx"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.tsx"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "paren-expression-possibly-arrow": {
      patterns: [
        {
          begin: "(?<=[(,=])\\s*(async)?(?=\\s*((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.tsx"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          begin: "(?<=[(,=]|=>|^return|[^$._[:alnum:]]return)\\s*(async)?(?=\\s*((((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*))?\\()|(<)|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)))\\s*$)",
          beginCaptures: {
            "1": {
              name: "storage.modifier.async.tsx"
            }
          },
          end: "(?<=\\))",
          patterns: [
            {
              include: "#paren-expression-possibly-arrow-with-typeparameters"
            }
          ]
        },
        {
          include: "#possibly-arrow-return-type"
        }
      ]
    },
    "paren-expression-possibly-arrow-with-typeparameters": {
      patterns: [
        {
          include: "#type-parameters"
        },
        {
          begin: "\\(",
          beginCaptures: {
            "0": {
              name: "meta.brace.round.tsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.tsx"
            }
          },
          patterns: [
            {
              include: "#expression-inside-possibly-arrow-parens"
            }
          ]
        }
      ]
    },
    "possibly-arrow-return-type": {
      begin: "(?<=\\)|^)\\s*(:)(?=\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*=>)",
      beginCaptures: {
        "1": {
          name: "meta.arrow.tsx meta.return.type.arrow.tsx keyword.operator.type.annotation.tsx"
        }
      },
      contentName: "meta.arrow.tsx meta.return.type.arrow.tsx",
      end: "(?==>|\\{|^(\\s*(export|function|class|interface|let|var|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|const|import|enum|namespace|module|type|abstract|declare)\\s+))",
      patterns: [
        {
          include: "#arrow-return-type-body"
        }
      ]
    },
    "property-accessor": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(accessor|get|set)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "storage.type.property.tsx"
    },
    "punctuation-accessor": {
      captures: {
        "1": {
          name: "punctuation.accessor.tsx"
        },
        "2": {
          name: "punctuation.accessor.optional.tsx"
        }
      },
      match: "(\\.)|(\\?\\.(?!\\s*\\d))"
    },
    "punctuation-comma": {
      match: ",",
      name: "punctuation.separator.comma.tsx"
    },
    "punctuation-semicolon": {
      match: ";",
      name: "punctuation.terminator.statement.tsx"
    },
    "qstring-double": {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.tsx"
        }
      },
      end: '(")|([^\\n\\\\])$',
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.tsx"
        },
        "2": {
          name: "invalid.illegal.newline.tsx"
        }
      },
      name: "string.quoted.double.tsx",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    "qstring-single": {
      begin: "'",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.tsx"
        }
      },
      end: "(')|([^\\n\\\\])$",
      endCaptures: {
        "1": {
          name: "punctuation.definition.string.end.tsx"
        },
        "2": {
          name: "invalid.illegal.newline.tsx"
        }
      },
      name: "string.quoted.single.tsx",
      patterns: [
        {
          include: "#string-character-escape"
        }
      ]
    },
    regex: {
      patterns: [
        {
          begin: "(?<!\\+\\+|--|})(?<=[!(+,:=?\\[]|^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case|=>|&&|\\|\\||\\*/)\\s*(/)(?![*/])(?=(?:[^()/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)+]|\\(([^)\\\\]|\\\\.)+\\))+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.string.begin.tsx"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.tsx"
            },
            "2": {
              name: "keyword.other.tsx"
            }
          },
          name: "string.regexp.tsx",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "((?<![]$)_[:alnum:]]|\\+\\+|--|}|\\*/)|((?<=^return|[^$._[:alnum:]]return|^case|[^$._[:alnum:]]case))\\s*)/(?![*/])(?=(?:[^/\\[\\\\]|\\\\.|\\[([^]\\\\]|\\\\.)*])+/([dgimsuvy]+|(?![*/])|(?=/\\*))(?!\\s*[$0-9A-Z_a-z]))",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.string.begin.tsx"
            }
          },
          end: "(/)([dgimsuvy]*)",
          endCaptures: {
            "1": {
              name: "punctuation.definition.string.end.tsx"
            },
            "2": {
              name: "keyword.other.tsx"
            }
          },
          name: "string.regexp.tsx",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        }
      ]
    },
    "regex-character-class": {
      patterns: [
        {
          match: "\\\\[DSWdfnrstvw]|\\.",
          name: "constant.other.character-class.regexp"
        },
        {
          match: "\\\\([0-7]{3}|x\\h{2}|u\\h{4})",
          name: "constant.character.numeric.regexp"
        },
        {
          match: "\\\\c[A-Z]",
          name: "constant.character.control.regexp"
        },
        {
          match: "\\\\.",
          name: "constant.character.escape.backslash.regexp"
        }
      ]
    },
    regexp: {
      patterns: [
        {
          match: "\\\\[Bb]|[$^]",
          name: "keyword.control.anchor.regexp"
        },
        {
          captures: {
            "0": {
              name: "keyword.other.back-reference.regexp"
            },
            "1": {
              name: "variable.other.regexp"
            }
          },
          match: "\\\\(?:[1-9]\\d*|k<([$A-Z_a-z][$\\w]*)>)"
        },
        {
          match: "[*+?]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)}\\??",
          name: "keyword.operator.quantifier.regexp"
        },
        {
          match: "\\|",
          name: "keyword.operator.or.regexp"
        },
        {
          begin: "(\\()((\\?=)|(\\?!)|(\\?<=)|(\\?<!))",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            },
            "2": {
              name: "punctuation.definition.group.assertion.regexp"
            },
            "3": {
              name: "meta.assertion.look-ahead.regexp"
            },
            "4": {
              name: "meta.assertion.negative-look-ahead.regexp"
            },
            "5": {
              name: "meta.assertion.look-behind.regexp"
            },
            "6": {
              name: "meta.assertion.negative-look-behind.regexp"
            }
          },
          end: "(\\))",
          endCaptures: {
            "1": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.assertion.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "\\((?:(\\?:)|\\?<([$A-Z_a-z][$\\w]*)>)?",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            },
            "1": {
              name: "punctuation.definition.group.no-capture.regexp"
            },
            "2": {
              name: "variable.other.regexp"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "punctuation.definition.group.regexp"
            }
          },
          name: "meta.group.regexp",
          patterns: [
            {
              include: "#regexp"
            }
          ]
        },
        {
          begin: "(\\[)(\\^)?",
          beginCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            },
            "2": {
              name: "keyword.operator.negation.regexp"
            }
          },
          end: "(])",
          endCaptures: {
            "1": {
              name: "punctuation.definition.character-class.regexp"
            }
          },
          name: "constant.other.character-class.set.regexp",
          patterns: [
            {
              captures: {
                "1": {
                  name: "constant.character.numeric.regexp"
                },
                "2": {
                  name: "constant.character.control.regexp"
                },
                "3": {
                  name: "constant.character.escape.backslash.regexp"
                },
                "4": {
                  name: "constant.character.numeric.regexp"
                },
                "5": {
                  name: "constant.character.control.regexp"
                },
                "6": {
                  name: "constant.character.escape.backslash.regexp"
                }
              },
              match: "(?:.|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))-(?:[^]\\\\]|(\\\\(?:[0-7]{3}|x\\h{2}|u\\h{4}))|(\\\\c[A-Z])|(\\\\.))",
              name: "constant.other.character-class.range.regexp"
            },
            {
              include: "#regex-character-class"
            }
          ]
        },
        {
          include: "#regex-character-class"
        }
      ]
    },
    "return-type": {
      patterns: [
        {
          begin: "(?<=\\))\\s*(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.tsx"
            }
          },
          end: "(?<![\\&:|])(?=$|^|[,;{}]|//)",
          name: "meta.return.type.tsx",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        },
        {
          begin: "(?<=\\))\\s*(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.tsx"
            }
          },
          end: "(?<![\\&:|])((?=[,;{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.return.type.tsx",
          patterns: [
            {
              include: "#return-type-core"
            }
          ]
        }
      ]
    },
    "return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<=[\\&:|])(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    shebang: {
      captures: {
        "1": {
          name: "punctuation.definition.comment.tsx"
        }
      },
      match: "\\A(#!).*(?=$)",
      name: "comment.line.shebang.tsx"
    },
    "single-line-comment-consuming-line-ending": {
      begin: "(^[\\t ]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
      beginCaptures: {
        "1": {
          name: "punctuation.whitespace.comment.leading.tsx"
        },
        "2": {
          name: "comment.line.double-slash.tsx"
        },
        "3": {
          name: "punctuation.definition.comment.tsx"
        },
        "4": {
          name: "storage.type.internaldeclaration.tsx"
        },
        "5": {
          name: "punctuation.decorator.internaldeclaration.tsx"
        }
      },
      contentName: "comment.line.double-slash.tsx",
      end: "(?=^)"
    },
    statements: {
      patterns: [
        {
          include: "#declaration"
        },
        {
          include: "#control-statement"
        },
        {
          include: "#after-operator-block-as-object-literal"
        },
        {
          include: "#decl-block"
        },
        {
          include: "#label"
        },
        {
          include: "#expression"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    string: {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template"
        }
      ]
    },
    "string-character-escape": {
      match: "\\\\(x\\h{2}|u\\h{4}|u\\{\\h+}|[012][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)",
      name: "constant.character.escape.tsx"
    },
    "super-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))super\\b(?!\\$)",
      name: "variable.language.super.tsx"
    },
    "support-function-call-identifiers": {
      patterns: [
        {
          include: "#literal"
        },
        {
          include: "#support-objects"
        },
        {
          include: "#object-identifiers"
        },
        {
          include: "#punctuation-accessor"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\(\\s*[\"'`])",
          name: "keyword.operator.expression.import.tsx"
        }
      ]
    },
    "support-objects": {
      patterns: [
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(arguments)\\b(?!\\$)",
          name: "variable.language.arguments.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(Promise)\\b(?!\\$)",
          name: "support.class.promise.tsx"
        },
        {
          captures: {
            "1": {
              name: "keyword.control.import.tsx"
            },
            "2": {
              name: "punctuation.accessor.tsx"
            },
            "3": {
              name: "punctuation.accessor.optional.tsx"
            },
            "4": {
              name: "support.variable.property.importmeta.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(import)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(meta)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.new.tsx"
            },
            "2": {
              name: "punctuation.accessor.tsx"
            },
            "3": {
              name: "punctuation.accessor.optional.tsx"
            },
            "4": {
              name: "support.variable.property.target.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(new)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(target)\\b(?!\\$)"
        },
        {
          captures: {
            "1": {
              name: "punctuation.accessor.tsx"
            },
            "2": {
              name: "punctuation.accessor.optional.tsx"
            },
            "3": {
              name: "support.variable.property.tsx"
            },
            "4": {
              name: "support.constant.tsx"
            }
          },
          match: "(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(?:(constructor|length|prototype|__proto__)\\b(?!\\$|\\s*(<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\()|(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\b(?!\\$))"
        },
        {
          captures: {
            "1": {
              name: "support.type.object.module.tsx"
            },
            "2": {
              name: "support.type.object.module.tsx"
            },
            "3": {
              name: "punctuation.accessor.tsx"
            },
            "4": {
              name: "punctuation.accessor.optional.tsx"
            },
            "5": {
              name: "support.type.object.module.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(exports)|(module)(?:(?:(\\.)|(\\?\\.(?!\\s*\\d)))(exports|id|filename|loaded|parent|children))?)\\b(?!\\$)"
        }
      ]
    },
    "switch-statement": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?=\\bswitch\\s*\\()",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      name: "switch-statement.expr.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(switch)\\s*(\\()",
          beginCaptures: {
            "1": {
              name: "keyword.control.switch.tsx"
            },
            "2": {
              name: "meta.brace.round.tsx"
            }
          },
          end: "\\)",
          endCaptures: {
            "0": {
              name: "meta.brace.round.tsx"
            }
          },
          name: "switch-expression.expr.tsx",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "\\{",
          beginCaptures: {
            "0": {
              name: "punctuation.definition.block.tsx"
            }
          },
          end: "(?=})",
          name: "switch-block.expr.tsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(case|default(?=:))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
              beginCaptures: {
                "1": {
                  name: "keyword.control.switch.tsx"
                }
              },
              end: "(?=:)",
              name: "case-clause.expr.tsx",
              patterns: [
                {
                  include: "#expression"
                }
              ]
            },
            {
              begin: "(:)\\s*(\\{)",
              beginCaptures: {
                "1": {
                  name: "case-clause.expr.tsx punctuation.definition.section.case-statement.tsx"
                },
                "2": {
                  name: "meta.block.tsx punctuation.definition.block.tsx"
                }
              },
              contentName: "meta.block.tsx",
              end: "}",
              endCaptures: {
                "0": {
                  name: "meta.block.tsx punctuation.definition.block.tsx"
                }
              },
              patterns: [
                {
                  include: "#statements"
                }
              ]
            },
            {
              captures: {
                "0": {
                  name: "case-clause.expr.tsx punctuation.definition.section.case-statement.tsx"
                }
              },
              match: "(:)"
            },
            {
              include: "#statements"
            }
          ]
        }
      ]
    },
    template: {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.tsx"
            },
            "2": {
              name: "string.template.tsx punctuation.definition.string.template.begin.tsx"
            }
          },
          contentName: "string.template.tsx",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.tsx punctuation.definition.string.template.end.tsx"
            }
          },
          patterns: [
            {
              include: "#template-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-call": {
      patterns: [
        {
          begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*)(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
          end: "(?=`)",
          patterns: [
            {
              begin: "(?=(([$_[:alpha:]][$_[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([$_[:alpha:]][$_[:alnum:]]*))",
              end: "(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)?`)",
              patterns: [
                {
                  include: "#support-function-call-identifiers"
                },
                {
                  match: "([$_[:alpha:]][$_[:alnum:]]*)",
                  name: "entity.name.function.tagged-template.tsx"
                }
              ]
            },
            {
              include: "#type-arguments"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?\\s*(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>|<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([$_[:alpha:]][$_[:alnum:]]*|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))(?=\\s*([,.<>\\[]|=>|&(?!&)|\\|(?!\\|)))))([^(<>]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(?<==)>)*(?<!=)>))*(?<!=)>)*(?<!=)>\\s*)`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.tsx"
            }
          },
          end: "(?=`)",
          patterns: [
            {
              include: "#type-arguments"
            }
          ]
        }
      ]
    },
    "template-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.tsx"
        }
      },
      contentName: "meta.embedded.line.tsx",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.tsx"
        }
      },
      name: "meta.template.expression.tsx",
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "template-type": {
      patterns: [
        {
          include: "#template-call"
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)?(`)",
          beginCaptures: {
            "1": {
              name: "entity.name.function.tagged-template.tsx"
            },
            "2": {
              name: "string.template.tsx punctuation.definition.string.template.begin.tsx"
            }
          },
          contentName: "string.template.tsx",
          end: "`",
          endCaptures: {
            "0": {
              name: "string.template.tsx punctuation.definition.string.template.end.tsx"
            }
          },
          patterns: [
            {
              include: "#template-type-substitution-element"
            },
            {
              include: "#string-character-escape"
            }
          ]
        }
      ]
    },
    "template-type-substitution-element": {
      begin: "\\$\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.begin.tsx"
        }
      },
      contentName: "meta.embedded.line.tsx",
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.template-expression.end.tsx"
        }
      },
      name: "meta.template.expression.tsx",
      patterns: [
        {
          include: "#type"
        }
      ]
    },
    "ternary-expression": {
      begin: "(?!\\?\\.\\s*\\D)(\\?)(?!\\?)",
      beginCaptures: {
        "1": {
          name: "keyword.operator.ternary.tsx"
        }
      },
      end: "\\s*(:)",
      endCaptures: {
        "1": {
          name: "keyword.operator.ternary.tsx"
        }
      },
      patterns: [
        {
          include: "#expression"
        }
      ]
    },
    "this-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))this\\b(?!\\$)",
      name: "variable.language.this.tsx"
    },
    type: {
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-string"
        },
        {
          include: "#numeric-literal"
        },
        {
          include: "#type-primitive"
        },
        {
          include: "#type-builtin-literals"
        },
        {
          include: "#type-parameters"
        },
        {
          include: "#type-tuple"
        },
        {
          include: "#type-object"
        },
        {
          include: "#type-operators"
        },
        {
          include: "#type-conditional"
        },
        {
          include: "#type-fn-type-parameters"
        },
        {
          include: "#type-paren-or-function-parameters"
        },
        {
          include: "#type-function-return-type"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(readonly)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*"
        },
        {
          include: "#type-name"
        }
      ]
    },
    "type-alias-declaration": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(type)\\b\\s+([$_[:alpha:]][$_[:alnum:]]*)\\s*",
      beginCaptures: {
        "1": {
          name: "keyword.control.export.tsx"
        },
        "2": {
          name: "storage.modifier.tsx"
        },
        "3": {
          name: "storage.type.type.tsx"
        },
        "4": {
          name: "entity.name.type.alias.tsx"
        }
      },
      end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      name: "meta.type.declaration.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#type-parameters"
        },
        {
          begin: "(=)\\s*(intrinsic)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.tsx"
            },
            "2": {
              name: "keyword.control.intrinsic.tsx"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(=)\\s*",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.tsx"
            }
          },
          end: "(?=[;}]|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-annotation": {
      patterns: [
        {
          begin: "(:)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.tsx"
            }
          },
          end: "(?<![\\&:|])(?!\\s*[\\&|]\\s+)((?=^|[]),;}]|//)|(?==[^>])|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.tsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          begin: "(:)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.type.annotation.tsx"
            }
          },
          end: "(?<![\\&:|])((?=[]),;}]|//)|(?==[^>])|(?=^\\s*$)|((?<=[]$)>_}[:alpha:]])\\s*(?=\\{)))",
          name: "meta.type.annotation.tsx",
          patterns: [
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-arguments": {
      begin: "<",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.begin.tsx"
        }
      },
      end: ">",
      endCaptures: {
        "0": {
          name: "punctuation.definition.typeparameters.end.tsx"
        }
      },
      name: "meta.type.parameters.tsx",
      patterns: [
        {
          include: "#type-arguments-body"
        }
      ]
    },
    "type-arguments-body": {
      patterns: [
        {
          captures: {
            "0": {
              name: "keyword.operator.type.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(_)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "type-builtin-literals": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(this|true|false|undefined|null|object)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.builtin.tsx"
    },
    "type-conditional": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends)\\s+",
          beginCaptures: {
            "1": {
              name: "storage.modifier.tsx"
            }
          },
          end: "(?<=:)",
          patterns: [
            {
              begin: "\\?",
              beginCaptures: {
                "0": {
                  name: "keyword.operator.ternary.tsx"
                }
              },
              end: ":",
              endCaptures: {
                "0": {
                  name: "keyword.operator.ternary.tsx"
                }
              },
              patterns: [
                {
                  include: "#type"
                }
              ]
            },
            {
              include: "#type"
            }
          ]
        }
      ]
    },
    "type-fn-type-parameters": {
      patterns: [
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b(?=\\s*<)",
          beginCaptures: {
            "1": {
              name: "meta.type.constructor.tsx storage.modifier.tsx"
            },
            "2": {
              name: "meta.type.constructor.tsx keyword.control.new.tsx"
            }
          },
          end: "(?<=>)",
          patterns: [
            {
              include: "#comment"
            },
            {
              include: "#type-parameters"
            }
          ]
        },
        {
          begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(abstract)\\s+)?(new)\\b\\s*(?=\\()",
          beginCaptures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "keyword.control.new.tsx"
            }
          },
          end: "(?<=\\))",
          name: "meta.type.constructor.tsx",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        },
        {
          begin: "((?=\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>))))))",
          end: "(?<=\\))",
          name: "meta.type.function.tsx",
          patterns: [
            {
              include: "#function-parameters"
            }
          ]
        }
      ]
    },
    "type-function-return-type": {
      patterns: [
        {
          begin: "(=>)(?=\\s*\\S)",
          beginCaptures: {
            "1": {
              name: "storage.type.function.arrow.tsx"
            }
          },
          end: "(?<!=>)(?<![\\&|])(?=[]),:;=>?{}]|//|$)",
          name: "meta.type.function.return.tsx",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        },
        {
          begin: "=>",
          beginCaptures: {
            "0": {
              name: "storage.type.function.arrow.tsx"
            }
          },
          end: "(?<!=>)(?<![\\&|])((?=[]),:;=>?{}]|//|^\\s*$)|((?<=\\S)(?=\\s*$)))",
          name: "meta.type.function.return.tsx",
          patterns: [
            {
              include: "#type-function-return-type-core"
            }
          ]
        }
      ]
    },
    "type-function-return-type-core": {
      patterns: [
        {
          include: "#comment"
        },
        {
          begin: "(?<==>)(?=\\s*\\{)",
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          include: "#type-predicate-operator"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-infer": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.expression.infer.tsx"
            },
            "2": {
              name: "entity.name.type.tsx"
            },
            "3": {
              name: "keyword.operator.expression.extends.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(infer)\\s+([$_[:alpha:]][$_[:alnum:]]*)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s+(extends)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))?",
          name: "meta.type.infer.tsx"
        }
      ]
    },
    "type-name": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))\\s*(<)",
          captures: {
            "1": {
              name: "entity.name.type.module.tsx"
            },
            "2": {
              name: "punctuation.accessor.tsx"
            },
            "3": {
              name: "punctuation.accessor.optional.tsx"
            },
            "4": {
              name: "meta.type.parameters.tsx punctuation.definition.typeparameters.begin.tsx"
            }
          },
          contentName: "meta.type.parameters.tsx",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.tsx punctuation.definition.typeparameters.end.tsx"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(<)",
          beginCaptures: {
            "1": {
              name: "entity.name.type.tsx"
            },
            "2": {
              name: "meta.type.parameters.tsx punctuation.definition.typeparameters.begin.tsx"
            }
          },
          contentName: "meta.type.parameters.tsx",
          end: "(>)",
          endCaptures: {
            "1": {
              name: "meta.type.parameters.tsx punctuation.definition.typeparameters.end.tsx"
            }
          },
          patterns: [
            {
              include: "#type-arguments-body"
            }
          ]
        },
        {
          captures: {
            "1": {
              name: "entity.name.type.module.tsx"
            },
            "2": {
              name: "punctuation.accessor.tsx"
            },
            "3": {
              name: "punctuation.accessor.optional.tsx"
            }
          },
          match: "([$_[:alpha:]][$_[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*\\d)))"
        },
        {
          match: "[$_[:alpha:]][$_[:alnum:]]*",
          name: "entity.name.type.tsx"
        }
      ]
    },
    "type-object": {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.block.tsx"
        }
      },
      name: "meta.object.type.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          include: "#method-declaration"
        },
        {
          include: "#indexer-declaration"
        },
        {
          include: "#indexer-mapped-type-declaration"
        },
        {
          include: "#field-declaration"
        },
        {
          include: "#type-annotation"
        },
        {
          begin: "\\.\\.\\.",
          beginCaptures: {
            "0": {
              name: "keyword.operator.spread.tsx"
            }
          },
          end: "(?=[,;}]|$)|(?<=})",
          patterns: [
            {
              include: "#type"
            }
          ]
        },
        {
          include: "#punctuation-comma"
        },
        {
          include: "#punctuation-semicolon"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-operators": {
      patterns: [
        {
          include: "#typeof-operator"
        },
        {
          include: "#type-infer"
        },
        {
          begin: "([\\&|])(?=\\s*\\{)",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.tsx"
            }
          },
          end: "(?<=})",
          patterns: [
            {
              include: "#type-object"
            }
          ]
        },
        {
          begin: "[\\&|]",
          beginCaptures: {
            "0": {
              name: "keyword.operator.type.tsx"
            }
          },
          end: "(?=\\S)"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))keyof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.keyof.tsx"
        },
        {
          match: "([:?])",
          name: "keyword.operator.ternary.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))import(?=\\s*\\()",
          name: "keyword.operator.expression.import.tsx"
        }
      ]
    },
    "type-parameters": {
      begin: "(<)",
      beginCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.begin.tsx"
        }
      },
      end: "(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.typeparameters.end.tsx"
        }
      },
      name: "meta.type.parameters.tsx",
      patterns: [
        {
          include: "#comment"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(extends|in|out|const)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "storage.modifier.tsx"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        },
        {
          match: "(=)(?!>)",
          name: "keyword.operator.assignment.tsx"
        }
      ]
    },
    "type-paren-or-function-parameters": {
      begin: "\\(",
      beginCaptures: {
        "0": {
          name: "meta.brace.round.tsx"
        }
      },
      end: "\\)",
      endCaptures: {
        "0": {
          name: "meta.brace.round.tsx"
        }
      },
      name: "meta.type.paren.cover.tsx",
      patterns: [
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "keyword.operator.rest.tsx"
            },
            "3": {
              name: "entity.name.function.tsx variable.language.this.tsx"
            },
            "4": {
              name: "entity.name.function.tsx"
            },
            "5": {
              name: "keyword.operator.optional.tsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=\\s*(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))))"
        },
        {
          captures: {
            "1": {
              name: "storage.modifier.tsx"
            },
            "2": {
              name: "keyword.operator.rest.tsx"
            },
            "3": {
              name: "variable.parameter.tsx variable.language.this.tsx"
            },
            "4": {
              name: "variable.parameter.tsx"
            },
            "5": {
              name: "keyword.operator.optional.tsx"
            }
          },
          match: "(?:(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?<![:=])(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s*(\\??)(?=:)"
        },
        {
          include: "#type-annotation"
        },
        {
          match: ",",
          name: "punctuation.separator.parameter.tsx"
        },
        {
          include: "#type"
        }
      ]
    },
    "type-predicate-operator": {
      patterns: [
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.tsx"
            },
            "2": {
              name: "variable.parameter.tsx variable.language.this.tsx"
            },
            "3": {
              name: "variable.parameter.tsx"
            },
            "4": {
              name: "keyword.operator.expression.is.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(asserts)\\s+)?(?!asserts)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))\\s(is)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          captures: {
            "1": {
              name: "keyword.operator.type.asserts.tsx"
            },
            "2": {
              name: "variable.parameter.tsx variable.language.this.tsx"
            },
            "3": {
              name: "variable.parameter.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(asserts)\\s+(?!is)(?:(this)|([$_[:alpha:]][$_[:alnum:]]*))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))asserts(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.type.asserts.tsx"
        },
        {
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))is(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
          name: "keyword.operator.expression.is.tsx"
        }
      ]
    },
    "type-primitive": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "support.type.primitive.tsx"
    },
    "type-string": {
      patterns: [
        {
          include: "#qstring-single"
        },
        {
          include: "#qstring-double"
        },
        {
          include: "#template-type"
        }
      ]
    },
    "type-tuple": {
      begin: "\\[",
      beginCaptures: {
        "0": {
          name: "meta.brace.square.tsx"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "meta.brace.square.tsx"
        }
      },
      name: "meta.type.tuple.tsx",
      patterns: [
        {
          match: "\\.\\.\\.",
          name: "keyword.operator.rest.tsx"
        },
        {
          captures: {
            "1": {
              name: "entity.name.label.tsx"
            },
            "2": {
              name: "keyword.operator.optional.tsx"
            },
            "3": {
              name: "punctuation.separator.label.tsx"
            }
          },
          match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))([$_[:alpha:]][$_[:alnum:]]*)\\s*(\\?)?\\s*(:)"
        },
        {
          include: "#type"
        },
        {
          include: "#punctuation-comma"
        }
      ]
    },
    "typeof-operator": {
      begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))typeof(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      beginCaptures: {
        "0": {
          name: "keyword.operator.expression.typeof.tsx"
        }
      },
      end: "(?=[]\\&),:;=>?{|}]|(extends\\s+)|$|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)",
      patterns: [
        {
          include: "#type-arguments"
        },
        {
          include: "#expression"
        }
      ]
    },
    "undefined-literal": {
      match: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))undefined(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))",
      name: "constant.language.undefined.tsx"
    },
    "var-expr": {
      patterns: [
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!^let|[^$._[:alnum:]]let|^var|[^$._[:alnum:]]var)(?=\\s*$)))",
          name: "meta.var.expr.tsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(var|let)(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.tsx"
                },
                "2": {
                  name: "storage.modifier.tsx"
                },
                "3": {
                  name: "storage.type.tsx"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-variable"
            },
            {
              include: "#var-single-variable"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.tsx"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-variable"
                },
                {
                  include: "#var-single-variable"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            },
            "3": {
              name: "storage.type.tsx"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=^|[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]])const)(?=\\s*$)))",
          name: "meta.var.expr.tsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b(const(?!\\s+enum\\b))(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.tsx"
                },
                "2": {
                  name: "storage.modifier.tsx"
                },
                "3": {
                  name: "storage.type.tsx"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#destructuring-const"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*(?=$|//)",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.tsx"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#destructuring-const"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        },
        {
          begin: "(?=(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))",
          beginCaptures: {
            "1": {
              name: "keyword.control.export.tsx"
            },
            "2": {
              name: "storage.modifier.tsx"
            },
            "3": {
              name: "storage.type.tsx"
            }
          },
          end: "(?!(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))((?=[;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b)|((?<!(?:^|[^$._[:alnum:]]|^await\\s+|[^$._[:alnum:]]await\\s+)using)(?=\\s*$)))",
          name: "meta.var.expr.tsx",
          patterns: [
            {
              begin: "(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:\\b(export)\\s+)?(?:\\b(declare)\\s+)?\\b\\b(using(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])|await\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b)\\b(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*",
              beginCaptures: {
                "1": {
                  name: "keyword.control.export.tsx"
                },
                "2": {
                  name: "storage.modifier.tsx"
                },
                "3": {
                  name: "storage.type.tsx"
                }
              },
              end: "(?=\\S)"
            },
            {
              include: "#var-single-const"
            },
            {
              include: "#variable-initializer"
            },
            {
              include: "#comment"
            },
            {
              begin: "(,)\\s*((?!\\S)|(?=//))",
              beginCaptures: {
                "1": {
                  name: "punctuation.separator.comma.tsx"
                }
              },
              end: "(?<!,)(((?=[;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|^\\s*$))|((?<=\\S)(?=\\s*$)))",
              patterns: [
                {
                  include: "#single-line-comment-consuming-line-ending"
                },
                {
                  include: "#comment"
                },
                {
                  include: "#var-single-const"
                },
                {
                  include: "#punctuation-comma"
                }
              ]
            },
            {
              include: "#punctuation-comma"
            }
          ]
        }
      ]
    },
    "var-single-const": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.tsx variable.other.constant.tsx entity.name.function.tsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.tsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.tsx variable.other.constant.tsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.tsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable": {
      patterns: [
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?(?=\\s*(=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>)))))|(:\\s*((<)|(\\(\\s*((\\))|(\\.\\.\\.)|([$_[:alnum:]]+\\s*(([,:=?])|(\\)\\s*=>)))))))|(:\\s*(?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))Function(?![$_[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(:\\s*((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))))))|(:\\s*(=>|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(<[^<>]*>)|[^(),<=>])+=\\s*(((async\\s+)?((function\\s*[(*<])|(function\\s+)|([$_[:alpha:]][$_[:alnum:]]*\\s*=>)))|((async\\s*)?(((<\\s*)$|(\\(\\s*((([\\[{]\\s*)?)$|((\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})\\s*((:\\s*\\{?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*)))|((\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])\\s*((:\\s*\\[?)$|((\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+\\s*)?=\\s*))))))|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*((\\)\\s*:)|((\\.\\.\\.\\s*)?[$_[:alpha:]][$_[:alnum:]]*\\s*:)))|(<\\s*[$_[:alpha:]][$_[:alnum:]]*\\s+extends\\s*[^=>])|((<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<]|<\\s*(((const\\s+)?[$_[:alpha:]])|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*]))([^<=>]|=[^<])*>)*>)*>\\s*)?\\(\\s*(/\\*([^*]|(\\*[^/]))*\\*/\\s*)*(([$_[:alpha:]]|(\\{([^{}]|(\\{([^{}]|\\{[^{}]*})*}))*})|(\\[([^]\\[]|(\\[([^]\\[]|\\[[^]\\[]*])*]))*])|(\\.\\.\\.\\s*[$_[:alpha:]]))([^\"'()`]|(\\(([^()]|(\\(([^()]|\\([^()]*\\))*\\)))*\\))|('([^'\\\\]|\\\\.)*')|(\"([^\"\\\\]|\\\\.)*\")|(`([^\\\\`]|\\\\.)*`))*)?\\)(\\s*:\\s*([^()<>{}]|<([^<>]|<([^<>]|<[^<>]+>)+>)+>|\\([^()]+\\)|\\{[^{}]+})+)?\\s*=>))))))",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.tsx entity.name.function.tsx"
            },
            "2": {
              name: "keyword.operator.definiteassignment.tsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.tsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "(\\p{upper}[$_\\d[:upper:]]*)(?![$_[:alnum:]])(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.tsx variable.other.constant.tsx"
            },
            "2": {
              name: "keyword.operator.definiteassignment.tsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.tsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        },
        {
          begin: "([$_[:alpha:]][$_[:alnum:]]*)(!)?",
          beginCaptures: {
            "1": {
              name: "meta.definition.variable.tsx variable.other.readwrite.tsx"
            },
            "2": {
              name: "keyword.operator.definiteassignment.tsx"
            }
          },
          end: "(?=$|^|[,;=}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+)|(;|^\\s*$|^\\s*(?:abstract|async|\\bawait\\s+\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b\\b|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|\\busing(?=\\s+(?!in\\b|of\\b(?!\\s*(?:of\\b|=)))[$_[:alpha:]])\\b|var|while)\\b))",
          name: "meta.var-single-variable.expr.tsx",
          patterns: [
            {
              include: "#var-single-variable-type-annotation"
            }
          ]
        }
      ]
    },
    "var-single-variable-type-annotation": {
      patterns: [
        {
          include: "#type-annotation"
        },
        {
          include: "#string"
        },
        {
          include: "#comment"
        }
      ]
    },
    "variable-initializer": {
      patterns: [
        {
          begin: "(?<![!=])(=)(?!=)(?=\\s*\\S)(?!\\s*.*=>\\s*$)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.tsx"
            }
          },
          end: "(?=$|^|[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))",
          patterns: [
            {
              include: "#expression"
            }
          ]
        },
        {
          begin: "(?<![!=])(=)(?!=)",
          beginCaptures: {
            "1": {
              name: "keyword.operator.assignment.tsx"
            }
          },
          end: "(?=[]),;}]|((?<![$_[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(of|in)\\s+))|(?=^\\s*$)|(?<![-\\&*+/|])(?<=\\S)(?<!=)(?=\\s*$)",
          patterns: [
            {
              include: "#expression"
            }
          ]
        }
      ]
    }
  },
  scopeName: "source.tsx"
};
var json_default = {
  displayName: "JSON",
  name: "json",
  patterns: [
    {
      include: "#value"
    }
  ],
  repository: {
    array: {
      begin: "\\[",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.array.begin.json"
        }
      },
      end: "]",
      endCaptures: {
        "0": {
          name: "punctuation.definition.array.end.json"
        }
      },
      name: "meta.structure.array.json",
      patterns: [
        {
          include: "#value"
        },
        {
          match: ",",
          name: "punctuation.separator.array.json"
        },
        {
          match: "[^]\\s]",
          name: "invalid.illegal.expected-array-separator.json"
        }
      ]
    },
    comments: {
      patterns: [
        {
          begin: "/\\*\\*(?!/)",
          captures: {
            "0": {
              name: "punctuation.definition.comment.json"
            }
          },
          end: "\\*/",
          name: "comment.block.documentation.json"
        },
        {
          begin: "/\\*",
          captures: {
            "0": {
              name: "punctuation.definition.comment.json"
            }
          },
          end: "\\*/",
          name: "comment.block.json"
        },
        {
          captures: {
            "1": {
              name: "punctuation.definition.comment.json"
            }
          },
          match: "(//).*$\\n?",
          name: "comment.line.double-slash.js"
        }
      ]
    },
    constant: {
      match: "\\b(?:true|false|null)\\b",
      name: "constant.language.json"
    },
    number: {
      match: "-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[Ee][-+]?\\d+)?)?",
      name: "constant.numeric.json"
    },
    object: {
      begin: "\\{",
      beginCaptures: {
        "0": {
          name: "punctuation.definition.dictionary.begin.json"
        }
      },
      end: "}",
      endCaptures: {
        "0": {
          name: "punctuation.definition.dictionary.end.json"
        }
      },
      name: "meta.structure.dictionary.json",
      patterns: [
        {
          include: "#objectkey"
        },
        {
          include: "#comments"
        },
        {
          begin: ":",
          beginCaptures: {
            "0": {
              name: "punctuation.separator.dictionary.key-value.json"
            }
          },
          end: "(,)|(?=})",
          endCaptures: {
            "1": {
              name: "punctuation.separator.dictionary.pair.json"
            }
          },
          name: "meta.structure.dictionary.value.json",
          patterns: [
            {
              include: "#value"
            },
            {
              match: "[^,\\s]",
              name: "invalid.illegal.expected-dictionary-separator.json"
            }
          ]
        },
        {
          match: "[^}\\s]",
          name: "invalid.illegal.expected-dictionary-separator.json"
        }
      ]
    },
    objectkey: {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.support.type.property-name.begin.json"
        }
      },
      end: '"',
      endCaptures: {
        "0": {
          name: "punctuation.support.type.property-name.end.json"
        }
      },
      name: "string.json support.type.property-name.json",
      patterns: [
        {
          include: "#stringcontent"
        }
      ]
    },
    string: {
      begin: '"',
      beginCaptures: {
        "0": {
          name: "punctuation.definition.string.begin.json"
        }
      },
      end: '"',
      endCaptures: {
        "0": {
          name: "punctuation.definition.string.end.json"
        }
      },
      name: "string.quoted.double.json",
      patterns: [
        {
          include: "#stringcontent"
        }
      ]
    },
    stringcontent: {
      patterns: [
        {
          match: '\\\\(?:["/\\\\bfnrt]|u\\h{4})',
          name: "constant.character.escape.json"
        },
        {
          match: "\\\\.",
          name: "invalid.illegal.unrecognized-string-escape.json"
        }
      ]
    },
    value: {
      patterns: [
        {
          include: "#constant"
        },
        {
          include: "#number"
        },
        {
          include: "#string"
        },
        {
          include: "#array"
        },
        {
          include: "#object"
        },
        {
          include: "#comments"
        }
      ]
    }
  },
  scopeName: "source.json"
};
var html_json_script_tag_default = {
  name: "json-script",
  scopeName: "text.html.json-script",
  injectTo: [
    "text.html.basic"
  ],
  injectionSelector: "L:text.html.basic -comment",
  patterns: [
    {
      begin: `(<)(script)\\b(?=[^>]*type=(importmap|'importmap'|"importmap"|json|'json'|"json"|'application/json'|"application/json"))(?![^/>]*/>\\s*$)`,
      beginCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.html"
        },
        "2": {
          name: "entity.name.tag.html"
        }
      },
      end: "(</)(script)(>)",
      endCaptures: {
        "1": {
          name: "punctuation.definition.tag.begin.html"
        },
        "2": {
          name: "entity.name.tag.html"
        },
        "3": {
          name: "punctuation.definition.tag.end.html"
        }
      },
      patterns: [
        {
          name: "entity.other.attribute-name.html",
          match: "\\b([a-zA-Z\\-:_]+)"
        },
        {
          name: "punctuation.separator.key-value.html",
          match: "="
        },
        {
          name: "string.quoted.double.html",
          match: `("|').*?("|')`
        },
        {
          begin: "(>)",
          beginCaptures: {
            "0": {
              name: "meta.tag.metadata.json.start.html"
            },
            "1": {
              name: "punctuation.definition.tag.end.html"
            }
          },
          end: "(?=<\/script>)",
          endCaptures: {
            "0": {
              name: "meta.tag.metadata.json.end.html"
            }
          },
          patterns: [
            {
              include: "source.json"
            }
          ]
        }
      ]
    }
  ]
};
var js_inline_html_default = {
  $license: "https://github.com/pushqrdx/vscode-inline-html/blob/master/LICENSE",
  name: "inline-html",
  scopeName: "text.html.inline",
  injectTo: [
    "source.js",
    "source.js.jsx",
    "source.ts",
    "source.tsx"
  ],
  injectionSelector: "L:source.js -comment -string, L:source.jsx -comment -string, L:source.ts -comment -string, L:source.tsx -comment -string, L:source.js (string.quoted.double.html, string.quoted.single.html), L:source.jsx (string.quoted.double.html, string.quoted.single.html), L:source.js.jsx (string.quoted.double.html, string.quoted.single.html), L:source.ts (string.quoted.double.html, string.quoted.single.html), L:source.tsx (string.quoted.double.html, string.quoted.single.html)",
  injections: {
    "L:source": {
      patterns: [
        {
          match: "<",
          name: "invalid.illegal.bad-angle-bracket.html"
        }
      ]
    }
  },
  patterns: [
    {
      contentName: "meta.embedded.block.html",
      begin: "(?ix)(\\s*?(\\w+\\.)?(?:html|/\\*\\s*html\\s*\\*/)\\s*)(`)",
      beginCaptures: {
        "0": {
          name: "string.template.ts, punctuation.definition.string.template.begin.ts"
        },
        "1": {
          name: "entity.name.function.tagged-template.ts"
        }
      },
      end: "(`)",
      endCaptures: {
        "0": {
          name: "string.template.ts, punctuation.definition.string.template.end.ts"
        }
      },
      patterns: [
        {
          include: "source.ts#template-substitution-element"
        },
        {
          include: "text.html.basic"
        }
      ]
    },
    {
      include: "source.ts#template-substitution-element"
    }
  ]
};
var js_inline_css_default = {
  $license: "https://github.com/pushqrdx/vscode-inline-html/blob/master/LICENSE",
  name: "inline-css",
  scopeName: "source.css.inline",
  injectTo: [
    "source.js",
    "source.js.jsx",
    "source.ts",
    "source.tsx"
  ],
  injectionSelector: "L:source.js -comment -string, L:source.jsx -comment -string, L:source.ts -comment -string, L:source.tsx -comment -string",
  patterns: [
    {
      contentName: "meta.embedded.block.css",
      begin: "(?ix)(\\s*?(\\w+\\.)?(?:css|/\\*\\s*css\\s*\\*/)\\s*)(`)",
      beginCaptures: {
        "0": {
          name: "string.template.ts, punctuation.definition.string.template.begin.ts"
        },
        "1": {
          name: "entity.name.function.tagged-template.ts"
        }
      },
      end: "(`)",
      endCaptures: {
        "0": {
          name: "string.template.ts, punctuation.definition.string.template.end.ts"
        }
      },
      patterns: [
        {
          include: "source.ts#template-substitution-element"
        },
        {
          include: "source.css"
        }
      ]
    },
    {
      include: "source.ts#template-substitution-element"
    }
  ]
};
var syntaxes2 = [
  html_default,
  css_default,
  javascript_default,
  typescript_default,
  jsx_default,
  tsx_default,
  json_default,
  html_json_script_tag_default,
  js_inline_html_default,
  js_inline_css_default
];
for (const syntax of syntaxes2) {
  registerSyntax(syntax);
}
registerTheme(vitesse_dark_default);
Reflect.set(globalThis, "MonacoEnvironment", {
  builtinLSP: true
});

// src/common/Monaco.tsx
var MonacoCtx = Q(null);
var useMonacoCtx = () => {
  const c5 = x2(MonacoCtx);
  if (!c5) throw new Error("no monaco");
  return c5;
};
var MonacoCtxProvider = (props) => {
  const [mon, setMon] = d2(null);
  y2(() => {
    init2().then(setMon);
  }, []);
  return /* @__PURE__ */ u2(MonacoCtx.Provider, {
    value: mon,
    children: props.children
  });
};
var useEditorValue = (initialCode, lang = "json") => {
  const monaco2 = useMonacoCtx();
  const editorRef = A2(null);
  const [code, setCode] = d2(initialCode);
  const getValue = () => editorRef.current?.getValue() ?? code;
  const setValue = (newCode) => {
    setCode(newCode);
    if (editorRef.current) {
      editorRef.current.setValue(newCode);
    }
  };
  return {
    code,
    getValue,
    setValue,
    ref: editorRef,
    _lang: lang
  };
};
var Editor = D3((props, ref) => {
  const monaco2 = useMonacoCtx();
  const containerRef = A2(null);
  const editorInstanceRef = A2(null);
  y2(() => {
    if (ref) {
      if (typeof ref === "function") ref(containerRef.current);
      else ref.current = containerRef.current;
    }
    if (props.value.ref) {
      props.value.ref.current = editorInstanceRef.current;
    }
  }, [
    ref,
    props.value.ref
  ]);
  y2(() => {
    if (!monaco2) throw new Error("no monaco");
    if (!containerRef.current) return;
    const editor = monaco2.editor.create(containerRef.current);
    editor.setModel(monaco2.editor.createModel(props.value.code, props.value._lang));
    editorInstanceRef.current = editor;
    editor.onDidChangeModelContent(() => {
      props.value.setValue(editor.getValue());
    });
    return () => {
      editor.dispose();
      editorInstanceRef.current = null;
    };
  }, [
    monaco2,
    props.value._lang
  ]);
  y2(() => {
    if (editorInstanceRef.current && props.value.code !== editorInstanceRef.current.getValue()) {
      editorInstanceRef.current.setValue(props.value.code);
    }
  }, [
    props.value.code
  ]);
  return /* @__PURE__ */ u2("div", {
    style: {
      height: "400px"
    },
    class: "w-full",
    id: "monaco-editor",
    ref: containerRef
  });
});

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/error.js
function getLineColFromPtr(string, ptr) {
  let lines = string.slice(0, ptr).split(/\r\n|\n|\r/g);
  return [
    lines.length,
    lines.pop().length + 1
  ];
}
function makeCodeBlock(string, line, column) {
  let lines = string.split(/\r\n|\n|\r/g);
  let codeblock = "";
  let numberLen = (Math.log10(line + 1) | 0) + 1;
  for (let i6 = line - 1; i6 <= line + 1; i6++) {
    let l4 = lines[i6 - 1];
    if (!l4) continue;
    codeblock += i6.toString().padEnd(numberLen, " ");
    codeblock += ":  ";
    codeblock += l4;
    codeblock += "\n";
    if (i6 === line) {
      codeblock += " ".repeat(numberLen + column + 2);
      codeblock += "^\n";
    }
  }
  return codeblock;
}
var TomlError = class extends Error {
  line;
  column;
  codeblock;
  constructor(message, options) {
    const [line, column] = getLineColFromPtr(options.toml, options.ptr);
    const codeblock = makeCodeBlock(options.toml, line, column);
    super(`Invalid TOML document: ${message}

${codeblock}`, options);
    this.line = line;
    this.column = column;
    this.codeblock = codeblock;
  }
};

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/util.js
function isEscaped(str, ptr) {
  let i6 = 0;
  while (str[ptr - ++i6] === "\\") ;
  return --i6 && i6 % 2;
}
function indexOfNewline(str, start = 0, end = str.length) {
  let idx = str.indexOf("\n", start);
  if (str[idx - 1] === "\r") idx--;
  return idx <= end ? idx : -1;
}
function skipComment(str, ptr) {
  for (let i6 = ptr; i6 < str.length; i6++) {
    let c5 = str[i6];
    if (c5 === "\n") return i6;
    if (c5 === "\r" && str[i6 + 1] === "\n") return i6 + 1;
    if (c5 < " " && c5 !== "	" || c5 === "\x7F") {
      throw new TomlError("control characters are not allowed in comments", {
        toml: str,
        ptr
      });
    }
  }
  return str.length;
}
function skipVoid(str, ptr, banNewLines, banComments) {
  let c5;
  while ((c5 = str[ptr]) === " " || c5 === "	" || !banNewLines && (c5 === "\n" || c5 === "\r" && str[ptr + 1] === "\n")) ptr++;
  return banComments || c5 !== "#" ? ptr : skipVoid(str, skipComment(str, ptr), banNewLines);
}
function skipUntil(str, ptr, sep, end, banNewLines = false) {
  if (!end) {
    ptr = indexOfNewline(str, ptr);
    return ptr < 0 ? str.length : ptr;
  }
  for (let i6 = ptr; i6 < str.length; i6++) {
    let c5 = str[i6];
    if (c5 === "#") {
      i6 = indexOfNewline(str, i6);
    } else if (c5 === sep) {
      return i6 + 1;
    } else if (c5 === end || banNewLines && (c5 === "\n" || c5 === "\r" && str[i6 + 1] === "\n")) {
      return i6;
    }
  }
  throw new TomlError("cannot find end of structure", {
    toml: str,
    ptr
  });
}
function getStringEnd(str, seek) {
  let first = str[seek];
  let target = first === str[seek + 1] && str[seek + 1] === str[seek + 2] ? str.slice(seek, seek + 3) : first;
  seek += target.length - 1;
  do
    seek = str.indexOf(target, ++seek);
  while (seek > -1 && first !== "'" && isEscaped(str, seek));
  if (seek > -1) {
    seek += target.length;
    if (target.length > 1) {
      if (str[seek] === first) seek++;
      if (str[seek] === first) seek++;
    }
  }
  return seek;
}

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/date.js
var DATE_TIME_RE = /^(\d{4}-\d{2}-\d{2})?[T ]?(?:(\d{2}):\d{2}:\d{2}(?:\.\d+)?)?(Z|[-+]\d{2}:\d{2})?$/i;
var TomlDate = class _TomlDate extends Date {
  #hasDate = false;
  #hasTime = false;
  #offset = null;
  constructor(date) {
    let hasDate = true;
    let hasTime = true;
    let offset = "Z";
    if (typeof date === "string") {
      let match = date.match(DATE_TIME_RE);
      if (match) {
        if (!match[1]) {
          hasDate = false;
          date = `0000-01-01T${date}`;
        }
        hasTime = !!match[2];
        hasTime && date[10] === " " && (date = date.replace(" ", "T"));
        if (match[2] && +match[2] > 23) {
          date = "";
        } else {
          offset = match[3] || null;
          date = date.toUpperCase();
          if (!offset && hasTime) date += "Z";
        }
      } else {
        date = "";
      }
    }
    super(date);
    if (!isNaN(this.getTime())) {
      this.#hasDate = hasDate;
      this.#hasTime = hasTime;
      this.#offset = offset;
    }
  }
  isDateTime() {
    return this.#hasDate && this.#hasTime;
  }
  isLocal() {
    return !this.#hasDate || !this.#hasTime || !this.#offset;
  }
  isDate() {
    return this.#hasDate && !this.#hasTime;
  }
  isTime() {
    return this.#hasTime && !this.#hasDate;
  }
  isValid() {
    return this.#hasDate || this.#hasTime;
  }
  toISOString() {
    let iso = super.toISOString();
    if (this.isDate()) return iso.slice(0, 10);
    if (this.isTime()) return iso.slice(11, 23);
    if (this.#offset === null) return iso.slice(0, -1);
    if (this.#offset === "Z") return iso;
    let offset = +this.#offset.slice(1, 3) * 60 + +this.#offset.slice(4, 6);
    offset = this.#offset[0] === "-" ? offset : -offset;
    let offsetDate = new Date(this.getTime() - offset * 6e4);
    return offsetDate.toISOString().slice(0, -1) + this.#offset;
  }
  static wrapAsOffsetDateTime(jsDate, offset = "Z") {
    let date = new _TomlDate(jsDate);
    date.#offset = offset;
    return date;
  }
  static wrapAsLocalDateTime(jsDate) {
    let date = new _TomlDate(jsDate);
    date.#offset = null;
    return date;
  }
  static wrapAsLocalDate(jsDate) {
    let date = new _TomlDate(jsDate);
    date.#hasTime = false;
    date.#offset = null;
    return date;
  }
  static wrapAsLocalTime(jsDate) {
    let date = new _TomlDate(jsDate);
    date.#hasDate = false;
    date.#offset = null;
    return date;
  }
};

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/primitive.js
var INT_REGEX = /^((0x[0-9a-fA-F](_?[0-9a-fA-F])*)|(([+-]|0[ob])?\d(_?\d)*))$/;
var FLOAT_REGEX = /^[+-]?\d(_?\d)*(\.\d(_?\d)*)?([eE][+-]?\d(_?\d)*)?$/;
var LEADING_ZERO = /^[+-]?0[0-9_]/;
var ESCAPE_REGEX = /^[0-9a-f]{4,8}$/i;
var ESC_MAP = {
  b: "\b",
  t: "	",
  n: "\n",
  f: "\f",
  r: "\r",
  '"': '"',
  "\\": "\\"
};
function parseString(str, ptr = 0, endPtr = str.length) {
  let isLiteral = str[ptr] === "'";
  let isMultiline = str[ptr++] === str[ptr] && str[ptr] === str[ptr + 1];
  if (isMultiline) {
    endPtr -= 2;
    if (str[ptr += 2] === "\r") ptr++;
    if (str[ptr] === "\n") ptr++;
  }
  let tmp = 0;
  let isEscape;
  let parsed = "";
  let sliceStart = ptr;
  while (ptr < endPtr - 1) {
    let c5 = str[ptr++];
    if (c5 === "\n" || c5 === "\r" && str[ptr] === "\n") {
      if (!isMultiline) {
        throw new TomlError("newlines are not allowed in strings", {
          toml: str,
          ptr: ptr - 1
        });
      }
    } else if (c5 < " " && c5 !== "	" || c5 === "\x7F") {
      throw new TomlError("control characters are not allowed in strings", {
        toml: str,
        ptr: ptr - 1
      });
    }
    if (isEscape) {
      isEscape = false;
      if (c5 === "u" || c5 === "U") {
        let code = str.slice(ptr, ptr += c5 === "u" ? 4 : 8);
        if (!ESCAPE_REGEX.test(code)) {
          throw new TomlError("invalid unicode escape", {
            toml: str,
            ptr: tmp
          });
        }
        try {
          parsed += String.fromCodePoint(parseInt(code, 16));
        } catch {
          throw new TomlError("invalid unicode escape", {
            toml: str,
            ptr: tmp
          });
        }
      } else if (isMultiline && (c5 === "\n" || c5 === " " || c5 === "	" || c5 === "\r")) {
        ptr = skipVoid(str, ptr - 1, true);
        if (str[ptr] !== "\n" && str[ptr] !== "\r") {
          throw new TomlError("invalid escape: only line-ending whitespace may be escaped", {
            toml: str,
            ptr: tmp
          });
        }
        ptr = skipVoid(str, ptr);
      } else if (c5 in ESC_MAP) {
        parsed += ESC_MAP[c5];
      } else {
        throw new TomlError("unrecognized escape sequence", {
          toml: str,
          ptr: tmp
        });
      }
      sliceStart = ptr;
    } else if (!isLiteral && c5 === "\\") {
      tmp = ptr - 1;
      isEscape = true;
      parsed += str.slice(sliceStart, tmp);
    }
  }
  return parsed + str.slice(sliceStart, endPtr - 1);
}
function parseValue(value, toml, ptr, integersAsBigInt) {
  if (value === "true") return true;
  if (value === "false") return false;
  if (value === "-inf") return -Infinity;
  if (value === "inf" || value === "+inf") return Infinity;
  if (value === "nan" || value === "+nan" || value === "-nan") return NaN;
  if (value === "-0") return integersAsBigInt ? 0n : 0;
  let isInt = INT_REGEX.test(value);
  if (isInt || FLOAT_REGEX.test(value)) {
    if (LEADING_ZERO.test(value)) {
      throw new TomlError("leading zeroes are not allowed", {
        toml,
        ptr
      });
    }
    value = value.replace(/_/g, "");
    let numeric = +value;
    if (isNaN(numeric)) {
      throw new TomlError("invalid number", {
        toml,
        ptr
      });
    }
    if (isInt) {
      if ((isInt = !Number.isSafeInteger(numeric)) && !integersAsBigInt) {
        throw new TomlError("integer value cannot be represented losslessly", {
          toml,
          ptr
        });
      }
      if (isInt || integersAsBigInt === true) numeric = BigInt(value);
    }
    return numeric;
  }
  const date = new TomlDate(value);
  if (!date.isValid()) {
    throw new TomlError("invalid value", {
      toml,
      ptr
    });
  }
  return date;
}

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/extract.js
function sliceAndTrimEndOf(str, startPtr, endPtr, allowNewLines) {
  let value = str.slice(startPtr, endPtr);
  let commentIdx = value.indexOf("#");
  if (commentIdx > -1) {
    skipComment(str, commentIdx);
    value = value.slice(0, commentIdx);
  }
  let trimmed = value.trimEnd();
  if (!allowNewLines) {
    let newlineIdx = value.indexOf("\n", trimmed.length);
    if (newlineIdx > -1) {
      throw new TomlError("newlines are not allowed in inline tables", {
        toml: str,
        ptr: startPtr + newlineIdx
      });
    }
  }
  return [
    trimmed,
    commentIdx
  ];
}
function extractValue(str, ptr, end, depth, integersAsBigInt) {
  if (depth === 0) {
    throw new TomlError("document contains excessively nested structures. aborting.", {
      toml: str,
      ptr
    });
  }
  let c5 = str[ptr];
  if (c5 === "[" || c5 === "{") {
    let [value, endPtr2] = c5 === "[" ? parseArray(str, ptr, depth, integersAsBigInt) : parseInlineTable(str, ptr, depth, integersAsBigInt);
    let newPtr = end ? skipUntil(str, endPtr2, ",", end) : endPtr2;
    if (endPtr2 - newPtr && end === "}") {
      let nextNewLine = indexOfNewline(str, endPtr2, newPtr);
      if (nextNewLine > -1) {
        throw new TomlError("newlines are not allowed in inline tables", {
          toml: str,
          ptr: nextNewLine
        });
      }
    }
    return [
      value,
      newPtr
    ];
  }
  let endPtr;
  if (c5 === '"' || c5 === "'") {
    endPtr = getStringEnd(str, ptr);
    let parsed = parseString(str, ptr, endPtr);
    if (end) {
      endPtr = skipVoid(str, endPtr, end !== "]");
      if (str[endPtr] && str[endPtr] !== "," && str[endPtr] !== end && str[endPtr] !== "\n" && str[endPtr] !== "\r") {
        throw new TomlError("unexpected character encountered", {
          toml: str,
          ptr: endPtr
        });
      }
      endPtr += +(str[endPtr] === ",");
    }
    return [
      parsed,
      endPtr
    ];
  }
  endPtr = skipUntil(str, ptr, ",", end);
  let slice = sliceAndTrimEndOf(str, ptr, endPtr - +(str[endPtr - 1] === ","), end === "]");
  if (!slice[0]) {
    throw new TomlError("incomplete key-value declaration: no value specified", {
      toml: str,
      ptr
    });
  }
  if (end && slice[1] > -1) {
    endPtr = skipVoid(str, ptr + slice[1]);
    endPtr += +(str[endPtr] === ",");
  }
  return [
    parseValue(slice[0], str, ptr, integersAsBigInt),
    endPtr
  ];
}

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/struct.js
var KEY_PART_RE = /^[a-zA-Z0-9-_]+[ \t]*$/;
function parseKey(str, ptr, end = "=") {
  let dot = ptr - 1;
  let parsed = [];
  let endPtr = str.indexOf(end, ptr);
  if (endPtr < 0) {
    throw new TomlError("incomplete key-value: cannot find end of key", {
      toml: str,
      ptr
    });
  }
  do {
    let c5 = str[ptr = ++dot];
    if (c5 !== " " && c5 !== "	") {
      if (c5 === '"' || c5 === "'") {
        if (c5 === str[ptr + 1] && c5 === str[ptr + 2]) {
          throw new TomlError("multiline strings are not allowed in keys", {
            toml: str,
            ptr
          });
        }
        let eos = getStringEnd(str, ptr);
        if (eos < 0) {
          throw new TomlError("unfinished string encountered", {
            toml: str,
            ptr
          });
        }
        dot = str.indexOf(".", eos);
        let strEnd = str.slice(eos, dot < 0 || dot > endPtr ? endPtr : dot);
        let newLine = indexOfNewline(strEnd);
        if (newLine > -1) {
          throw new TomlError("newlines are not allowed in keys", {
            toml: str,
            ptr: ptr + dot + newLine
          });
        }
        if (strEnd.trimStart()) {
          throw new TomlError("found extra tokens after the string part", {
            toml: str,
            ptr: eos
          });
        }
        if (endPtr < eos) {
          endPtr = str.indexOf(end, eos);
          if (endPtr < 0) {
            throw new TomlError("incomplete key-value: cannot find end of key", {
              toml: str,
              ptr
            });
          }
        }
        parsed.push(parseString(str, ptr, eos));
      } else {
        dot = str.indexOf(".", ptr);
        let part = str.slice(ptr, dot < 0 || dot > endPtr ? endPtr : dot);
        if (!KEY_PART_RE.test(part)) {
          throw new TomlError("only letter, numbers, dashes and underscores are allowed in keys", {
            toml: str,
            ptr
          });
        }
        parsed.push(part.trimEnd());
      }
    }
  } while (dot + 1 && dot < endPtr);
  return [
    parsed,
    skipVoid(str, endPtr + 1, true, true)
  ];
}
function parseInlineTable(str, ptr, depth, integersAsBigInt) {
  let res = {};
  let seen = /* @__PURE__ */ new Set();
  let c5;
  let comma = 0;
  ptr++;
  while ((c5 = str[ptr++]) !== "}" && c5) {
    let err = {
      toml: str,
      ptr: ptr - 1
    };
    if (c5 === "\n") {
      throw new TomlError("newlines are not allowed in inline tables", err);
    } else if (c5 === "#") {
      throw new TomlError("inline tables cannot contain comments", err);
    } else if (c5 === ",") {
      throw new TomlError("expected key-value, found comma", err);
    } else if (c5 !== " " && c5 !== "	") {
      let k4;
      let t4 = res;
      let hasOwn = false;
      let [key2, keyEndPtr] = parseKey(str, ptr - 1);
      for (let i6 = 0; i6 < key2.length; i6++) {
        if (i6) t4 = hasOwn ? t4[k4] : t4[k4] = {};
        k4 = key2[i6];
        if ((hasOwn = Object.hasOwn(t4, k4)) && (typeof t4[k4] !== "object" || seen.has(t4[k4]))) {
          throw new TomlError("trying to redefine an already defined value", {
            toml: str,
            ptr
          });
        }
        if (!hasOwn && k4 === "__proto__") {
          Object.defineProperty(t4, k4, {
            enumerable: true,
            configurable: true,
            writable: true
          });
        }
      }
      if (hasOwn) {
        throw new TomlError("trying to redefine an already defined value", {
          toml: str,
          ptr
        });
      }
      let [value, valueEndPtr] = extractValue(str, keyEndPtr, "}", depth - 1, integersAsBigInt);
      seen.add(value);
      t4[k4] = value;
      ptr = valueEndPtr;
      comma = str[ptr - 1] === "," ? ptr - 1 : 0;
    }
  }
  if (comma) {
    throw new TomlError("trailing commas are not allowed in inline tables", {
      toml: str,
      ptr: comma
    });
  }
  if (!c5) {
    throw new TomlError("unfinished table encountered", {
      toml: str,
      ptr
    });
  }
  return [
    res,
    ptr
  ];
}
function parseArray(str, ptr, depth, integersAsBigInt) {
  let res = [];
  let c5;
  ptr++;
  while ((c5 = str[ptr++]) !== "]" && c5) {
    if (c5 === ",") {
      throw new TomlError("expected value, found comma", {
        toml: str,
        ptr: ptr - 1
      });
    } else if (c5 === "#") ptr = skipComment(str, ptr);
    else if (c5 !== " " && c5 !== "	" && c5 !== "\n" && c5 !== "\r") {
      let e4 = extractValue(str, ptr - 1, "]", depth - 1, integersAsBigInt);
      res.push(e4[0]);
      ptr = e4[1];
    }
  }
  if (!c5) {
    throw new TomlError("unfinished array encountered", {
      toml: str,
      ptr
    });
  }
  return [
    res,
    ptr
  ];
}

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/parse.js
function peekTable(key2, table, meta, type) {
  let t4 = table;
  let m4 = meta;
  let k4;
  let hasOwn = false;
  let state;
  for (let i6 = 0; i6 < key2.length; i6++) {
    if (i6) {
      t4 = hasOwn ? t4[k4] : t4[k4] = {};
      m4 = (state = m4[k4]).c;
      if (type === 0 && (state.t === 1 || state.t === 2)) {
        return null;
      }
      if (state.t === 2) {
        let l4 = t4.length - 1;
        t4 = t4[l4];
        m4 = m4[l4].c;
      }
    }
    k4 = key2[i6];
    if ((hasOwn = Object.hasOwn(t4, k4)) && m4[k4]?.t === 0 && m4[k4]?.d) {
      return null;
    }
    if (!hasOwn) {
      if (k4 === "__proto__") {
        Object.defineProperty(t4, k4, {
          enumerable: true,
          configurable: true,
          writable: true
        });
        Object.defineProperty(m4, k4, {
          enumerable: true,
          configurable: true,
          writable: true
        });
      }
      m4[k4] = {
        t: i6 < key2.length - 1 && type === 2 ? 3 : type,
        d: false,
        i: 0,
        c: {}
      };
    }
  }
  state = m4[k4];
  if (state.t !== type && !(type === 1 && state.t === 3)) {
    return null;
  }
  if (type === 2) {
    if (!state.d) {
      state.d = true;
      t4[k4] = [];
    }
    t4[k4].push(t4 = {});
    state.c[state.i++] = state = {
      t: 1,
      d: false,
      i: 0,
      c: {}
    };
  }
  if (state.d) {
    return null;
  }
  state.d = true;
  if (type === 1) {
    t4 = hasOwn ? t4[k4] : t4[k4] = {};
  } else if (type === 0 && hasOwn) {
    return null;
  }
  return [
    k4,
    t4,
    state.c
  ];
}
function parse(toml, { maxDepth = 1e3, integersAsBigInt } = {}) {
  let res = {};
  let meta = {};
  let tbl = res;
  let m4 = meta;
  for (let ptr = skipVoid(toml, 0); ptr < toml.length; ) {
    if (toml[ptr] === "[") {
      let isTableArray = toml[++ptr] === "[";
      let k4 = parseKey(toml, ptr += +isTableArray, "]");
      if (isTableArray) {
        if (toml[k4[1] - 1] !== "]") {
          throw new TomlError("expected end of table declaration", {
            toml,
            ptr: k4[1] - 1
          });
        }
        k4[1]++;
      }
      let p7 = peekTable(
        k4[0],
        res,
        meta,
        isTableArray ? 2 : 1
        /* Type.EXPLICIT */
      );
      if (!p7) {
        throw new TomlError("trying to redefine an already defined table or value", {
          toml,
          ptr
        });
      }
      m4 = p7[2];
      tbl = p7[1];
      ptr = k4[1];
    } else {
      let k4 = parseKey(toml, ptr);
      let p7 = peekTable(
        k4[0],
        tbl,
        m4,
        0
        /* Type.DOTTED */
      );
      if (!p7) {
        throw new TomlError("trying to redefine an already defined table or value", {
          toml,
          ptr
        });
      }
      let v4 = extractValue(toml, k4[1], void 0, maxDepth, integersAsBigInt);
      p7[1][p7[0]] = v4[0];
      ptr = v4[1];
    }
    ptr = skipVoid(toml, ptr, true);
    if (toml[ptr] && toml[ptr] !== "\n" && toml[ptr] !== "\r") {
      throw new TomlError("each key-value declaration must be followed by an end-of-line", {
        toml,
        ptr
      });
    }
    ptr = skipVoid(toml, ptr);
  }
  return res;
}

// node_modules/.deno/smol-toml@1.4.2/node_modules/smol-toml/dist/stringify.js
var BARE_KEY = /^[a-z0-9-_]+$/i;
function extendedTypeOf(obj) {
  let type = typeof obj;
  if (type === "object") {
    if (Array.isArray(obj)) return "array";
    if (obj instanceof Date) return "date";
  }
  return type;
}
function isArrayOfTables(obj) {
  for (let i6 = 0; i6 < obj.length; i6++) {
    if (extendedTypeOf(obj[i6]) !== "object") return false;
  }
  return obj.length != 0;
}
function formatString(s4) {
  return JSON.stringify(s4).replace(/\x7f/g, "\\u007f");
}
function stringifyValue(val, type, depth, numberAsFloat) {
  if (depth === 0) {
    throw new Error("Could not stringify the object: maximum object depth exceeded");
  }
  if (type === "number") {
    if (isNaN(val)) return "nan";
    if (val === Infinity) return "inf";
    if (val === -Infinity) return "-inf";
    if (numberAsFloat && Number.isInteger(val)) return val.toFixed(1);
    return val.toString();
  }
  if (type === "bigint" || type === "boolean") {
    return val.toString();
  }
  if (type === "string") {
    return formatString(val);
  }
  if (type === "date") {
    if (isNaN(val.getTime())) {
      throw new TypeError("cannot serialize invalid date");
    }
    return val.toISOString();
  }
  if (type === "object") {
    return stringifyInlineTable(val, depth, numberAsFloat);
  }
  if (type === "array") {
    return stringifyArray(val, depth, numberAsFloat);
  }
}
function stringifyInlineTable(obj, depth, numberAsFloat) {
  let keys = Object.keys(obj);
  if (keys.length === 0) return "{}";
  let res = "{ ";
  for (let i6 = 0; i6 < keys.length; i6++) {
    let k4 = keys[i6];
    if (i6) res += ", ";
    res += BARE_KEY.test(k4) ? k4 : formatString(k4);
    res += " = ";
    res += stringifyValue(obj[k4], extendedTypeOf(obj[k4]), depth - 1, numberAsFloat);
  }
  return res + " }";
}
function stringifyArray(array, depth, numberAsFloat) {
  if (array.length === 0) return "[]";
  let res = "[ ";
  for (let i6 = 0; i6 < array.length; i6++) {
    if (i6) res += ", ";
    if (array[i6] === null || array[i6] === void 0) {
      throw new TypeError("arrays cannot contain null or undefined values");
    }
    res += stringifyValue(array[i6], extendedTypeOf(array[i6]), depth - 1, numberAsFloat);
  }
  return res + " ]";
}
function stringifyArrayTable(array, key2, depth, numberAsFloat) {
  if (depth === 0) {
    throw new Error("Could not stringify the object: maximum object depth exceeded");
  }
  let res = "";
  for (let i6 = 0; i6 < array.length; i6++) {
    res += `[[${key2}]]
`;
    res += stringifyTable(array[i6], key2, depth, numberAsFloat);
    res += "\n\n";
  }
  return res;
}
function stringifyTable(obj, prefix, depth, numberAsFloat) {
  if (depth === 0) {
    throw new Error("Could not stringify the object: maximum object depth exceeded");
  }
  let preamble = "";
  let tables = "";
  let keys = Object.keys(obj);
  for (let i6 = 0; i6 < keys.length; i6++) {
    let k4 = keys[i6];
    if (obj[k4] !== null && obj[k4] !== void 0) {
      let type = extendedTypeOf(obj[k4]);
      if (type === "symbol" || type === "function") {
        throw new TypeError(`cannot serialize values of type '${type}'`);
      }
      let key2 = BARE_KEY.test(k4) ? k4 : formatString(k4);
      if (type === "array" && isArrayOfTables(obj[k4])) {
        tables += stringifyArrayTable(obj[k4], prefix ? `${prefix}.${key2}` : key2, depth - 1, numberAsFloat);
      } else if (type === "object") {
        let tblKey = prefix ? `${prefix}.${key2}` : key2;
        tables += `[${tblKey}]
`;
        tables += stringifyTable(obj[k4], tblKey, depth - 1, numberAsFloat);
        tables += "\n\n";
      } else {
        preamble += key2;
        preamble += " = ";
        preamble += stringifyValue(obj[k4], type, depth, numberAsFloat);
        preamble += "\n";
      }
    }
  }
  return `${preamble}
${tables}`.trim();
}
function stringify4(obj, { maxDepth = 1e3, numbersAsFloat = false } = {}) {
  if (extendedTypeOf(obj) !== "object") {
    throw new TypeError("stringify can only be called with an object");
  }
  return stringifyTable(obj, "", maxDepth, numbersAsFloat);
}

// node_modules/.deno/tailwind-variants@3.1.1/node_modules/tailwind-variants/dist/chunk-GQLG7IS2.js
var y5 = /\s+/g;
var a4 = (t4) => typeof t4 != "string" || !t4 ? t4 : t4.replace(y5, " ").trim();
var u5 = (...t4) => {
  let r4 = [], n3 = (e4) => {
    if (!e4 && e4 !== 0 && e4 !== 0n) return;
    if (Array.isArray(e4)) {
      for (let s4 = 0, o4 = e4.length; s4 < o4; s4++) n3(e4[s4]);
      return;
    }
    let f6 = typeof e4;
    if (f6 === "string" || f6 === "number" || f6 === "bigint") {
      if (f6 === "number" && e4 !== e4) return;
      r4.push(String(e4));
    } else if (f6 === "object") {
      let s4 = Object.keys(e4);
      for (let o4 = 0, i6 = s4.length; o4 < i6; o4++) {
        let l4 = s4[o4];
        e4[l4] && r4.push(l4);
      }
    }
  };
  for (let e4 = 0, f6 = t4.length; e4 < f6; e4++) {
    let s4 = t4[e4];
    s4 != null && n3(s4);
  }
  return r4.length > 0 ? a4(r4.join(" ")) : void 0;
};
var h5 = (t4) => t4 === false ? "false" : t4 === true ? "true" : t4 === 0 ? "0" : t4;
var x4 = (t4) => {
  if (!t4 || typeof t4 != "object") return true;
  for (let r4 in t4) return false;
  return true;
};
var k3 = (t4, r4) => {
  if (t4 === r4) return true;
  if (!t4 || !r4) return false;
  let n3 = Object.keys(t4), e4 = Object.keys(r4);
  if (n3.length !== e4.length) return false;
  for (let f6 = 0; f6 < n3.length; f6++) {
    let s4 = n3[f6];
    if (!e4.includes(s4) || t4[s4] !== r4[s4]) return false;
  }
  return true;
};
var d4 = (t4, r4) => {
  for (let n3 in r4) if (Object.prototype.hasOwnProperty.call(r4, n3)) {
    let e4 = r4[n3];
    n3 in t4 ? t4[n3] = u5(t4[n3], e4) : t4[n3] = e4;
  }
  return t4;
};
var c4 = (t4, r4) => {
  for (let n3 = 0; n3 < t4.length; n3++) {
    let e4 = t4[n3];
    Array.isArray(e4) ? c4(e4, r4) : e4 && r4.push(e4);
  }
};
var g6 = (...t4) => {
  let r4 = [];
  c4(t4, r4);
  let n3 = [];
  for (let e4 = 0; e4 < r4.length; e4++) r4[e4] && n3.push(r4[e4]);
  return n3;
};
var p6 = (t4, r4) => {
  let n3 = {};
  for (let e4 in t4) {
    let f6 = t4[e4];
    if (e4 in r4) {
      let s4 = r4[e4];
      Array.isArray(f6) || Array.isArray(s4) ? n3[e4] = g6(s4, f6) : typeof f6 == "object" && typeof s4 == "object" && f6 && s4 ? n3[e4] = p6(f6, s4) : n3[e4] = s4 + " " + f6;
    } else n3[e4] = f6;
  }
  for (let e4 in r4) e4 in t4 || (n3[e4] = r4[e4]);
  return n3;
};

// node_modules/.deno/tailwind-variants@3.1.1/node_modules/tailwind-variants/dist/chunk-IFWU2MEM.js
var Q3 = {
  twMerge: true,
  twMergeConfig: {},
  responsiveVariants: false
};
function ne() {
  let b4 = null, w5 = {}, A4 = false;
  return {
    get cachedTwMerge() {
      return b4;
    },
    set cachedTwMerge(u6) {
      b4 = u6;
    },
    get cachedTwMergeConfig() {
      return w5;
    },
    set cachedTwMergeConfig(u6) {
      w5 = u6;
    },
    get didTwMergeConfigChange() {
      return A4;
    },
    set didTwMergeConfigChange(u6) {
      A4 = u6;
    },
    reset() {
      b4 = null, w5 = {}, A4 = false;
    }
  };
}
var S2 = ne();
var le = (b$1) => {
  let w5 = (u6, $2) => {
    let { extend: c$1 = null, slots: M2 = {}, variants: q5 = {}, compoundVariants: L2 = [], compoundSlots: v4 = [], defaultVariants: U2 = {} } = u6, d$1 = {
      ...Q3,
      ...$2
    }, x5 = c$1?.base ? u5(c$1.base, u6?.base) : u6?.base, p7 = c$1?.variants && !x4(c$1.variants) ? p6(q5, c$1.variants) : q5, E4 = c$1?.defaultVariants && !x4(c$1.defaultVariants) ? {
      ...c$1.defaultVariants,
      ...U2
    } : U2;
    !x4(d$1.twMergeConfig) && !k3(d$1.twMergeConfig, S2.cachedTwMergeConfig) && (S2.didTwMergeConfigChange = true, S2.cachedTwMergeConfig = d$1.twMergeConfig);
    let N3 = x4(c$1?.slots), O2 = x4(M2) ? {} : {
      base: u5(u6?.base, N3 && c$1?.base),
      ...M2
    }, j$1 = N3 ? O2 : d4({
      ...c$1?.slots
    }, x4(O2) ? {
      base: u6?.base
    } : O2), T5 = x4(c$1?.compoundVariants) ? L2 : g6(c$1?.compoundVariants, L2), y6 = (h6) => {
      if (x4(p7) && x4(M2) && N3) return b$1(x5, h6?.class, h6?.className)(d$1);
      if (T5 && !Array.isArray(T5)) throw new TypeError(`The "compoundVariants" prop must be an array. Received: ${typeof T5}`);
      if (v4 && !Array.isArray(v4)) throw new TypeError(`The "compoundSlots" prop must be an array. Received: ${typeof v4}`);
      let Y = (t4, e4, n3 = [], a$1) => {
        let r4 = n3;
        if (typeof e4 == "string") {
          let i6 = a4(e4).split(" ");
          for (let l4 = 0; l4 < i6.length; l4++) r4.push(`${t4}:${i6[l4]}`);
        } else if (Array.isArray(e4)) for (let s4 = 0; s4 < e4.length; s4++) r4.push(`${t4}:${e4[s4]}`);
        else if (typeof e4 == "object" && typeof a$1 == "string" && a$1 in e4) {
          let s4 = e4[a$1];
          if (s4 && typeof s4 == "string") {
            let l4 = a4(s4).split(" "), f6 = [];
            for (let o4 = 0; o4 < l4.length; o4++) f6.push(`${t4}:${l4[o4]}`);
            r4[a$1] = r4[a$1] ? r4[a$1].concat(f6) : f6;
          } else if (Array.isArray(s4) && s4.length > 0) {
            let i6 = [];
            for (let l4 = 0; l4 < s4.length; l4++) i6.push(`${t4}:${s4[l4]}`);
            r4[a$1] = i6;
          }
        }
        return r4;
      }, W2 = (t4, e4 = p7, n3 = null, a5 = null) => {
        let r4 = e4[t4];
        if (!r4 || x4(r4)) return null;
        let s4 = a5?.[t4] ?? h6?.[t4];
        if (s4 === null) return null;
        let i6 = h5(s4), l4 = Array.isArray(d$1.responsiveVariants) && d$1.responsiveVariants.length > 0 || d$1.responsiveVariants === true, f6 = E4?.[t4], o4 = [];
        if (typeof i6 == "object" && l4) for (let [C4, H3] of Object.entries(i6)) {
          let te = r4[H3];
          if (C4 === "initial") {
            f6 = H3;
            continue;
          }
          Array.isArray(d$1.responsiveVariants) && !d$1.responsiveVariants.includes(C4) || (o4 = Y(C4, te, o4, n3));
        }
        let V3 = i6 != null && typeof i6 != "object" ? i6 : h5(f6), m4 = r4[V3 || "false"];
        return typeof o4 == "object" && typeof n3 == "string" && o4[n3] ? d4(o4, m4) : o4.length > 0 ? (o4.push(m4), n3 === "base" ? o4.join(" ") : o4) : m4;
      }, Z = () => {
        if (!p7) return null;
        let t4 = Object.keys(p7), e4 = [];
        for (let n3 = 0; n3 < t4.length; n3++) {
          let a5 = W2(t4[n3], p7);
          a5 && e4.push(a5);
        }
        return e4;
      }, _5 = (t4, e4) => {
        if (!p7 || typeof p7 != "object") return null;
        let n3 = [];
        for (let a5 in p7) {
          let r4 = W2(a5, p7, t4, e4), s4 = t4 === "base" && typeof r4 == "string" ? r4 : r4 && r4[t4];
          s4 && n3.push(s4);
        }
        return n3;
      }, z3 = {};
      for (let t4 in h6) {
        let e4 = h6[t4];
        e4 !== void 0 && (z3[t4] = e4);
      }
      let D4 = (t4, e4) => {
        let n3 = typeof h6?.[t4] == "object" ? {
          [t4]: h6[t4]?.initial
        } : {};
        return {
          ...E4,
          ...z3,
          ...n3,
          ...e4
        };
      }, G3 = (t4 = [], e4) => {
        let n3 = [], a5 = t4.length;
        for (let r4 = 0; r4 < a5; r4++) {
          let { class: s4, className: i6, ...l4 } = t4[r4], f6 = true, o4 = D4(null, e4);
          for (let V3 in l4) {
            let m4 = l4[V3], C4 = o4[V3];
            if (Array.isArray(m4)) {
              if (!m4.includes(C4)) {
                f6 = false;
                break;
              }
            } else {
              if ((m4 == null || m4 === false) && (C4 == null || C4 === false)) continue;
              if (C4 !== m4) {
                f6 = false;
                break;
              }
            }
          }
          f6 && (s4 && n3.push(s4), i6 && n3.push(i6));
        }
        return n3;
      }, K3 = (t4) => {
        let e4 = G3(T5, t4);
        if (!Array.isArray(e4)) return e4;
        let n3 = {}, a5 = b$1;
        for (let r4 = 0; r4 < e4.length; r4++) {
          let s4 = e4[r4];
          if (typeof s4 == "string") n3.base = a5(n3.base, s4)(d$1);
          else if (typeof s4 == "object") for (let i6 in s4) n3[i6] = a5(n3[i6], s4[i6])(d$1);
        }
        return n3;
      }, ee = (t4) => {
        if (v4.length < 1) return null;
        let e4 = {}, n3 = D4(null, t4);
        for (let a5 = 0; a5 < v4.length; a5++) {
          let { slots: r4 = [], class: s4, className: i6, ...l4 } = v4[a5];
          if (!x4(l4)) {
            let f6 = true;
            for (let o4 in l4) {
              let V3 = n3[o4], m4 = l4[o4];
              if (V3 === void 0 || (Array.isArray(m4) ? !m4.includes(V3) : m4 !== V3)) {
                f6 = false;
                break;
              }
            }
            if (!f6) continue;
          }
          for (let f6 = 0; f6 < r4.length; f6++) {
            let o4 = r4[f6];
            e4[o4] || (e4[o4] = []), e4[o4].push([
              s4,
              i6
            ]);
          }
        }
        return e4;
      };
      if (!x4(M2) || !N3) {
        let t4 = {};
        if (typeof j$1 == "object" && !x4(j$1)) {
          let e4 = b$1;
          for (let n3 in j$1) t4[n3] = (a5) => {
            let r4 = K3(a5), s4 = ee(a5);
            return e4(j$1[n3], _5(n3, a5), r4 ? r4[n3] : void 0, s4 ? s4[n3] : void 0, a5?.class, a5?.className)(d$1);
          };
        }
        return t4;
      }
      return b$1(x5, Z(), G3(T5), h6?.class, h6?.className)(d$1);
    }, X2 = () => {
      if (!(!p7 || typeof p7 != "object")) return Object.keys(p7);
    };
    return y6.variantKeys = X2(), y6.extend = c$1, y6.base = x5, y6.slots = j$1, y6.variants = p7, y6.defaultVariants = E4, y6.compoundSlots = v4, y6.compoundVariants = T5, y6;
  };
  return {
    tv: w5,
    createTV: (u6) => ($2, c5) => w5($2, c5 ? p6(u6, c5) : u6)
  };
};

// node_modules/.deno/tailwind-merge@3.3.1/node_modules/tailwind-merge/dist/bundle-mjs.mjs
var CLASS_PART_SEPARATOR = "-";
var createClassGroupUtils = (config) => {
  const classMap = createClassMap(config);
  const { conflictingClassGroups, conflictingClassGroupModifiers } = config;
  const getClassGroupId = (className) => {
    const classParts = className.split(CLASS_PART_SEPARATOR);
    if (classParts[0] === "" && classParts.length !== 1) {
      classParts.shift();
    }
    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
  };
  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {
    const conflicts = conflictingClassGroups[classGroupId] || [];
    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {
      return [
        ...conflicts,
        ...conflictingClassGroupModifiers[classGroupId]
      ];
    }
    return conflicts;
  };
  return {
    getClassGroupId,
    getConflictingClassGroupIds
  };
};
var getGroupRecursive = (classParts, classPartObject) => {
  if (classParts.length === 0) {
    return classPartObject.classGroupId;
  }
  const currentClassPart = classParts[0];
  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);
  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : void 0;
  if (classGroupFromNextClassPart) {
    return classGroupFromNextClassPart;
  }
  if (classPartObject.validators.length === 0) {
    return void 0;
  }
  const classRest = classParts.join(CLASS_PART_SEPARATOR);
  return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId;
};
var arbitraryPropertyRegex = /^\[(.+)\]$/;
var getGroupIdForArbitraryProperty = (className) => {
  if (arbitraryPropertyRegex.test(className)) {
    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];
    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(":"));
    if (property) {
      return "arbitrary.." + property;
    }
  }
};
var createClassMap = (config) => {
  const { theme, classGroups } = config;
  const classMap = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  for (const classGroupId in classGroups) {
    processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);
  }
  return classMap;
};
var processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {
  classGroup.forEach((classDefinition) => {
    if (typeof classDefinition === "string") {
      const classPartObjectToEdit = classDefinition === "" ? classPartObject : getPart(classPartObject, classDefinition);
      classPartObjectToEdit.classGroupId = classGroupId;
      return;
    }
    if (typeof classDefinition === "function") {
      if (isThemeGetter(classDefinition)) {
        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
        return;
      }
      classPartObject.validators.push({
        validator: classDefinition,
        classGroupId
      });
      return;
    }
    Object.entries(classDefinition).forEach(([key2, classGroup2]) => {
      processClassesRecursively(classGroup2, getPart(classPartObject, key2), classGroupId, theme);
    });
  });
};
var getPart = (classPartObject, path) => {
  let currentClassPartObject = classPartObject;
  path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {
    if (!currentClassPartObject.nextPart.has(pathPart)) {
      currentClassPartObject.nextPart.set(pathPart, {
        nextPart: /* @__PURE__ */ new Map(),
        validators: []
      });
    }
    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
  });
  return currentClassPartObject;
};
var isThemeGetter = (func) => func.isThemeGetter;
var createLruCache = (maxCacheSize) => {
  if (maxCacheSize < 1) {
    return {
      get: () => void 0,
      set: () => {
      }
    };
  }
  let cacheSize = 0;
  let cache2 = /* @__PURE__ */ new Map();
  let previousCache = /* @__PURE__ */ new Map();
  const update = (key2, value) => {
    cache2.set(key2, value);
    cacheSize++;
    if (cacheSize > maxCacheSize) {
      cacheSize = 0;
      previousCache = cache2;
      cache2 = /* @__PURE__ */ new Map();
    }
  };
  return {
    get(key2) {
      let value = cache2.get(key2);
      if (value !== void 0) {
        return value;
      }
      if ((value = previousCache.get(key2)) !== void 0) {
        update(key2, value);
        return value;
      }
    },
    set(key2, value) {
      if (cache2.has(key2)) {
        cache2.set(key2, value);
      } else {
        update(key2, value);
      }
    }
  };
};
var IMPORTANT_MODIFIER = "!";
var MODIFIER_SEPARATOR = ":";
var MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;
var createParseClassName = (config) => {
  const { prefix, experimentalParseClassName } = config;
  let parseClassName = (className) => {
    const modifiers = [];
    let bracketDepth = 0;
    let parenDepth = 0;
    let modifierStart = 0;
    let postfixModifierPosition;
    for (let index = 0; index < className.length; index++) {
      let currentCharacter = className[index];
      if (bracketDepth === 0 && parenDepth === 0) {
        if (currentCharacter === MODIFIER_SEPARATOR) {
          modifiers.push(className.slice(modifierStart, index));
          modifierStart = index + MODIFIER_SEPARATOR_LENGTH;
          continue;
        }
        if (currentCharacter === "/") {
          postfixModifierPosition = index;
          continue;
        }
      }
      if (currentCharacter === "[") {
        bracketDepth++;
      } else if (currentCharacter === "]") {
        bracketDepth--;
      } else if (currentCharacter === "(") {
        parenDepth++;
      } else if (currentCharacter === ")") {
        parenDepth--;
      }
    }
    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);
    const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);
    const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;
    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : void 0;
    return {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    };
  };
  if (prefix) {
    const fullPrefix = prefix + MODIFIER_SEPARATOR;
    const parseClassNameOriginal = parseClassName;
    parseClassName = (className) => className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {
      isExternal: true,
      modifiers: [],
      hasImportantModifier: false,
      baseClassName: className,
      maybePostfixModifierPosition: void 0
    };
  }
  if (experimentalParseClassName) {
    const parseClassNameOriginal = parseClassName;
    parseClassName = (className) => experimentalParseClassName({
      className,
      parseClassName: parseClassNameOriginal
    });
  }
  return parseClassName;
};
var stripImportantModifier = (baseClassName) => {
  if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {
    return baseClassName.substring(0, baseClassName.length - 1);
  }
  if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {
    return baseClassName.substring(1);
  }
  return baseClassName;
};
var createSortModifiers = (config) => {
  const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map((modifier) => [
    modifier,
    true
  ]));
  const sortModifiers = (modifiers) => {
    if (modifiers.length <= 1) {
      return modifiers;
    }
    const sortedModifiers = [];
    let unsortedModifiers = [];
    modifiers.forEach((modifier) => {
      const isPositionSensitive = modifier[0] === "[" || orderSensitiveModifiers[modifier];
      if (isPositionSensitive) {
        sortedModifiers.push(...unsortedModifiers.sort(), modifier);
        unsortedModifiers = [];
      } else {
        unsortedModifiers.push(modifier);
      }
    });
    sortedModifiers.push(...unsortedModifiers.sort());
    return sortedModifiers;
  };
  return sortModifiers;
};
var createConfigUtils = (config) => ({
  cache: createLruCache(config.cacheSize),
  parseClassName: createParseClassName(config),
  sortModifiers: createSortModifiers(config),
  ...createClassGroupUtils(config)
});
var SPLIT_CLASSES_REGEX = /\s+/;
var mergeClassList = (classList, configUtils) => {
  const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } = configUtils;
  const classGroupsInConflict = [];
  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);
  let result = "";
  for (let index = classNames.length - 1; index >= 0; index -= 1) {
    const originalClassName = classNames[index];
    const { isExternal, modifiers, hasImportantModifier, baseClassName, maybePostfixModifierPosition } = parseClassName(originalClassName);
    if (isExternal) {
      result = originalClassName + (result.length > 0 ? " " + result : result);
      continue;
    }
    let hasPostfixModifier = !!maybePostfixModifierPosition;
    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);
    if (!classGroupId) {
      if (!hasPostfixModifier) {
        result = originalClassName + (result.length > 0 ? " " + result : result);
        continue;
      }
      classGroupId = getClassGroupId(baseClassName);
      if (!classGroupId) {
        result = originalClassName + (result.length > 0 ? " " + result : result);
        continue;
      }
      hasPostfixModifier = false;
    }
    const variantModifier = sortModifiers(modifiers).join(":");
    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
    const classId = modifierId + classGroupId;
    if (classGroupsInConflict.includes(classId)) {
      continue;
    }
    classGroupsInConflict.push(classId);
    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);
    for (let i6 = 0; i6 < conflictGroups.length; ++i6) {
      const group = conflictGroups[i6];
      classGroupsInConflict.push(modifierId + group);
    }
    result = originalClassName + (result.length > 0 ? " " + result : result);
  }
  return result;
};
function twJoin() {
  let index = 0;
  let argument;
  let resolvedValue;
  let string = "";
  while (index < arguments.length) {
    if (argument = arguments[index++]) {
      if (resolvedValue = toValue(argument)) {
        string && (string += " ");
        string += resolvedValue;
      }
    }
  }
  return string;
}
var toValue = (mix) => {
  if (typeof mix === "string") {
    return mix;
  }
  let resolvedValue;
  let string = "";
  for (let k4 = 0; k4 < mix.length; k4++) {
    if (mix[k4]) {
      if (resolvedValue = toValue(mix[k4])) {
        string && (string += " ");
        string += resolvedValue;
      }
    }
  }
  return string;
};
function createTailwindMerge(createConfigFirst, ...createConfigRest) {
  let configUtils;
  let cacheGet;
  let cacheSet;
  let functionToCall = initTailwindMerge;
  function initTailwindMerge(classList) {
    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());
    configUtils = createConfigUtils(config);
    cacheGet = configUtils.cache.get;
    cacheSet = configUtils.cache.set;
    functionToCall = tailwindMerge;
    return tailwindMerge(classList);
  }
  function tailwindMerge(classList) {
    const cachedResult = cacheGet(classList);
    if (cachedResult) {
      return cachedResult;
    }
    const result = mergeClassList(classList, configUtils);
    cacheSet(classList, result);
    return result;
  }
  return function callTailwindMerge() {
    return functionToCall(twJoin.apply(null, arguments));
  };
}
var fromTheme = (key2) => {
  const themeGetter = (theme) => theme[key2] || [];
  themeGetter.isThemeGetter = true;
  return themeGetter;
};
var arbitraryValueRegex = /^\[(?:(\w[\w-]*):)?(.+)\]$/i;
var arbitraryVariableRegex = /^\((?:(\w[\w-]*):)?(.+)\)$/i;
var fractionRegex = /^\d+\/\d+$/;
var tshirtUnitRegex = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/;
var lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/;
var colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\(.+\)$/;
var shadowRegex = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
var imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
var isFraction = (value) => fractionRegex.test(value);
var isNumber = (value) => !!value && !Number.isNaN(Number(value));
var isInteger = (value) => !!value && Number.isInteger(Number(value));
var isPercent = (value) => value.endsWith("%") && isNumber(value.slice(0, -1));
var isTshirtSize = (value) => tshirtUnitRegex.test(value);
var isAny = () => true;
var isLengthOnly = (value) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)
);
var isNever = () => false;
var isShadow = (value) => shadowRegex.test(value);
var isImage = (value) => imageRegex.test(value);
var isAnyNonArbitrary = (value) => !isArbitraryValue(value) && !isArbitraryVariable(value);
var isArbitrarySize = (value) => getIsArbitraryValue(value, isLabelSize, isNever);
var isArbitraryValue = (value) => arbitraryValueRegex.test(value);
var isArbitraryLength = (value) => getIsArbitraryValue(value, isLabelLength, isLengthOnly);
var isArbitraryNumber = (value) => getIsArbitraryValue(value, isLabelNumber, isNumber);
var isArbitraryPosition = (value) => getIsArbitraryValue(value, isLabelPosition, isNever);
var isArbitraryImage = (value) => getIsArbitraryValue(value, isLabelImage, isImage);
var isArbitraryShadow = (value) => getIsArbitraryValue(value, isLabelShadow, isShadow);
var isArbitraryVariable = (value) => arbitraryVariableRegex.test(value);
var isArbitraryVariableLength = (value) => getIsArbitraryVariable(value, isLabelLength);
var isArbitraryVariableFamilyName = (value) => getIsArbitraryVariable(value, isLabelFamilyName);
var isArbitraryVariablePosition = (value) => getIsArbitraryVariable(value, isLabelPosition);
var isArbitraryVariableSize = (value) => getIsArbitraryVariable(value, isLabelSize);
var isArbitraryVariableImage = (value) => getIsArbitraryVariable(value, isLabelImage);
var isArbitraryVariableShadow = (value) => getIsArbitraryVariable(value, isLabelShadow, true);
var getIsArbitraryValue = (value, testLabel, testValue) => {
  const result = arbitraryValueRegex.exec(value);
  if (result) {
    if (result[1]) {
      return testLabel(result[1]);
    }
    return testValue(result[2]);
  }
  return false;
};
var getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false) => {
  const result = arbitraryVariableRegex.exec(value);
  if (result) {
    if (result[1]) {
      return testLabel(result[1]);
    }
    return shouldMatchNoLabel;
  }
  return false;
};
var isLabelPosition = (label) => label === "position" || label === "percentage";
var isLabelImage = (label) => label === "image" || label === "url";
var isLabelSize = (label) => label === "length" || label === "size" || label === "bg-size";
var isLabelLength = (label) => label === "length";
var isLabelNumber = (label) => label === "number";
var isLabelFamilyName = (label) => label === "family-name";
var isLabelShadow = (label) => label === "shadow";
var getDefaultConfig = () => {
  const themeColor = fromTheme("color");
  const themeFont = fromTheme("font");
  const themeText = fromTheme("text");
  const themeFontWeight = fromTheme("font-weight");
  const themeTracking = fromTheme("tracking");
  const themeLeading = fromTheme("leading");
  const themeBreakpoint = fromTheme("breakpoint");
  const themeContainer = fromTheme("container");
  const themeSpacing = fromTheme("spacing");
  const themeRadius = fromTheme("radius");
  const themeShadow = fromTheme("shadow");
  const themeInsetShadow = fromTheme("inset-shadow");
  const themeTextShadow = fromTheme("text-shadow");
  const themeDropShadow = fromTheme("drop-shadow");
  const themeBlur = fromTheme("blur");
  const themePerspective = fromTheme("perspective");
  const themeAspect = fromTheme("aspect");
  const themeEase = fromTheme("ease");
  const themeAnimate = fromTheme("animate");
  const scaleBreak = () => [
    "auto",
    "avoid",
    "all",
    "avoid-page",
    "page",
    "left",
    "right",
    "column"
  ];
  const scalePosition = () => [
    "center",
    "top",
    "bottom",
    "left",
    "right",
    "top-left",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "left-top",
    "top-right",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "right-top",
    "bottom-right",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "right-bottom",
    "bottom-left",
    // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
    "left-bottom"
  ];
  const scalePositionWithArbitrary = () => [
    ...scalePosition(),
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleOverflow = () => [
    "auto",
    "hidden",
    "clip",
    "visible",
    "scroll"
  ];
  const scaleOverscroll = () => [
    "auto",
    "contain",
    "none"
  ];
  const scaleUnambiguousSpacing = () => [
    isArbitraryVariable,
    isArbitraryValue,
    themeSpacing
  ];
  const scaleInset = () => [
    isFraction,
    "full",
    "auto",
    ...scaleUnambiguousSpacing()
  ];
  const scaleGridTemplateColsRows = () => [
    isInteger,
    "none",
    "subgrid",
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleGridColRowStartAndEnd = () => [
    "auto",
    {
      span: [
        "full",
        isInteger,
        isArbitraryVariable,
        isArbitraryValue
      ]
    },
    isInteger,
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleGridColRowStartOrEnd = () => [
    isInteger,
    "auto",
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleGridAutoColsRows = () => [
    "auto",
    "min",
    "max",
    "fr",
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleAlignPrimaryAxis = () => [
    "start",
    "end",
    "center",
    "between",
    "around",
    "evenly",
    "stretch",
    "baseline",
    "center-safe",
    "end-safe"
  ];
  const scaleAlignSecondaryAxis = () => [
    "start",
    "end",
    "center",
    "stretch",
    "center-safe",
    "end-safe"
  ];
  const scaleMargin = () => [
    "auto",
    ...scaleUnambiguousSpacing()
  ];
  const scaleSizing = () => [
    isFraction,
    "auto",
    "full",
    "dvw",
    "dvh",
    "lvw",
    "lvh",
    "svw",
    "svh",
    "min",
    "max",
    "fit",
    ...scaleUnambiguousSpacing()
  ];
  const scaleColor = () => [
    themeColor,
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleBgPosition = () => [
    ...scalePosition(),
    isArbitraryVariablePosition,
    isArbitraryPosition,
    {
      position: [
        isArbitraryVariable,
        isArbitraryValue
      ]
    }
  ];
  const scaleBgRepeat = () => [
    "no-repeat",
    {
      repeat: [
        "",
        "x",
        "y",
        "space",
        "round"
      ]
    }
  ];
  const scaleBgSize = () => [
    "auto",
    "cover",
    "contain",
    isArbitraryVariableSize,
    isArbitrarySize,
    {
      size: [
        isArbitraryVariable,
        isArbitraryValue
      ]
    }
  ];
  const scaleGradientStopPosition = () => [
    isPercent,
    isArbitraryVariableLength,
    isArbitraryLength
  ];
  const scaleRadius = () => [
    // Deprecated since Tailwind CSS v4.0.0
    "",
    "none",
    "full",
    themeRadius,
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleBorderWidth = () => [
    "",
    isNumber,
    isArbitraryVariableLength,
    isArbitraryLength
  ];
  const scaleLineStyle = () => [
    "solid",
    "dashed",
    "dotted",
    "double"
  ];
  const scaleBlendMode = () => [
    "normal",
    "multiply",
    "screen",
    "overlay",
    "darken",
    "lighten",
    "color-dodge",
    "color-burn",
    "hard-light",
    "soft-light",
    "difference",
    "exclusion",
    "hue",
    "saturation",
    "color",
    "luminosity"
  ];
  const scaleMaskImagePosition = () => [
    isNumber,
    isPercent,
    isArbitraryVariablePosition,
    isArbitraryPosition
  ];
  const scaleBlur = () => [
    // Deprecated since Tailwind CSS v4.0.0
    "",
    "none",
    themeBlur,
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleRotate = () => [
    "none",
    isNumber,
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleScale = () => [
    "none",
    isNumber,
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleSkew = () => [
    isNumber,
    isArbitraryVariable,
    isArbitraryValue
  ];
  const scaleTranslate = () => [
    isFraction,
    "full",
    ...scaleUnambiguousSpacing()
  ];
  return {
    cacheSize: 500,
    theme: {
      animate: [
        "spin",
        "ping",
        "pulse",
        "bounce"
      ],
      aspect: [
        "video"
      ],
      blur: [
        isTshirtSize
      ],
      breakpoint: [
        isTshirtSize
      ],
      color: [
        isAny
      ],
      container: [
        isTshirtSize
      ],
      "drop-shadow": [
        isTshirtSize
      ],
      ease: [
        "in",
        "out",
        "in-out"
      ],
      font: [
        isAnyNonArbitrary
      ],
      "font-weight": [
        "thin",
        "extralight",
        "light",
        "normal",
        "medium",
        "semibold",
        "bold",
        "extrabold",
        "black"
      ],
      "inset-shadow": [
        isTshirtSize
      ],
      leading: [
        "none",
        "tight",
        "snug",
        "normal",
        "relaxed",
        "loose"
      ],
      perspective: [
        "dramatic",
        "near",
        "normal",
        "midrange",
        "distant",
        "none"
      ],
      radius: [
        isTshirtSize
      ],
      shadow: [
        isTshirtSize
      ],
      spacing: [
        "px",
        isNumber
      ],
      text: [
        isTshirtSize
      ],
      "text-shadow": [
        isTshirtSize
      ],
      tracking: [
        "tighter",
        "tight",
        "normal",
        "wide",
        "wider",
        "widest"
      ]
    },
    classGroups: {
      // --------------
      // --- Layout ---
      // --------------
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [
        {
          aspect: [
            "auto",
            "square",
            isFraction,
            isArbitraryValue,
            isArbitraryVariable,
            themeAspect
          ]
        }
      ],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       * @deprecated since Tailwind CSS v4.0.0
       */
      container: [
        "container"
      ],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [
        {
          columns: [
            isNumber,
            isArbitraryValue,
            isArbitraryVariable,
            themeContainer
          ]
        }
      ],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [
        {
          "break-after": scaleBreak()
        }
      ],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [
        {
          "break-before": scaleBreak()
        }
      ],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [
        {
          "break-inside": [
            "auto",
            "avoid",
            "avoid-page",
            "avoid-column"
          ]
        }
      ],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [
        {
          "box-decoration": [
            "slice",
            "clone"
          ]
        }
      ],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [
        {
          box: [
            "border",
            "content"
          ]
        }
      ],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: [
        "block",
        "inline-block",
        "inline",
        "flex",
        "inline-flex",
        "table",
        "inline-table",
        "table-caption",
        "table-cell",
        "table-column",
        "table-column-group",
        "table-footer-group",
        "table-header-group",
        "table-row-group",
        "table-row",
        "flow-root",
        "grid",
        "inline-grid",
        "contents",
        "list-item",
        "hidden"
      ],
      /**
       * Screen Reader Only
       * @see https://tailwindcss.com/docs/display#screen-reader-only
       */
      sr: [
        "sr-only",
        "not-sr-only"
      ],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [
        {
          float: [
            "right",
            "left",
            "none",
            "start",
            "end"
          ]
        }
      ],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [
        {
          clear: [
            "left",
            "right",
            "both",
            "none",
            "start",
            "end"
          ]
        }
      ],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: [
        "isolate",
        "isolation-auto"
      ],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [
        {
          object: [
            "contain",
            "cover",
            "fill",
            "none",
            "scale-down"
          ]
        }
      ],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [
        {
          object: scalePositionWithArbitrary()
        }
      ],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [
        {
          overflow: scaleOverflow()
        }
      ],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [
        {
          "overflow-x": scaleOverflow()
        }
      ],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [
        {
          "overflow-y": scaleOverflow()
        }
      ],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [
        {
          overscroll: scaleOverscroll()
        }
      ],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [
        {
          "overscroll-x": scaleOverscroll()
        }
      ],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [
        {
          "overscroll-y": scaleOverscroll()
        }
      ],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: [
        "static",
        "fixed",
        "absolute",
        "relative",
        "sticky"
      ],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [
        {
          inset: scaleInset()
        }
      ],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [
        {
          "inset-x": scaleInset()
        }
      ],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [
        {
          "inset-y": scaleInset()
        }
      ],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [
        {
          start: scaleInset()
        }
      ],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [
        {
          end: scaleInset()
        }
      ],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [
        {
          top: scaleInset()
        }
      ],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [
        {
          right: scaleInset()
        }
      ],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [
        {
          bottom: scaleInset()
        }
      ],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [
        {
          left: scaleInset()
        }
      ],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: [
        "visible",
        "invisible",
        "collapse"
      ],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [
        {
          z: [
            isInteger,
            "auto",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      // ------------------------
      // --- Flexbox and Grid ---
      // ------------------------
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [
        {
          basis: [
            isFraction,
            "full",
            "auto",
            themeContainer,
            ...scaleUnambiguousSpacing()
          ]
        }
      ],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [
        {
          flex: [
            "row",
            "row-reverse",
            "col",
            "col-reverse"
          ]
        }
      ],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [
        {
          flex: [
            "nowrap",
            "wrap",
            "wrap-reverse"
          ]
        }
      ],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [
        {
          flex: [
            isNumber,
            isFraction,
            "auto",
            "initial",
            "none",
            isArbitraryValue
          ]
        }
      ],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [
        {
          grow: [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [
        {
          shrink: [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [
        {
          order: [
            isInteger,
            "first",
            "last",
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [
        {
          "grid-cols": scaleGridTemplateColsRows()
        }
      ],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [
        {
          col: scaleGridColRowStartAndEnd()
        }
      ],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [
        {
          "col-start": scaleGridColRowStartOrEnd()
        }
      ],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [
        {
          "col-end": scaleGridColRowStartOrEnd()
        }
      ],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [
        {
          "grid-rows": scaleGridTemplateColsRows()
        }
      ],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [
        {
          row: scaleGridColRowStartAndEnd()
        }
      ],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [
        {
          "row-start": scaleGridColRowStartOrEnd()
        }
      ],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [
        {
          "row-end": scaleGridColRowStartOrEnd()
        }
      ],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [
        {
          "grid-flow": [
            "row",
            "col",
            "dense",
            "row-dense",
            "col-dense"
          ]
        }
      ],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [
        {
          "auto-cols": scaleGridAutoColsRows()
        }
      ],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [
        {
          "auto-rows": scaleGridAutoColsRows()
        }
      ],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [
        {
          gap: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [
        {
          "gap-x": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [
        {
          "gap-y": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [
        {
          justify: [
            ...scaleAlignPrimaryAxis(),
            "normal"
          ]
        }
      ],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [
        {
          "justify-items": [
            ...scaleAlignSecondaryAxis(),
            "normal"
          ]
        }
      ],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [
        {
          "justify-self": [
            "auto",
            ...scaleAlignSecondaryAxis()
          ]
        }
      ],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [
        {
          content: [
            "normal",
            ...scaleAlignPrimaryAxis()
          ]
        }
      ],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [
        {
          items: [
            ...scaleAlignSecondaryAxis(),
            {
              baseline: [
                "",
                "last"
              ]
            }
          ]
        }
      ],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [
        {
          self: [
            "auto",
            ...scaleAlignSecondaryAxis(),
            {
              baseline: [
                "",
                "last"
              ]
            }
          ]
        }
      ],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [
        {
          "place-content": scaleAlignPrimaryAxis()
        }
      ],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [
        {
          "place-items": [
            ...scaleAlignSecondaryAxis(),
            "baseline"
          ]
        }
      ],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [
        {
          "place-self": [
            "auto",
            ...scaleAlignSecondaryAxis()
          ]
        }
      ],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [
        {
          p: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [
        {
          px: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [
        {
          py: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [
        {
          ps: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [
        {
          pe: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [
        {
          pt: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [
        {
          pr: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [
        {
          pb: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [
        {
          pl: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [
        {
          m: scaleMargin()
        }
      ],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [
        {
          mx: scaleMargin()
        }
      ],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [
        {
          my: scaleMargin()
        }
      ],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [
        {
          ms: scaleMargin()
        }
      ],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [
        {
          me: scaleMargin()
        }
      ],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [
        {
          mt: scaleMargin()
        }
      ],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [
        {
          mr: scaleMargin()
        }
      ],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [
        {
          mb: scaleMargin()
        }
      ],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [
        {
          ml: scaleMargin()
        }
      ],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-x": [
        {
          "space-x": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-x-reverse": [
        "space-x-reverse"
      ],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-y": [
        {
          "space-y": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */
      "space-y-reverse": [
        "space-y-reverse"
      ],
      // --------------
      // --- Sizing ---
      // --------------
      /**
       * Size
       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height
       */
      size: [
        {
          size: scaleSizing()
        }
      ],
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [
        {
          w: [
            themeContainer,
            "screen",
            ...scaleSizing()
          ]
        }
      ],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [
        {
          "min-w": [
            themeContainer,
            "screen",
            /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
            "none",
            ...scaleSizing()
          ]
        }
      ],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [
        {
          "max-w": [
            themeContainer,
            "screen",
            "none",
            /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
            "prose",
            /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
            {
              screen: [
                themeBreakpoint
              ]
            },
            ...scaleSizing()
          ]
        }
      ],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [
        {
          h: [
            "screen",
            "lh",
            ...scaleSizing()
          ]
        }
      ],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [
        {
          "min-h": [
            "screen",
            "lh",
            "none",
            ...scaleSizing()
          ]
        }
      ],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [
        {
          "max-h": [
            "screen",
            "lh",
            ...scaleSizing()
          ]
        }
      ],
      // ------------------
      // --- Typography ---
      // ------------------
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [
        {
          text: [
            "base",
            themeText,
            isArbitraryVariableLength,
            isArbitraryLength
          ]
        }
      ],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": [
        "antialiased",
        "subpixel-antialiased"
      ],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": [
        "italic",
        "not-italic"
      ],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [
        {
          font: [
            themeFontWeight,
            isArbitraryVariable,
            isArbitraryNumber
          ]
        }
      ],
      /**
       * Font Stretch
       * @see https://tailwindcss.com/docs/font-stretch
       */
      "font-stretch": [
        {
          "font-stretch": [
            "ultra-condensed",
            "extra-condensed",
            "condensed",
            "semi-condensed",
            "normal",
            "semi-expanded",
            "expanded",
            "extra-expanded",
            "ultra-expanded",
            isPercent,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [
        {
          font: [
            isArbitraryVariableFamilyName,
            isArbitraryValue,
            themeFont
          ]
        }
      ],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": [
        "normal-nums"
      ],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": [
        "ordinal"
      ],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": [
        "slashed-zero"
      ],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": [
        "lining-nums",
        "oldstyle-nums"
      ],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": [
        "proportional-nums",
        "tabular-nums"
      ],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": [
        "diagonal-fractions",
        "stacked-fractions"
      ],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [
        {
          tracking: [
            themeTracking,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [
        {
          "line-clamp": [
            isNumber,
            "none",
            isArbitraryVariable,
            isArbitraryNumber
          ]
        }
      ],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [
        {
          leading: [
            /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */
            themeLeading,
            ...scaleUnambiguousSpacing()
          ]
        }
      ],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [
        {
          "list-image": [
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [
        {
          list: [
            "inside",
            "outside"
          ]
        }
      ],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [
        {
          list: [
            "disc",
            "decimal",
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [
        {
          text: [
            "left",
            "center",
            "right",
            "justify",
            "start",
            "end"
          ]
        }
      ],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://v3.tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [
        {
          placeholder: scaleColor()
        }
      ],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [
        {
          text: scaleColor()
        }
      ],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": [
        "underline",
        "overline",
        "line-through",
        "no-underline"
      ],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [
        {
          decoration: [
            ...scaleLineStyle(),
            "wavy"
          ]
        }
      ],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [
        {
          decoration: [
            isNumber,
            "from-font",
            "auto",
            isArbitraryVariable,
            isArbitraryLength
          ]
        }
      ],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [
        {
          decoration: scaleColor()
        }
      ],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [
        {
          "underline-offset": [
            isNumber,
            "auto",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": [
        "uppercase",
        "lowercase",
        "capitalize",
        "normal-case"
      ],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": [
        "truncate",
        "text-ellipsis",
        "text-clip"
      ],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [
        {
          text: [
            "wrap",
            "nowrap",
            "balance",
            "pretty"
          ]
        }
      ],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [
        {
          indent: scaleUnambiguousSpacing()
        }
      ],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [
        {
          align: [
            "baseline",
            "top",
            "middle",
            "bottom",
            "text-top",
            "text-bottom",
            "sub",
            "super",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [
        {
          whitespace: [
            "normal",
            "nowrap",
            "pre",
            "pre-line",
            "pre-wrap",
            "break-spaces"
          ]
        }
      ],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [
        {
          break: [
            "normal",
            "words",
            "all",
            "keep"
          ]
        }
      ],
      /**
       * Overflow Wrap
       * @see https://tailwindcss.com/docs/overflow-wrap
       */
      wrap: [
        {
          wrap: [
            "break-word",
            "anywhere",
            "normal"
          ]
        }
      ],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [
        {
          hyphens: [
            "none",
            "manual",
            "auto"
          ]
        }
      ],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [
        {
          content: [
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      // -------------------
      // --- Backgrounds ---
      // -------------------
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [
        {
          bg: [
            "fixed",
            "local",
            "scroll"
          ]
        }
      ],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [
        {
          "bg-clip": [
            "border",
            "padding",
            "content",
            "text"
          ]
        }
      ],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [
        {
          "bg-origin": [
            "border",
            "padding",
            "content"
          ]
        }
      ],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [
        {
          bg: scaleBgPosition()
        }
      ],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [
        {
          bg: scaleBgRepeat()
        }
      ],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [
        {
          bg: scaleBgSize()
        }
      ],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [
        {
          bg: [
            "none",
            {
              linear: [
                {
                  to: [
                    "t",
                    "tr",
                    "r",
                    "br",
                    "b",
                    "bl",
                    "l",
                    "tl"
                  ]
                },
                isInteger,
                isArbitraryVariable,
                isArbitraryValue
              ],
              radial: [
                "",
                isArbitraryVariable,
                isArbitraryValue
              ],
              conic: [
                isInteger,
                isArbitraryVariable,
                isArbitraryValue
              ]
            },
            isArbitraryVariableImage,
            isArbitraryImage
          ]
        }
      ],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [
        {
          bg: scaleColor()
        }
      ],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [
        {
          from: scaleGradientStopPosition()
        }
      ],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [
        {
          via: scaleGradientStopPosition()
        }
      ],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [
        {
          to: scaleGradientStopPosition()
        }
      ],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [
        {
          from: scaleColor()
        }
      ],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [
        {
          via: scaleColor()
        }
      ],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [
        {
          to: scaleColor()
        }
      ],
      // ---------------
      // --- Borders ---
      // ---------------
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [
        {
          rounded: scaleRadius()
        }
      ],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [
        {
          "rounded-s": scaleRadius()
        }
      ],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [
        {
          "rounded-e": scaleRadius()
        }
      ],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [
        {
          "rounded-t": scaleRadius()
        }
      ],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [
        {
          "rounded-r": scaleRadius()
        }
      ],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [
        {
          "rounded-b": scaleRadius()
        }
      ],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [
        {
          "rounded-l": scaleRadius()
        }
      ],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [
        {
          "rounded-ss": scaleRadius()
        }
      ],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [
        {
          "rounded-se": scaleRadius()
        }
      ],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [
        {
          "rounded-ee": scaleRadius()
        }
      ],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [
        {
          "rounded-es": scaleRadius()
        }
      ],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [
        {
          "rounded-tl": scaleRadius()
        }
      ],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [
        {
          "rounded-tr": scaleRadius()
        }
      ],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [
        {
          "rounded-br": scaleRadius()
        }
      ],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [
        {
          "rounded-bl": scaleRadius()
        }
      ],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [
        {
          border: scaleBorderWidth()
        }
      ],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [
        {
          "border-x": scaleBorderWidth()
        }
      ],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [
        {
          "border-y": scaleBorderWidth()
        }
      ],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [
        {
          "border-s": scaleBorderWidth()
        }
      ],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [
        {
          "border-e": scaleBorderWidth()
        }
      ],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [
        {
          "border-t": scaleBorderWidth()
        }
      ],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [
        {
          "border-r": scaleBorderWidth()
        }
      ],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [
        {
          "border-b": scaleBorderWidth()
        }
      ],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [
        {
          "border-l": scaleBorderWidth()
        }
      ],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-x": [
        {
          "divide-x": scaleBorderWidth()
        }
      ],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-x-reverse": [
        "divide-x-reverse"
      ],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-y": [
        {
          "divide-y": scaleBorderWidth()
        }
      ],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */
      "divide-y-reverse": [
        "divide-y-reverse"
      ],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [
        {
          border: [
            ...scaleLineStyle(),
            "hidden",
            "none"
          ]
        }
      ],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style
       */
      "divide-style": [
        {
          divide: [
            ...scaleLineStyle(),
            "hidden",
            "none"
          ]
        }
      ],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [
        {
          border: scaleColor()
        }
      ],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [
        {
          "border-x": scaleColor()
        }
      ],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [
        {
          "border-y": scaleColor()
        }
      ],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [
        {
          "border-s": scaleColor()
        }
      ],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [
        {
          "border-e": scaleColor()
        }
      ],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [
        {
          "border-t": scaleColor()
        }
      ],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [
        {
          "border-r": scaleColor()
        }
      ],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [
        {
          "border-b": scaleColor()
        }
      ],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [
        {
          "border-l": scaleColor()
        }
      ],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [
        {
          divide: scaleColor()
        }
      ],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [
        {
          outline: [
            ...scaleLineStyle(),
            "none",
            "hidden"
          ]
        }
      ],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [
        {
          "outline-offset": [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [
        {
          outline: [
            "",
            isNumber,
            isArbitraryVariableLength,
            isArbitraryLength
          ]
        }
      ],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [
        {
          outline: scaleColor()
        }
      ],
      // ---------------
      // --- Effects ---
      // ---------------
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [
        {
          shadow: [
            // Deprecated since Tailwind CSS v4.0.0
            "",
            "none",
            themeShadow,
            isArbitraryVariableShadow,
            isArbitraryShadow
          ]
        }
      ],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color
       */
      "shadow-color": [
        {
          shadow: scaleColor()
        }
      ],
      /**
       * Inset Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow
       */
      "inset-shadow": [
        {
          "inset-shadow": [
            "none",
            themeInsetShadow,
            isArbitraryVariableShadow,
            isArbitraryShadow
          ]
        }
      ],
      /**
       * Inset Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color
       */
      "inset-shadow-color": [
        {
          "inset-shadow": scaleColor()
        }
      ],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring
       */
      "ring-w": [
        {
          ring: scaleBorderWidth()
        }
      ],
      /**
       * Ring Width Inset
       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */
      "ring-w-inset": [
        "ring-inset"
      ],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color
       */
      "ring-color": [
        {
          ring: scaleColor()
        }
      ],
      /**
       * Ring Offset Width
       * @see https://v3.tailwindcss.com/docs/ring-offset-width
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */
      "ring-offset-w": [
        {
          "ring-offset": [
            isNumber,
            isArbitraryLength
          ]
        }
      ],
      /**
       * Ring Offset Color
       * @see https://v3.tailwindcss.com/docs/ring-offset-color
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */
      "ring-offset-color": [
        {
          "ring-offset": scaleColor()
        }
      ],
      /**
       * Inset Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring
       */
      "inset-ring-w": [
        {
          "inset-ring": scaleBorderWidth()
        }
      ],
      /**
       * Inset Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color
       */
      "inset-ring-color": [
        {
          "inset-ring": scaleColor()
        }
      ],
      /**
       * Text Shadow
       * @see https://tailwindcss.com/docs/text-shadow
       */
      "text-shadow": [
        {
          "text-shadow": [
            "none",
            themeTextShadow,
            isArbitraryVariableShadow,
            isArbitraryShadow
          ]
        }
      ],
      /**
       * Text Shadow Color
       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color
       */
      "text-shadow-color": [
        {
          "text-shadow": scaleColor()
        }
      ],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [
        {
          opacity: [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [
        {
          "mix-blend": [
            ...scaleBlendMode(),
            "plus-darker",
            "plus-lighter"
          ]
        }
      ],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [
        {
          "bg-blend": scaleBlendMode()
        }
      ],
      /**
       * Mask Clip
       * @see https://tailwindcss.com/docs/mask-clip
       */
      "mask-clip": [
        {
          "mask-clip": [
            "border",
            "padding",
            "content",
            "fill",
            "stroke",
            "view"
          ]
        },
        "mask-no-clip"
      ],
      /**
       * Mask Composite
       * @see https://tailwindcss.com/docs/mask-composite
       */
      "mask-composite": [
        {
          mask: [
            "add",
            "subtract",
            "intersect",
            "exclude"
          ]
        }
      ],
      /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */
      "mask-image-linear-pos": [
        {
          "mask-linear": [
            isNumber
          ]
        }
      ],
      "mask-image-linear-from-pos": [
        {
          "mask-linear-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-linear-to-pos": [
        {
          "mask-linear-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-linear-from-color": [
        {
          "mask-linear-from": scaleColor()
        }
      ],
      "mask-image-linear-to-color": [
        {
          "mask-linear-to": scaleColor()
        }
      ],
      "mask-image-t-from-pos": [
        {
          "mask-t-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-t-to-pos": [
        {
          "mask-t-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-t-from-color": [
        {
          "mask-t-from": scaleColor()
        }
      ],
      "mask-image-t-to-color": [
        {
          "mask-t-to": scaleColor()
        }
      ],
      "mask-image-r-from-pos": [
        {
          "mask-r-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-r-to-pos": [
        {
          "mask-r-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-r-from-color": [
        {
          "mask-r-from": scaleColor()
        }
      ],
      "mask-image-r-to-color": [
        {
          "mask-r-to": scaleColor()
        }
      ],
      "mask-image-b-from-pos": [
        {
          "mask-b-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-b-to-pos": [
        {
          "mask-b-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-b-from-color": [
        {
          "mask-b-from": scaleColor()
        }
      ],
      "mask-image-b-to-color": [
        {
          "mask-b-to": scaleColor()
        }
      ],
      "mask-image-l-from-pos": [
        {
          "mask-l-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-l-to-pos": [
        {
          "mask-l-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-l-from-color": [
        {
          "mask-l-from": scaleColor()
        }
      ],
      "mask-image-l-to-color": [
        {
          "mask-l-to": scaleColor()
        }
      ],
      "mask-image-x-from-pos": [
        {
          "mask-x-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-x-to-pos": [
        {
          "mask-x-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-x-from-color": [
        {
          "mask-x-from": scaleColor()
        }
      ],
      "mask-image-x-to-color": [
        {
          "mask-x-to": scaleColor()
        }
      ],
      "mask-image-y-from-pos": [
        {
          "mask-y-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-y-to-pos": [
        {
          "mask-y-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-y-from-color": [
        {
          "mask-y-from": scaleColor()
        }
      ],
      "mask-image-y-to-color": [
        {
          "mask-y-to": scaleColor()
        }
      ],
      "mask-image-radial": [
        {
          "mask-radial": [
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      "mask-image-radial-from-pos": [
        {
          "mask-radial-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-radial-to-pos": [
        {
          "mask-radial-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-radial-from-color": [
        {
          "mask-radial-from": scaleColor()
        }
      ],
      "mask-image-radial-to-color": [
        {
          "mask-radial-to": scaleColor()
        }
      ],
      "mask-image-radial-shape": [
        {
          "mask-radial": [
            "circle",
            "ellipse"
          ]
        }
      ],
      "mask-image-radial-size": [
        {
          "mask-radial": [
            {
              closest: [
                "side",
                "corner"
              ],
              farthest: [
                "side",
                "corner"
              ]
            }
          ]
        }
      ],
      "mask-image-radial-pos": [
        {
          "mask-radial-at": scalePosition()
        }
      ],
      "mask-image-conic-pos": [
        {
          "mask-conic": [
            isNumber
          ]
        }
      ],
      "mask-image-conic-from-pos": [
        {
          "mask-conic-from": scaleMaskImagePosition()
        }
      ],
      "mask-image-conic-to-pos": [
        {
          "mask-conic-to": scaleMaskImagePosition()
        }
      ],
      "mask-image-conic-from-color": [
        {
          "mask-conic-from": scaleColor()
        }
      ],
      "mask-image-conic-to-color": [
        {
          "mask-conic-to": scaleColor()
        }
      ],
      /**
       * Mask Mode
       * @see https://tailwindcss.com/docs/mask-mode
       */
      "mask-mode": [
        {
          mask: [
            "alpha",
            "luminance",
            "match"
          ]
        }
      ],
      /**
       * Mask Origin
       * @see https://tailwindcss.com/docs/mask-origin
       */
      "mask-origin": [
        {
          "mask-origin": [
            "border",
            "padding",
            "content",
            "fill",
            "stroke",
            "view"
          ]
        }
      ],
      /**
       * Mask Position
       * @see https://tailwindcss.com/docs/mask-position
       */
      "mask-position": [
        {
          mask: scaleBgPosition()
        }
      ],
      /**
       * Mask Repeat
       * @see https://tailwindcss.com/docs/mask-repeat
       */
      "mask-repeat": [
        {
          mask: scaleBgRepeat()
        }
      ],
      /**
       * Mask Size
       * @see https://tailwindcss.com/docs/mask-size
       */
      "mask-size": [
        {
          mask: scaleBgSize()
        }
      ],
      /**
       * Mask Type
       * @see https://tailwindcss.com/docs/mask-type
       */
      "mask-type": [
        {
          "mask-type": [
            "alpha",
            "luminance"
          ]
        }
      ],
      /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */
      "mask-image": [
        {
          mask: [
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      // ---------------
      // --- Filters ---
      // ---------------
      /**
       * Filter
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [
        {
          filter: [
            // Deprecated since Tailwind CSS v3.0.0
            "",
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [
        {
          blur: scaleBlur()
        }
      ],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [
        {
          brightness: [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [
        {
          contrast: [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [
        {
          "drop-shadow": [
            // Deprecated since Tailwind CSS v4.0.0
            "",
            "none",
            themeDropShadow,
            isArbitraryVariableShadow,
            isArbitraryShadow
          ]
        }
      ],
      /**
       * Drop Shadow Color
       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color
       */
      "drop-shadow-color": [
        {
          "drop-shadow": scaleColor()
        }
      ],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [
        {
          grayscale: [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [
        {
          "hue-rotate": [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [
        {
          invert: [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [
        {
          saturate: [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [
        {
          sepia: [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Filter
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [
        {
          "backdrop-filter": [
            // Deprecated since Tailwind CSS v3.0.0
            "",
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [
        {
          "backdrop-blur": scaleBlur()
        }
      ],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [
        {
          "backdrop-brightness": [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [
        {
          "backdrop-contrast": [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [
        {
          "backdrop-grayscale": [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [
        {
          "backdrop-hue-rotate": [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [
        {
          "backdrop-invert": [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [
        {
          "backdrop-opacity": [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [
        {
          "backdrop-saturate": [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [
        {
          "backdrop-sepia": [
            "",
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      // --------------
      // --- Tables ---
      // --------------
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [
        {
          border: [
            "collapse",
            "separate"
          ]
        }
      ],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [
        {
          "border-spacing": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [
        {
          "border-spacing-x": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [
        {
          "border-spacing-y": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [
        {
          table: [
            "auto",
            "fixed"
          ]
        }
      ],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [
        {
          caption: [
            "top",
            "bottom"
          ]
        }
      ],
      // ---------------------------------
      // --- Transitions and Animation ---
      // ---------------------------------
      /**
       * Transition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [
        {
          transition: [
            "",
            "all",
            "colors",
            "opacity",
            "shadow",
            "transform",
            "none",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Transition Behavior
       * @see https://tailwindcss.com/docs/transition-behavior
       */
      "transition-behavior": [
        {
          transition: [
            "normal",
            "discrete"
          ]
        }
      ],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [
        {
          duration: [
            isNumber,
            "initial",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [
        {
          ease: [
            "linear",
            "initial",
            themeEase,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [
        {
          delay: [
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [
        {
          animate: [
            "none",
            themeAnimate,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      // ------------------
      // --- Transforms ---
      // ------------------
      /**
       * Backface Visibility
       * @see https://tailwindcss.com/docs/backface-visibility
       */
      backface: [
        {
          backface: [
            "hidden",
            "visible"
          ]
        }
      ],
      /**
       * Perspective
       * @see https://tailwindcss.com/docs/perspective
       */
      perspective: [
        {
          perspective: [
            themePerspective,
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Perspective Origin
       * @see https://tailwindcss.com/docs/perspective-origin
       */
      "perspective-origin": [
        {
          "perspective-origin": scalePositionWithArbitrary()
        }
      ],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [
        {
          rotate: scaleRotate()
        }
      ],
      /**
       * Rotate X
       * @see https://tailwindcss.com/docs/rotate
       */
      "rotate-x": [
        {
          "rotate-x": scaleRotate()
        }
      ],
      /**
       * Rotate Y
       * @see https://tailwindcss.com/docs/rotate
       */
      "rotate-y": [
        {
          "rotate-y": scaleRotate()
        }
      ],
      /**
       * Rotate Z
       * @see https://tailwindcss.com/docs/rotate
       */
      "rotate-z": [
        {
          "rotate-z": scaleRotate()
        }
      ],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [
        {
          scale: scaleScale()
        }
      ],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [
        {
          "scale-x": scaleScale()
        }
      ],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [
        {
          "scale-y": scaleScale()
        }
      ],
      /**
       * Scale Z
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-z": [
        {
          "scale-z": scaleScale()
        }
      ],
      /**
       * Scale 3D
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-3d": [
        "scale-3d"
      ],
      /**
       * Skew
       * @see https://tailwindcss.com/docs/skew
       */
      skew: [
        {
          skew: scaleSkew()
        }
      ],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [
        {
          "skew-x": scaleSkew()
        }
      ],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [
        {
          "skew-y": scaleSkew()
        }
      ],
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [
        {
          transform: [
            isArbitraryVariable,
            isArbitraryValue,
            "",
            "none",
            "gpu",
            "cpu"
          ]
        }
      ],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [
        {
          origin: scalePositionWithArbitrary()
        }
      ],
      /**
       * Transform Style
       * @see https://tailwindcss.com/docs/transform-style
       */
      "transform-style": [
        {
          transform: [
            "3d",
            "flat"
          ]
        }
      ],
      /**
       * Translate
       * @see https://tailwindcss.com/docs/translate
       */
      translate: [
        {
          translate: scaleTranslate()
        }
      ],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [
        {
          "translate-x": scaleTranslate()
        }
      ],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [
        {
          "translate-y": scaleTranslate()
        }
      ],
      /**
       * Translate Z
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-z": [
        {
          "translate-z": scaleTranslate()
        }
      ],
      /**
       * Translate None
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-none": [
        "translate-none"
      ],
      // ---------------------
      // --- Interactivity ---
      // ---------------------
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [
        {
          accent: scaleColor()
        }
      ],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [
        {
          appearance: [
            "none",
            "auto"
          ]
        }
      ],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [
        {
          caret: scaleColor()
        }
      ],
      /**
       * Color Scheme
       * @see https://tailwindcss.com/docs/color-scheme
       */
      "color-scheme": [
        {
          scheme: [
            "normal",
            "dark",
            "light",
            "light-dark",
            "only-dark",
            "only-light"
          ]
        }
      ],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [
        {
          cursor: [
            "auto",
            "default",
            "pointer",
            "wait",
            "text",
            "move",
            "help",
            "not-allowed",
            "none",
            "context-menu",
            "progress",
            "cell",
            "crosshair",
            "vertical-text",
            "alias",
            "copy",
            "no-drop",
            "grab",
            "grabbing",
            "all-scroll",
            "col-resize",
            "row-resize",
            "n-resize",
            "e-resize",
            "s-resize",
            "w-resize",
            "ne-resize",
            "nw-resize",
            "se-resize",
            "sw-resize",
            "ew-resize",
            "ns-resize",
            "nesw-resize",
            "nwse-resize",
            "zoom-in",
            "zoom-out",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      /**
       * Field Sizing
       * @see https://tailwindcss.com/docs/field-sizing
       */
      "field-sizing": [
        {
          "field-sizing": [
            "fixed",
            "content"
          ]
        }
      ],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [
        {
          "pointer-events": [
            "auto",
            "none"
          ]
        }
      ],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [
        {
          resize: [
            "none",
            "",
            "y",
            "x"
          ]
        }
      ],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [
        {
          scroll: [
            "auto",
            "smooth"
          ]
        }
      ],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [
        {
          "scroll-m": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [
        {
          "scroll-mx": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [
        {
          "scroll-my": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [
        {
          "scroll-ms": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [
        {
          "scroll-me": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [
        {
          "scroll-mt": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [
        {
          "scroll-mr": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [
        {
          "scroll-mb": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [
        {
          "scroll-ml": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [
        {
          "scroll-p": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [
        {
          "scroll-px": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [
        {
          "scroll-py": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [
        {
          "scroll-ps": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [
        {
          "scroll-pe": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [
        {
          "scroll-pt": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [
        {
          "scroll-pr": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [
        {
          "scroll-pb": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [
        {
          "scroll-pl": scaleUnambiguousSpacing()
        }
      ],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [
        {
          snap: [
            "start",
            "end",
            "center",
            "align-none"
          ]
        }
      ],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [
        {
          snap: [
            "normal",
            "always"
          ]
        }
      ],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [
        {
          snap: [
            "none",
            "x",
            "y",
            "both"
          ]
        }
      ],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [
        {
          snap: [
            "mandatory",
            "proximity"
          ]
        }
      ],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [
        {
          touch: [
            "auto",
            "none",
            "manipulation"
          ]
        }
      ],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [
        {
          "touch-pan": [
            "x",
            "left",
            "right"
          ]
        }
      ],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [
        {
          "touch-pan": [
            "y",
            "up",
            "down"
          ]
        }
      ],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": [
        "touch-pinch-zoom"
      ],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [
        {
          select: [
            "none",
            "text",
            "all",
            "auto"
          ]
        }
      ],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [
        {
          "will-change": [
            "auto",
            "scroll",
            "contents",
            "transform",
            isArbitraryVariable,
            isArbitraryValue
          ]
        }
      ],
      // -----------
      // --- SVG ---
      // -----------
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [
        {
          fill: [
            "none",
            ...scaleColor()
          ]
        }
      ],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [
        {
          stroke: [
            isNumber,
            isArbitraryVariableLength,
            isArbitraryLength,
            isArbitraryNumber
          ]
        }
      ],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [
        {
          stroke: [
            "none",
            ...scaleColor()
          ]
        }
      ],
      // ---------------------
      // --- Accessibility ---
      // ---------------------
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [
        {
          "forced-color-adjust": [
            "auto",
            "none"
          ]
        }
      ]
    },
    conflictingClassGroups: {
      overflow: [
        "overflow-x",
        "overflow-y"
      ],
      overscroll: [
        "overscroll-x",
        "overscroll-y"
      ],
      inset: [
        "inset-x",
        "inset-y",
        "start",
        "end",
        "top",
        "right",
        "bottom",
        "left"
      ],
      "inset-x": [
        "right",
        "left"
      ],
      "inset-y": [
        "top",
        "bottom"
      ],
      flex: [
        "basis",
        "grow",
        "shrink"
      ],
      gap: [
        "gap-x",
        "gap-y"
      ],
      p: [
        "px",
        "py",
        "ps",
        "pe",
        "pt",
        "pr",
        "pb",
        "pl"
      ],
      px: [
        "pr",
        "pl"
      ],
      py: [
        "pt",
        "pb"
      ],
      m: [
        "mx",
        "my",
        "ms",
        "me",
        "mt",
        "mr",
        "mb",
        "ml"
      ],
      mx: [
        "mr",
        "ml"
      ],
      my: [
        "mt",
        "mb"
      ],
      size: [
        "w",
        "h"
      ],
      "font-size": [
        "leading"
      ],
      "fvn-normal": [
        "fvn-ordinal",
        "fvn-slashed-zero",
        "fvn-figure",
        "fvn-spacing",
        "fvn-fraction"
      ],
      "fvn-ordinal": [
        "fvn-normal"
      ],
      "fvn-slashed-zero": [
        "fvn-normal"
      ],
      "fvn-figure": [
        "fvn-normal"
      ],
      "fvn-spacing": [
        "fvn-normal"
      ],
      "fvn-fraction": [
        "fvn-normal"
      ],
      "line-clamp": [
        "display",
        "overflow"
      ],
      rounded: [
        "rounded-s",
        "rounded-e",
        "rounded-t",
        "rounded-r",
        "rounded-b",
        "rounded-l",
        "rounded-ss",
        "rounded-se",
        "rounded-ee",
        "rounded-es",
        "rounded-tl",
        "rounded-tr",
        "rounded-br",
        "rounded-bl"
      ],
      "rounded-s": [
        "rounded-ss",
        "rounded-es"
      ],
      "rounded-e": [
        "rounded-se",
        "rounded-ee"
      ],
      "rounded-t": [
        "rounded-tl",
        "rounded-tr"
      ],
      "rounded-r": [
        "rounded-tr",
        "rounded-br"
      ],
      "rounded-b": [
        "rounded-br",
        "rounded-bl"
      ],
      "rounded-l": [
        "rounded-tl",
        "rounded-bl"
      ],
      "border-spacing": [
        "border-spacing-x",
        "border-spacing-y"
      ],
      "border-w": [
        "border-w-x",
        "border-w-y",
        "border-w-s",
        "border-w-e",
        "border-w-t",
        "border-w-r",
        "border-w-b",
        "border-w-l"
      ],
      "border-w-x": [
        "border-w-r",
        "border-w-l"
      ],
      "border-w-y": [
        "border-w-t",
        "border-w-b"
      ],
      "border-color": [
        "border-color-x",
        "border-color-y",
        "border-color-s",
        "border-color-e",
        "border-color-t",
        "border-color-r",
        "border-color-b",
        "border-color-l"
      ],
      "border-color-x": [
        "border-color-r",
        "border-color-l"
      ],
      "border-color-y": [
        "border-color-t",
        "border-color-b"
      ],
      translate: [
        "translate-x",
        "translate-y",
        "translate-none"
      ],
      "translate-none": [
        "translate",
        "translate-x",
        "translate-y",
        "translate-z"
      ],
      "scroll-m": [
        "scroll-mx",
        "scroll-my",
        "scroll-ms",
        "scroll-me",
        "scroll-mt",
        "scroll-mr",
        "scroll-mb",
        "scroll-ml"
      ],
      "scroll-mx": [
        "scroll-mr",
        "scroll-ml"
      ],
      "scroll-my": [
        "scroll-mt",
        "scroll-mb"
      ],
      "scroll-p": [
        "scroll-px",
        "scroll-py",
        "scroll-ps",
        "scroll-pe",
        "scroll-pt",
        "scroll-pr",
        "scroll-pb",
        "scroll-pl"
      ],
      "scroll-px": [
        "scroll-pr",
        "scroll-pl"
      ],
      "scroll-py": [
        "scroll-pt",
        "scroll-pb"
      ],
      touch: [
        "touch-x",
        "touch-y",
        "touch-pz"
      ],
      "touch-x": [
        "touch"
      ],
      "touch-y": [
        "touch"
      ],
      "touch-pz": [
        "touch"
      ]
    },
    conflictingClassGroupModifiers: {
      "font-size": [
        "leading"
      ]
    },
    orderSensitiveModifiers: [
      "*",
      "**",
      "after",
      "backdrop",
      "before",
      "details-content",
      "file",
      "first-letter",
      "first-line",
      "marker",
      "placeholder",
      "selection"
    ]
  };
};
var mergeConfigs = (baseConfig, { cacheSize, prefix, experimentalParseClassName, extend = {}, override = {} }) => {
  overrideProperty(baseConfig, "cacheSize", cacheSize);
  overrideProperty(baseConfig, "prefix", prefix);
  overrideProperty(baseConfig, "experimentalParseClassName", experimentalParseClassName);
  overrideConfigProperties(baseConfig.theme, override.theme);
  overrideConfigProperties(baseConfig.classGroups, override.classGroups);
  overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);
  overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);
  overrideProperty(baseConfig, "orderSensitiveModifiers", override.orderSensitiveModifiers);
  mergeConfigProperties(baseConfig.theme, extend.theme);
  mergeConfigProperties(baseConfig.classGroups, extend.classGroups);
  mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);
  mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);
  mergeArrayProperties(baseConfig, extend, "orderSensitiveModifiers");
  return baseConfig;
};
var overrideProperty = (baseObject, overrideKey, overrideValue) => {
  if (overrideValue !== void 0) {
    baseObject[overrideKey] = overrideValue;
  }
};
var overrideConfigProperties = (baseObject, overrideObject) => {
  if (overrideObject) {
    for (const key2 in overrideObject) {
      overrideProperty(baseObject, key2, overrideObject[key2]);
    }
  }
};
var mergeConfigProperties = (baseObject, mergeObject) => {
  if (mergeObject) {
    for (const key2 in mergeObject) {
      mergeArrayProperties(baseObject, mergeObject, key2);
    }
  }
};
var mergeArrayProperties = (baseObject, mergeObject, key2) => {
  const mergeValue = mergeObject[key2];
  if (mergeValue !== void 0) {
    baseObject[key2] = baseObject[key2] ? baseObject[key2].concat(mergeValue) : mergeValue;
  }
};
var extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === "function" ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);
var twMerge = /* @__PURE__ */ createTailwindMerge(getDefaultConfig);

// node_modules/.deno/tailwind-variants@3.1.1/node_modules/tailwind-variants/dist/index.js
var f5 = (e4) => x4(e4) ? twMerge : extendTailwindMerge({
  ...e4,
  extend: {
    theme: e4.theme,
    classGroups: e4.classGroups,
    conflictingClassGroupModifiers: e4.conflictingClassGroupModifiers,
    conflictingClassGroups: e4.conflictingClassGroups,
    ...e4.extend
  }
});
var i5 = (...e4) => (a5) => {
  let t4 = u5(e4);
  return !t4 || !a5.twMerge ? t4 : ((!S2.cachedTwMerge || S2.didTwMergeConfigChange) && (S2.didTwMergeConfigChange = false, S2.cachedTwMerge = f5(S2.cachedTwMergeConfig)), S2.cachedTwMerge(t4) || void 0);
};
var { createTV: C3, tv: T4 } = le(i5);

// src/design/Buttons.tsx
var btn = T4({
  base: "inline-flex items-center justify-center shadow-sm transition-colors disabled:opacity-50 disabled:pointer-events-none",
  variants: {
    type: {
      xs: "px-2 py-[2px] rounded-[2px] text-xs text-white",
      sm: "px-3 py-1 rounded-[2px] text-sm text-white",
      md: "px-4 py-2 text-sm bg-neutral-900 text-white hover:bg-neutral-800",
      lg: "h-10 px-4 text-base bg-neutral-900 text-white hover:bg-neutral-800"
    },
    color: {
      emerald: "text-white bg-emerald-700 hover:bg-emerald-500",
      ghost: "bg-transparent hover:bg-transparent hover:ring-1 hover:ring-neutral-200"
    },
    font: {
      mono: "font-mono",
      sans: "font-sans"
    }
  },
  defaultVariants: {
    type: "md",
    color: "emerald",
    font: "mono"
  }
});

// src/design/content.ts
var content = T4({
  base: "px-3",
  variants: {
    frame: {
      true: "ring-2 ring-gray-500/50 rounded-sm px-0 mx-3"
    },
    y: {
      "3": "py-3"
    },
    x: {
      "3": "px-3"
    }
  }
});

// src/design/text.ts
var title = T4({
  base: "font-mono text-xs tracking-wider",
  variants: {
    type: {
      main: "text-stone-900",
      sub: "text-stone-900/60"
    },
    uppercase: {
      true: "uppercase"
    }
  },
  defaultVariants: {
    type: "main"
  }
});

// src/AppPreferences.tsx
var defaultAliasMap = {
  prefs: "prefs",
  secrets: "secrets"
};
var prefsKv = kvTable("preferences");
var defaultPrefs = {
  tugboat: {
    git_protocol: "ssh",
    tugboat_theme: "vs-dark",
    monaco_theme: "vs-dark"
  },
  apps: [
    {
      alias: "re",
      github_url: "https://github.com/rsbear/tugboat/tree/main/test_mini_react"
    },
    {
      alias: "sv",
      github_url: "https://github.com/rsbear/tugboat/tree/main/test_mini_sv"
    }
  ],
  clones: [
    {
      alias: "reactapp",
      github_url: "https://github.com/rsbear/tugboat/tree/main/test_mini_react"
    },
    {
      alias: "svelteapp",
      github_url: "https://github.com/rsbear/tugboat/tree/main/test_mini_sv"
    }
  ]
};
var PrefsCtx = Q({
  appPrefs: defaultPrefs,
  aliasMap: defaultAliasMap,
  setPrefs: () => {
  },
  loadPrefsFromKv: async () => await Promise.resolve()
});
var useAliasMapCtx = () => {
  const { aliasMap } = x2(PrefsCtx);
  if (!aliasMap) throw new Error("no alias map");
  return aliasMap;
};
function AppPreferencesCtxProvider(props) {
  const [appPrefs, setPrefs] = d2(defaultPrefs);
  const loadPrefsFromKv = async () => {
    const res = await prefsKv.get([
      "user"
    ]);
    if (res._tag !== "Ok") return;
    if (res._type !== "Item") return;
    setPrefs(res.result.value);
  };
  y2(() => {
    loadPrefsFromKv().then(() => {
    });
  }, []);
  const aliasMap = T2(() => {
    let mapped = defaultAliasMap;
    appPrefs?.apps.forEach((app) => {
      mapped = {
        ...mapped,
        [app.alias]: "app"
      };
    });
    appPrefs?.clones.forEach((clone2) => {
      mapped = {
        ...mapped,
        [clone2.alias]: "clone"
      };
    });
    return mapped;
  }, [
    appPrefs
  ]);
  return /* @__PURE__ */ u2(PrefsCtx.Provider, {
    value: {
      appPrefs,
      aliasMap,
      setPrefs,
      loadPrefsFromKv
    },
    children: props.children
  });
}
async function handleRepositoryCloning(clones, gitProtocol) {
  const unlisten = await window.__TAURI__.event.listen("tugboats://clone-progress", (event) => {
    console.log("Clone progress:", event.payload);
  });
  try {
    console.log(`Found ${clones.length} repositories to process`);
    for (let i6 = 0; i6 < clones.length; i6++) {
      const clone2 = clones[i6];
      if (!clone2.github_url) {
        console.warn(`Skipping entry ${i6 + 1}: missing github_url`, clone2);
        continue;
      }
      const dirPath = clone2.dir || "~/tugboat_apps";
      const repoName = clone2.alias || extractRepoNameFromUrl(clone2.github_url);
      console.log(`[${i6 + 1}/${clones.length}] Processing: ${repoName}`);
      console.log(`Target directory: ${dirPath}`);
      try {
        await window.__TAURI__.core.invoke("clone_repo", {
          githubUrl: clone2.github_url,
          dirPath,
          gitProtocol: gitProtocol || "https"
        });
        console.log(`Completed: ${repoName}`);
      } catch (error) {
        console.error(`Failed to clone ${repoName}:`, error);
      }
    }
  } finally {
    unlisten();
  }
}
async function handleAppsCloning(apps, gitProtocol) {
  const unlisten = await window.__TAURI__.event.listen("tugboats://clone-progress", (event) => {
    console.log("Apps clone progress:", event.payload);
  });
  try {
    console.log(`Found ${apps.length} apps to process`);
    for (let i6 = 0; i6 < apps.length; i6++) {
      const app = apps[i6];
      if (!app.github_url) {
        console.warn(`Skipping app ${i6 + 1}: missing github_url`, app);
        continue;
      }
      let parsedInfo;
      try {
        parsedInfo = await window.__TAURI__.core.invoke("parse_github_url", {
          githubUrl: app.github_url
        });
      } catch (e4) {
        console.log(`Failed to parse app URL:`, e4);
        continue;
      }
      const repoName = parsedInfo.repo;
      const repoRootDir = `~/.tugboats/tmp/${repoName}`;
      console.log(`[${i6 + 1}/${apps.length}] Processing app: ${repoName}`);
      console.log(`Repo clone target: ${repoRootDir}`);
      try {
        await window.__TAURI__.core.invoke("clone_app", {
          githubUrl: app.github_url,
          gitProtocol: gitProtocol || "https"
        });
        console.log(`Completed app clone: ${repoName}`);
        console.log(` Bundling app at ${repoRootDir} ...`);
        const bundleAlias = app.alias || repoName;
        const bundlePath = await window.__TAURI__.core.invoke("bundle_app", {
          appDir: repoRootDir,
          alias: bundleAlias,
          githubUrl: app.github_url
        });
        console.log(`Bundle ready: ${bundlePath}`);
      } catch (error) {
        console.error(`Failed to process app ${repoName}:`, error);
      }
    }
  } finally {
    unlisten();
  }
}
function extractRepoNameFromUrl(url) {
  try {
    const match = url.match(/github\.com[/:]([\w-]+)\/([\w.-]+)/);
    return match ? match[2].replace(".git", "") : url;
  } catch {
    return url;
  }
}
function PrefsEditor() {
  const { appPrefs, setPrefs, loadPrefsFromKv } = x2(PrefsCtx);
  const editorValue = useEditorValue(stringify4(appPrefs), "toml");
  const handleSavePrefs = async () => {
    const rawText = editorValue.getValue();
    try {
      const parsed = parse(rawText);
      await prefsKv.set([
        "user"
      ], parsed);
      setPrefs(parsed);
      await loadPrefsFromKv();
      const gitProtocol = parsed?.tugboat?.git_protocol || "https";
      if (parsed.clones && Array.isArray(parsed.clones)) {
        console.log("\u{1F680} Starting repository cloning process...");
        await handleRepositoryCloning(parsed.clones, gitProtocol);
        console.log("\u2705 Repository cloning process completed!");
      }
      if (parsed.apps && Array.isArray(parsed.apps)) {
        console.log("\u{1F680} Starting apps cloning into ~/.tugboats/tmp ...");
        await handleAppsCloning(parsed.apps, gitProtocol);
        console.log("\u2705 Apps cloning completed!");
      }
    } catch (err) {
      console.error("\u274C Invalid TOML", err);
    }
  };
  return /* @__PURE__ */ u2("div", {
    class: "flex flex-col gap-2",
    children: [
      /* @__PURE__ */ u2("div", {
        class: content({
          y: "3"
        }),
        children: /* @__PURE__ */ u2("div", {
          class: "flex justify-between items-center",
          children: [
            /* @__PURE__ */ u2("h2", {
              class: title({
                uppercase: true
              }),
              children: "Preferences"
            }),
            /* @__PURE__ */ u2("button", {
              class: btn({
                type: "sm"
              }),
              type: "button",
              onClick: handleSavePrefs,
              children: "Save"
            })
          ]
        })
      }),
      /* @__PURE__ */ u2("div", {
        class: content({
          frame: true
        }),
        children: /* @__PURE__ */ u2(Editor, {
          value: editorValue
        })
      })
    ]
  });
}

// src/MountDevApp.tsx
var { invoke: invoke2 } = window.__TAURI__.core;
var { listen } = window.__TAURI__.event;
function MountDevApp(props) {
  const currentAlias = props?.alias ?? "";
  const [status, setStatus] = d2("starting");
  const [logs, setLogs] = d2([]);
  const [showLogs, setShowLogs] = d2(true);
  const slotRef = A2(null);
  const cleanupRef = A2(null);
  const moduleRef = A2(null);
  const addLog = (type, content2) => {
    setLogs((prev) => [
      ...prev.slice(-199),
      {
        type,
        content: content2,
        timestamp: /* @__PURE__ */ new Date()
      }
    ]);
  };
  const unmountModule = async () => {
    if (cleanupRef.current) {
      try {
        await cleanupRef.current();
      } catch {
      }
      cleanupRef.current = null;
    }
    if (moduleRef.current) {
      try {
        const unmount = moduleRef.current.unmount || moduleRef.current.tugboatUnmount;
        if (typeof unmount === "function") {
          await unmount(slotRef.current);
        }
      } catch {
      }
    }
    if (slotRef.current) {
      slotRef.current.innerHTML = "";
    }
    moduleRef.current = null;
  };
  const loadDevBundle = async (alias) => {
    await unmountModule();
    if (!slotRef.current) return;
    try {
      const home = await invoke2("get_home_dir");
      const bundlePath = `${home}/.tugboats/bundles/${alias}-dev.js`;
      const bundleContent = await invoke2("read_text_file", {
        path: bundlePath
      });
      const blob = new Blob([
        bundleContent
      ], {
        type: "application/javascript"
      });
      const bundleUrl = URL.createObjectURL(blob);
      const mod = await import(
        /* @vite-ignore */
        bundleUrl
      );
      URL.revokeObjectURL(bundleUrl);
      if (!mod) return;
      moduleRef.current = mod;
      const mount = mod.tugboatReact || mod.tugboatSvelte || mod.mount || mod.default;
      if (typeof mount === "function") {
        const dispose = await mount(slotRef.current);
        if (typeof dispose === "function") {
          cleanupRef.current = dispose;
        }
        setStatus("active");
      } else {
        throw new Error("No mount function exported from dev module");
      }
    } catch (e4) {
      console.error("Failed to load dev bundle:", e4);
      addLog("error", `Failed to load bundle: ${e4}`);
      setStatus("error");
    }
  };
  y2(() => {
    if (!currentAlias) return;
    let unlisteners = [];
    const startDev = async () => {
      try {
        addLog("info", `\u{1F680} Starting Vite dev server for "${currentAlias}"...`);
        await invoke2("start_dev", {
          alias: currentAlias
        });
      } catch (err) {
        console.error("Failed to start dev mode:", err);
        addLog("error", `Failed to start dev mode: ${err}`);
        setStatus("error");
      }
    };
    const setupListeners = async () => {
      const unlisten1 = await listen("dev:build_started", (event) => {
        addLog("info", `\u{1F528} Building ${event.payload}...`);
      });
      const unlisten2 = await listen("dev:build_completed", async (event) => {
        addLog("success", `\u2705 Build completed for ${event.payload}`);
        await loadDevBundle(event.payload);
      });
      const unlisten3 = await listen("dev:build_error", (event) => {
        const [alias, error] = event.payload;
        addLog("error", `\u274C Build failed for ${alias}:`);
        addLog("error", error);
        setStatus("error");
      });
      const unlisten4 = await listen("dev:ready", async (event) => {
        addLog("info", `\u{1F680} Dev mode ready for ${event.payload}`);
        await loadDevBundle(event.payload);
      });
      const unlisten5 = await listen("dev:build_success", async (event) => {
        if (event.payload === currentAlias) {
          await loadDevBundle(event.payload);
        }
      });
      const unlisten6 = await listen("dev:stopped", async () => {
        await unmountModule();
        setStatus("error");
      });
      unlisteners = [
        unlisten1,
        unlisten2,
        unlisten3,
        unlisten4,
        unlisten5,
        unlisten6
      ];
    };
    setupListeners();
    startDev();
    return () => {
      invoke2("stop_dev").catch(console.error);
      unmountModule();
      unlisteners.forEach((u6) => u6());
    };
  }, [
    currentAlias
  ]);
  if (!currentAlias) return null;
  const statusEmoji = status === "starting" ? "\u{1F680}" : status === "active" ? "\u{1F441}\uFE0F" : "\u274C";
  const statusText = status === "starting" ? "Starting..." : status === "active" ? "Active" : "Error";
  return /* @__PURE__ */ u2("div", {
    className: "dev-mode-container",
    children: [
      /* @__PURE__ */ u2("div", {
        className: `dev-mode-indicator ${status}`,
        children: [
          statusEmoji,
          " Dev: ",
          currentAlias,
          " (",
          statusText,
          ")"
        ]
      }),
      /* @__PURE__ */ u2("div", {
        className: "dev-mode-logs",
        children: [
          /* @__PURE__ */ u2("div", {
            className: "dev-mode-logs-header",
            children: [
              /* @__PURE__ */ u2("span", {
                className: "dev-mode-logs-title",
                children: "Dev Mode Logs"
              }),
              /* @__PURE__ */ u2("button", {
                onClick: () => setShowLogs(!showLogs),
                children: showLogs ? "Hide" : "Show"
              }),
              /* @__PURE__ */ u2("button", {
                onClick: () => setLogs([]),
                children: "Clear"
              })
            ]
          }),
          showLogs && /* @__PURE__ */ u2("div", {
            className: "dev-mode-logs-content",
            children: logs.map((log, i6) => /* @__PURE__ */ u2("div", {
              className: `dev-log-entry dev-log-${log.type}`,
              children: [
                /* @__PURE__ */ u2("span", {
                  className: "dev-log-time",
                  children: log.timestamp.toLocaleTimeString()
                }),
                /* @__PURE__ */ u2("span", {
                  className: "dev-log-content",
                  children: log.content
                })
              ]
            }, i6))
          })
        ]
      }),
      /* @__PURE__ */ u2("div", {
        ref: slotRef,
        className: "tugboat-dev-slot"
      }),
      /* @__PURE__ */ u2("style", {
        children: `
        .dev-mode-indicator { background: #1e293b; color: #94a3b8; padding: 8px 12px; border-radius: 6px; font-size: 12px; font-weight: 500; margin: 8px 0; border-left: 4px solid #475569; }
        .dev-mode-indicator.starting { background: #0f172a; color: #60a5fa; border-left-color: #3b82f6; animation: pulse 2s infinite; }
        .dev-mode-indicator.active { background: #064e3b; color: #6ee7b7; border-left-color: #10b981; }
        .dev-mode-indicator.error { background: #7f1d1d; color: #fca5a5; border-left-color: #dc2626; }
        @keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.5; } }
        .dev-mode-logs { background: #0f172a; border: 1px solid #334155; border-radius: 8px; margin: 16px 0; max-height: 400px; display: flex; flex-direction: column; }
        .dev-mode-logs-header { display: flex; align-items: center; gap: 8px; padding: 12px 16px; background: #1e293b; border-bottom: 1px solid #334155; }
        .dev-mode-logs-title { color: #e2e8f0; font-weight: 500; flex: 1; }
        .dev-mode-logs-header button { background: #475569; color: #e2e8f0; border: none; padding: 4px 8px; border-radius: 4px; font-size: 12px; cursor: pointer; }
        .dev-mode-logs-header button:hover { background: #64748b; }
        .dev-mode-logs-content { flex: 1; padding: 8px; overflow-y: auto; max-height: 300px; font-family: monospace; font-size: 12px; line-height: 1.4; }
        .dev-log-entry { display: flex; gap: 8px; margin-bottom: 4px; }
        .dev-log-time { color: #64748b; font-size: 11px; min-width: 60px; }
        .dev-log-content { color: #e2e8f0; flex: 1; }
        .dev-log-error .dev-log-content { color: #fca5a5; }
      `
      })
    ]
  });
}

// src/MountProdApp.tsx
var { invoke: invoke3 } = window.__TAURI__.core;
function MountProdApp(props) {
  const slotRef = A2(null);
  const cleanupRef = A2(null);
  y2(() => {
    const alias = props.alias;
    if (!alias) return;
    let mounted = true;
    const mountBundle = async () => {
      try {
        console.log("\u{1F6A2} DEBUG: Invoking latest_bundle_for_alias with:", alias);
        const path = await invoke3("latest_bundle_for_alias", {
          alias
        });
        console.log("\u{1F6A2} DEBUG: Bundle path received:", path);
        const code = await invoke3("read_text_file", {
          path
        });
        console.log("\u{1F6A2} DEBUG: Bundle code length:", code?.length || 0);
        const blob = new Blob([
          code
        ], {
          type: "text/javascript"
        });
        const url = URL.createObjectURL(blob);
        console.log("\u{1F6A2} DEBUG: Created blob URL:", url);
        const mod = await import(url);
        console.log("\u{1F6A2} DEBUG: Module imported, exports:", Object.keys(mod));
        if (!mounted || !slotRef.current) return;
        const slot = slotRef.current;
        let cleanup = null;
        if (mod && typeof mod.harborMount === "function") {
          console.log("\u{1F6A2} DEBUG: Using harborMount");
          mod.harborMount(slot);
          if (typeof mod.unmount === "function") {
            cleanup = () => {
              try {
                mod.unmount();
              } catch {
              }
            };
          }
        } else if (mod && typeof mod.tugboatReact === "function") {
          console.log("\u{1F6A2} DEBUG: Using tugboatReact");
          const res = mod.tugboatReact(slot);
          if (typeof res === "function") cleanup = res;
        } else if (mod && typeof mod.tugboatSvelte === "function") {
          console.log("\u{1F6A2} DEBUG: Using tugboatSvelte");
          const res = mod.tugboatSvelte(slot);
          if (typeof res === "function") cleanup = res;
        } else if (mod && typeof mod.default === "function") {
          console.log("\u{1F6A2} DEBUG: Using default export");
          const res = mod.default(slot);
          if (typeof res === "function") cleanup = res;
        } else {
          console.warn("No recognized tugboat/harbor mount export found in bundle for alias:", alias);
        }
        cleanupRef.current = cleanup;
        console.log("\u{1F6A2} DEBUG: Successfully mounted tugboat for alias:", alias);
      } catch (err) {
        console.error("Failed to mount tugboat app for alias", alias, err);
      }
    };
    mountBundle();
    return () => {
      mounted = false;
      if (cleanupRef.current) {
        try {
          cleanupRef.current();
        } catch {
        }
        cleanupRef.current = null;
      }
      if (slotRef.current) {
        slotRef.current.innerHTML = "";
      }
    };
  }, [
    props.alias
  ]);
  return /* @__PURE__ */ u2("div", {
    children: [
      /* @__PURE__ */ u2("h2", {
        children: [
          "Production Tugboat: ",
          props.alias
        ]
      }),
      /* @__PURE__ */ u2("div", {
        ref: slotRef,
        id: "prod-tugboat-slot"
      })
    ]
  });
}

// src/App.tsx
var theInput = d3("");
var theAlias = d3("");
var AppContexts = (props) => /* @__PURE__ */ u2(MonacoCtxProvider, {
  children: /* @__PURE__ */ u2(AppPreferencesCtxProvider, {
    children: props.children
  })
});
function App() {
  const aliasMap = useAliasMapCtx();
  const aliasTag = (extractedAlias) => aliasMap[extractedAlias] ?? "";
  const onChange = (e4) => {
    input.set(e4.target.value);
    theInput.value = e4.target.value;
    const extractedAlias = e4.target.value.split(" ")[0];
    if (aliasTag(extractedAlias)) {
      theAlias.value = extractedAlias;
    } else {
      theAlias.value = "";
    }
  };
  return /* @__PURE__ */ u2(AppFrame, {
    children: /* @__PURE__ */ u2("div", {
      class: "flex flex-col",
      children: [
        /* @__PURE__ */ u2("div", {
          class: "flex-1"
        }),
        /* @__PURE__ */ u2("section", {
          class: "flex-0",
          children: [
            /* @__PURE__ */ u2(Show, {
              when: aliasTag(theAlias.value) === "prefs",
              children: /* @__PURE__ */ u2(PrefsEditor, {})
            }),
            /* @__PURE__ */ u2(Show, {
              when: aliasTag(theAlias.value) === "secrets",
              children: /* @__PURE__ */ u2(Secrets, {})
            }),
            /* @__PURE__ */ u2(Show, {
              when: aliasTag(theAlias.value) === "app",
              children: /* @__PURE__ */ u2(MountProdApp, {
                alias: theAlias.value
              })
            }),
            /* @__PURE__ */ u2(Show, {
              when: aliasTag(theAlias.value) === "clone",
              children: /* @__PURE__ */ u2(MountDevApp, {
                alias: theAlias.value
              })
            })
          ]
        }),
        /* @__PURE__ */ u2("div", {
          className: "w-full flex items-center flex-0",
          children: [
            /* @__PURE__ */ u2("form", {
              className: "flex-1 flex border-r border-black/20 p-2",
              id: "the-input-form",
              children: [
                /* @__PURE__ */ u2("input", {
                  id: "the-input",
                  className: "flex-1 active:outline-none focus:outline-none",
                  placeholder: "...",
                  autoCapitalize: "off",
                  autoComplete: "off",
                  autoCorrect: "off",
                  value: input.get().raw,
                  onChange
                }),
                /* @__PURE__ */ u2("button", {
                  className: "flex-0 justify-self-end",
                  type: "submit",
                  children: "Greet"
                })
              ]
            }),
            /* @__PURE__ */ u2("div", {
              id: "hints-slot",
              class: "p-2",
              children: /* @__PURE__ */ u2("span", {
                children: "hints"
              })
            })
          ]
        })
      ]
    })
  });
}
function AppFrame(props) {
  return /* @__PURE__ */ u2("div", {
    class: "p-2 min-h-full",
    children: /* @__PURE__ */ u2("div", {
      class: "ring-5 ring-gray-500/40 rounded-md",
      children: /* @__PURE__ */ u2("div", {
        class: "shadow-md rounded-sm bg-stone-100",
        children: props.children
      })
    })
  });
}
function Show(props) {
  if (!props.when) return null;
  return /* @__PURE__ */ u2(k, {
    children: props.children
  });
}
function Secrets() {
  return /* @__PURE__ */ u2("div", {
    children: /* @__PURE__ */ u2("h2", {
      children: "secrets"
    })
  });
}
G(/* @__PURE__ */ u2(P3, {
  fallback: /* @__PURE__ */ u2("div", {
    children: "Loading..."
  }),
  children: /* @__PURE__ */ u2(AppContexts, {
    children: /* @__PURE__ */ u2(App, {})
  })
}), document.getElementById("root"));
/*! Bundled license information:

modern-monaco/dist/shiki.mjs:
  (*! based on https://github.com/shikijs/shiki/blob/main/packages/monaco/src/index.ts *)

smol-toml/dist/error.js:
smol-toml/dist/util.js:
smol-toml/dist/date.js:
smol-toml/dist/primitive.js:
smol-toml/dist/extract.js:
smol-toml/dist/struct.js:
smol-toml/dist/parse.js:
smol-toml/dist/stringify.js:
smol-toml/dist/index.js:
  (*!
   * Copyright (c) Squirrel Chat et al., All rights reserved.
   * SPDX-License-Identifier: BSD-3-Clause
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions are met:
   *
   * 1. Redistributions of source code must retain the above copyright notice, this
   *    list of conditions and the following disclaimer.
   * 2. Redistributions in binary form must reproduce the above copyright notice,
   *    this list of conditions and the following disclaimer in the
   *    documentation and/or other materials provided with the distribution.
   * 3. Neither the name of the copyright holder nor the names of its contributors
   *    may be used to endorse or promote products derived from this software without
   *    specific prior written permission.
   *
   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *)
*/
